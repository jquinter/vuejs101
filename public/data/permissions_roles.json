[
  {
    "permission": "accessapproval.requests.approve",
    "roles": [
      "roles/accessapproval.approver",
      "roles/owner"
    ]
  },
  {
    "permission": "accessapproval.requests.dismiss",
    "roles": [
      "roles/accessapproval.approver",
      "roles/owner"
    ]
  },
  {
    "permission": "accessapproval.requests.get",
    "roles": [
      "roles/accessapproval.approver",
      "roles/accessapproval.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "accessapproval.requests.list",
    "roles": [
      "roles/accessapproval.approver",
      "roles/accessapproval.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "accessapproval.settings.get",
    "roles": [
      "roles/accessapproval.approver",
      "roles/accessapproval.configEditor",
      "roles/accessapproval.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "resourcemanager.projects.get",
    "roles": [
      "roles/accessapproval.approver",
      "roles/accessapproval.configEditor",
      "roles/accessapproval.viewer",
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/accesscontextmanager.policyReader",
      "roles/actions.Admin",
      "roles/actions.Viewer",
      "roles/apigee.admin",
      "roles/apigee.analyticsEditor",
      "roles/apigee.analyticsViewer",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/appengine.appAdmin",
      "roles/appengine.appViewer",
      "roles/appengine.codeViewer",
      "roles/appengine.deployer",
      "roles/appengine.serviceAdmin",
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.predictor",
      "roles/automl.viewer",
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.adminViewer",
      "roles/automlrecommendations.editor",
      "roles/automlrecommendations.viewer",
      "roles/axt.admin",
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/bigquery.dataViewer",
      "roles/bigquery.jobUser",
      "roles/bigquery.metadataViewer",
      "roles/bigquery.readSessionUser",
      "roles/bigquery.user",
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/bigtable.viewer",
      "roles/binaryauthorization.attestorsAdmin",
      "roles/binaryauthorization.attestorsEditor",
      "roles/binaryauthorization.attestorsVerifier",
      "roles/binaryauthorization.attestorsViewer",
      "roles/binaryauthorization.policyAdmin",
      "roles/binaryauthorization.policyEditor",
      "roles/binaryauthorization.policyViewer",
      "roles/browser",
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.builds.editor",
      "roles/cloudbuild.builds.viewer",
      "roles/cloudbuild.serviceAgent",
      "roles/cloudconfig.admin",
      "roles/cloudconfig.viewer",
      "roles/cloudfunctions.admin",
      "roles/cloudfunctions.developer",
      "roles/cloudfunctions.serviceAgent",
      "roles/cloudfunctions.viewer",
      "roles/cloudjobdiscovery.admin",
      "roles/cloudjobdiscovery.jobsEditor",
      "roles/cloudjobdiscovery.jobsViewer",
      "roles/cloudjobdiscovery.profilesEditor",
      "roles/cloudjobdiscovery.profilesViewer",
      "roles/cloudkms.admin",
      "roles/cloudkms.cryptoKeyDecrypter",
      "roles/cloudkms.cryptoKeyEncrypter",
      "roles/cloudkms.cryptoKeyEncrypterDecrypter",
      "roles/cloudkms.importer",
      "roles/cloudkms.publicKeyViewer",
      "roles/cloudkms.signer",
      "roles/cloudkms.signerVerifier",
      "roles/cloudmigration.inframanager",
      "roles/cloudprofiler.user",
      "roles/cloudscheduler.admin",
      "roles/cloudscheduler.jobRunner",
      "roles/cloudscheduler.viewer",
      "roles/cloudsecurityscanner.editor",
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/cloudsql.viewer",
      "roles/cloudtasks.admin",
      "roles/cloudtasks.enqueuer",
      "roles/cloudtasks.queueAdmin",
      "roles/cloudtasks.taskDeleter",
      "roles/cloudtasks.taskRunner",
      "roles/cloudtasks.viewer",
      "roles/cloudtestservice.testAdmin",
      "roles/cloudtestservice.testViewer",
      "roles/cloudtrace.admin",
      "roles/cloudtrace.user",
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/cloudtranslate.viewer",
      "roles/codelabapikeys.admin",
      "roles/codelabapikeys.editor",
      "roles/codelabapikeys.viewer",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.environmentAndStorageObjectViewer",
      "roles/composer.worker",
      "roles/compute.admin",
      "roles/compute.imageUser",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.orgSecurityPolicyUser",
      "roles/compute.orgSecurityResourceAdmin",
      "roles/compute.osAdminLogin",
      "roles/compute.osLogin",
      "roles/compute.packetMirroringAdmin",
      "roles/compute.packetMirroringUser",
      "roles/compute.securityAdmin",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/compute.xpnAdmin",
      "roles/container.admin",
      "roles/container.clusterAdmin",
      "roles/container.clusterViewer",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/containeranalysis.admin",
      "roles/containeranalysis.notes.editor",
      "roles/containeranalysis.notes.viewer",
      "roles/containeranalysis.occurrences.editor",
      "roles/containeranalysis.occurrences.viewer",
      "roles/datacatalog.admin",
      "roles/datacatalog.categoryAdmin",
      "roles/datacatalog.entryCreator",
      "roles/datacatalog.entryGroupCreator",
      "roles/datacatalog.entryGroupOwner",
      "roles/datacatalog.entryOwner",
      "roles/datacatalog.entryViewer",
      "roles/datacatalog.tagTemplateOwner",
      "roles/datacatalog.tagTemplateUser",
      "roles/datacatalog.tagTemplateViewer",
      "roles/datacatalog.viewer",
      "roles/dataflow.admin",
      "roles/dataflow.developer",
      "roles/dataflow.viewer",
      "roles/datafusion.admin",
      "roles/datafusion.serviceAgent",
      "roles/datafusion.viewer",
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/datalabeling.viewer",
      "roles/dataprep.projects.user",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.viewer",
      "roles/datastore.importExportAdmin",
      "roles/datastore.indexAdmin",
      "roles/datastore.owner",
      "roles/datastore.user",
      "roles/datastore.viewer",
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/deploymentmanager.typeViewer",
      "roles/deploymentmanager.viewer",
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/dns.admin",
      "roles/dns.reader",
      "roles/editor",
      "roles/endpoints.portalAdmin",
      "roles/firebase.admin",
      "roles/firebase.analyticsAdmin",
      "roles/firebase.analyticsViewer",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/firebaseabt.admin",
      "roles/firebaseabt.viewer",
      "roles/firebaseappdistro.admin",
      "roles/firebaseappdistro.viewer",
      "roles/firebaseauth.admin",
      "roles/firebaseauth.viewer",
      "roles/firebasecrash.symbolMappingsAdmin",
      "roles/firebasecrashlytics.admin",
      "roles/firebasecrashlytics.viewer",
      "roles/firebasedatabase.admin",
      "roles/firebasedatabase.viewer",
      "roles/firebasedynamiclinks.admin",
      "roles/firebasedynamiclinks.viewer",
      "roles/firebasehosting.admin",
      "roles/firebasehosting.viewer",
      "roles/firebaseinappmessaging.admin",
      "roles/firebaseinappmessaging.viewer",
      "roles/firebaseml.admin",
      "roles/firebaseml.viewer",
      "roles/firebasenotifications.admin",
      "roles/firebasenotifications.viewer",
      "roles/firebaseperformance.admin",
      "roles/firebaseperformance.viewer",
      "roles/firebasepredictions.admin",
      "roles/firebasepredictions.viewer",
      "roles/firebaserules.admin",
      "roles/firebaserules.viewer",
      "roles/gkehub.admin",
      "roles/gkehub.viewer",
      "roles/healthcare.annotationEditor",
      "roles/healthcare.annotationReader",
      "roles/healthcare.annotationStoreAdmin",
      "roles/healthcare.annotationStoreViewer",
      "roles/healthcare.datasetAdmin",
      "roles/healthcare.datasetViewer",
      "roles/healthcare.dicomEditor",
      "roles/healthcare.dicomStoreAdmin",
      "roles/healthcare.dicomStoreViewer",
      "roles/healthcare.dicomViewer",
      "roles/healthcare.fhirResourceEditor",
      "roles/healthcare.fhirResourceReader",
      "roles/healthcare.fhirStoreAdmin",
      "roles/healthcare.fhirStoreViewer",
      "roles/healthcare.hl7V2Consumer",
      "roles/healthcare.hl7V2Editor",
      "roles/healthcare.hl7V2Ingest",
      "roles/healthcare.hl7V2StoreAdmin",
      "roles/healthcare.hl7V2StoreViewer",
      "roles/iam.organizationRoleAdmin",
      "roles/iam.organizationRoleViewer",
      "roles/iam.roleAdmin",
      "roles/iam.roleViewer",
      "roles/iam.serviceAccountAdmin",
      "roles/iam.serviceAccountCreator",
      "roles/iam.serviceAccountDeleter",
      "roles/iam.serviceAccountKeyAdmin",
      "roles/iam.serviceAccountTokenCreator",
      "roles/iam.serviceAccountUser",
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/logging.privateLogViewer",
      "roles/logging.viewer",
      "roles/managedidentities.admin",
      "roles/managedidentities.domainAdmin",
      "roles/managedidentities.viewer",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.viewer",
      "roles/mobilecrashreporting.symbolMappingsAdmin",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.viewer",
      "roles/netappcloudvolumes.admin",
      "roles/netappcloudvolumes.viewer",
      "roles/notebooks.admin",
      "roles/notebooks.viewer",
      "roles/owner",
      "roles/proximitybeacon.attachmentEditor",
      "roles/proximitybeacon.attachmentPublisher",
      "roles/proximitybeacon.attachmentViewer",
      "roles/proximitybeacon.beaconEditor",
      "roles/pubsub.admin",
      "roles/pubsub.editor",
      "roles/pubsub.viewer",
      "roles/recommender.computeAdmin",
      "roles/recommender.computeViewer",
      "roles/recommender.iamAdmin",
      "roles/recommender.iamViewer",
      "roles/redis.admin",
      "roles/redis.editor",
      "roles/redis.viewer",
      "roles/redisenterprisecloud.admin",
      "roles/redisenterprisecloud.viewer",
      "roles/resourcemanager.folderAdmin",
      "roles/resourcemanager.folderCreator",
      "roles/resourcemanager.folderEditor",
      "roles/resourcemanager.folderViewer",
      "roles/resourcemanager.organizationAdmin",
      "roles/resourcemanager.projectIamAdmin",
      "roles/resourcemanager.projectMover",
      "roles/run.admin",
      "roles/run.viewer",
      "roles/secretmanager.admin",
      "roles/secretmanager.viewer",
      "roles/serverless.serviceAgent",
      "roles/servicemanagement.admin",
      "roles/servicemanagement.quotaAdmin",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.viewer",
      "roles/stackdriver.accounts.editor",
      "roles/stackdriver.accounts.viewer",
      "roles/storage.admin",
      "roles/storage.hmacKeyAdmin",
      "roles/storage.objectAdmin",
      "roles/storage.objectCreator",
      "roles/storage.objectViewer",
      "roles/storagetransfer.admin",
      "roles/storagetransfer.user",
      "roles/storagetransfer.viewer",
      "roles/subscribewithgoogledeveloper.developer",
      "roles/tpu.admin",
      "roles/tpu.viewer",
      "roles/viewer",
      "roles/vpaccess.user",
      "roles/vpaccess.viewer",
      "roles/vpcaccess.admin"
    ]
  },
  {
    "permission": "resourcemanager.projects.list",
    "roles": [
      "roles/accessapproval.approver",
      "roles/accessapproval.configEditor",
      "roles/accessapproval.viewer",
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/accesscontextmanager.policyReader",
      "roles/actions.Admin",
      "roles/actions.Viewer",
      "roles/apigee.admin",
      "roles/apigee.analyticsEditor",
      "roles/apigee.analyticsViewer",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/appengine.appAdmin",
      "roles/appengine.appViewer",
      "roles/appengine.codeViewer",
      "roles/appengine.deployer",
      "roles/appengine.serviceAdmin",
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.predictor",
      "roles/automl.viewer",
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.adminViewer",
      "roles/automlrecommendations.editor",
      "roles/automlrecommendations.viewer",
      "roles/axt.admin",
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/bigquery.dataViewer",
      "roles/bigquery.jobUser",
      "roles/bigquery.metadataViewer",
      "roles/bigquery.readSessionUser",
      "roles/bigquery.user",
      "roles/binaryauthorization.attestorsAdmin",
      "roles/binaryauthorization.attestorsEditor",
      "roles/binaryauthorization.attestorsVerifier",
      "roles/binaryauthorization.attestorsViewer",
      "roles/binaryauthorization.policyAdmin",
      "roles/binaryauthorization.policyEditor",
      "roles/binaryauthorization.policyViewer",
      "roles/browser",
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.builds.editor",
      "roles/cloudbuild.builds.viewer",
      "roles/cloudbuild.serviceAgent",
      "roles/cloudconfig.admin",
      "roles/cloudconfig.viewer",
      "roles/cloudjobdiscovery.admin",
      "roles/cloudjobdiscovery.jobsEditor",
      "roles/cloudjobdiscovery.jobsViewer",
      "roles/cloudjobdiscovery.profilesEditor",
      "roles/cloudjobdiscovery.profilesViewer",
      "roles/cloudprofiler.user",
      "roles/cloudscheduler.admin",
      "roles/cloudscheduler.jobRunner",
      "roles/cloudscheduler.viewer",
      "roles/cloudsecurityscanner.editor",
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/cloudsql.viewer",
      "roles/cloudtasks.admin",
      "roles/cloudtasks.enqueuer",
      "roles/cloudtasks.queueAdmin",
      "roles/cloudtasks.taskDeleter",
      "roles/cloudtasks.taskRunner",
      "roles/cloudtasks.viewer",
      "roles/cloudtestservice.testAdmin",
      "roles/cloudtestservice.testViewer",
      "roles/cloudtrace.admin",
      "roles/cloudtrace.user",
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/cloudtranslate.viewer",
      "roles/codelabapikeys.admin",
      "roles/codelabapikeys.editor",
      "roles/codelabapikeys.viewer",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.environmentAndStorageObjectViewer",
      "roles/composer.worker",
      "roles/compute.admin",
      "roles/compute.imageUser",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.orgSecurityPolicyUser",
      "roles/compute.orgSecurityResourceAdmin",
      "roles/compute.osAdminLogin",
      "roles/compute.osLogin",
      "roles/compute.packetMirroringAdmin",
      "roles/compute.packetMirroringUser",
      "roles/compute.securityAdmin",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/compute.xpnAdmin",
      "roles/container.admin",
      "roles/container.clusterAdmin",
      "roles/container.clusterViewer",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/containeranalysis.admin",
      "roles/containeranalysis.notes.editor",
      "roles/containeranalysis.notes.viewer",
      "roles/containeranalysis.occurrences.editor",
      "roles/containeranalysis.occurrences.viewer",
      "roles/datacatalog.admin",
      "roles/datacatalog.categoryAdmin",
      "roles/datacatalog.entryCreator",
      "roles/datacatalog.entryGroupCreator",
      "roles/datacatalog.entryGroupOwner",
      "roles/datacatalog.entryOwner",
      "roles/datacatalog.entryViewer",
      "roles/datacatalog.tagTemplateOwner",
      "roles/datacatalog.tagTemplateUser",
      "roles/datacatalog.tagTemplateViewer",
      "roles/datacatalog.viewer",
      "roles/dataflow.admin",
      "roles/dataflow.developer",
      "roles/dataflow.viewer",
      "roles/datafusion.admin",
      "roles/datafusion.serviceAgent",
      "roles/datafusion.viewer",
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/datalabeling.viewer",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.viewer",
      "roles/datastore.importExportAdmin",
      "roles/datastore.indexAdmin",
      "roles/datastore.owner",
      "roles/datastore.user",
      "roles/datastore.viewer",
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/deploymentmanager.typeViewer",
      "roles/deploymentmanager.viewer",
      "roles/dns.admin",
      "roles/dns.reader",
      "roles/editor",
      "roles/endpoints.portalAdmin",
      "roles/firebase.admin",
      "roles/firebase.analyticsAdmin",
      "roles/firebase.analyticsViewer",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/firebaseabt.admin",
      "roles/firebaseabt.viewer",
      "roles/firebaseappdistro.admin",
      "roles/firebaseappdistro.viewer",
      "roles/firebaseauth.admin",
      "roles/firebaseauth.viewer",
      "roles/firebasecrashlytics.admin",
      "roles/firebasecrashlytics.viewer",
      "roles/firebasedatabase.admin",
      "roles/firebasedatabase.viewer",
      "roles/firebasedynamiclinks.admin",
      "roles/firebasedynamiclinks.viewer",
      "roles/firebasehosting.admin",
      "roles/firebasehosting.viewer",
      "roles/firebaseinappmessaging.admin",
      "roles/firebaseinappmessaging.viewer",
      "roles/firebaseml.admin",
      "roles/firebaseml.viewer",
      "roles/firebasenotifications.admin",
      "roles/firebasenotifications.viewer",
      "roles/firebaseperformance.admin",
      "roles/firebaseperformance.viewer",
      "roles/firebasepredictions.admin",
      "roles/firebasepredictions.viewer",
      "roles/firebaserules.admin",
      "roles/firebaserules.viewer",
      "roles/gkehub.admin",
      "roles/gkehub.viewer",
      "roles/healthcare.annotationEditor",
      "roles/healthcare.annotationReader",
      "roles/healthcare.annotationStoreAdmin",
      "roles/healthcare.annotationStoreViewer",
      "roles/healthcare.datasetAdmin",
      "roles/healthcare.datasetViewer",
      "roles/healthcare.dicomEditor",
      "roles/healthcare.dicomStoreAdmin",
      "roles/healthcare.dicomStoreViewer",
      "roles/healthcare.dicomViewer",
      "roles/healthcare.fhirResourceEditor",
      "roles/healthcare.fhirResourceReader",
      "roles/healthcare.fhirStoreAdmin",
      "roles/healthcare.fhirStoreViewer",
      "roles/healthcare.hl7V2Consumer",
      "roles/healthcare.hl7V2Editor",
      "roles/healthcare.hl7V2Ingest",
      "roles/healthcare.hl7V2StoreAdmin",
      "roles/healthcare.hl7V2StoreViewer",
      "roles/iam.organizationRoleAdmin",
      "roles/iam.organizationRoleViewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/iam.serviceAccountAdmin",
      "roles/iam.serviceAccountCreator",
      "roles/iam.serviceAccountDeleter",
      "roles/iam.serviceAccountKeyAdmin",
      "roles/iam.serviceAccountTokenCreator",
      "roles/iam.serviceAccountUser",
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/managedidentities.admin",
      "roles/managedidentities.domainAdmin",
      "roles/managedidentities.viewer",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.viewer",
      "roles/netappcloudvolumes.admin",
      "roles/netappcloudvolumes.viewer",
      "roles/notebooks.admin",
      "roles/notebooks.viewer",
      "roles/owner",
      "roles/proximitybeacon.attachmentEditor",
      "roles/proximitybeacon.attachmentPublisher",
      "roles/proximitybeacon.attachmentViewer",
      "roles/proximitybeacon.beaconEditor",
      "roles/recommender.computeAdmin",
      "roles/recommender.computeViewer",
      "roles/recommender.iamAdmin",
      "roles/recommender.iamViewer",
      "roles/redis.admin",
      "roles/redis.editor",
      "roles/redis.viewer",
      "roles/redisenterprisecloud.admin",
      "roles/redisenterprisecloud.viewer",
      "roles/resourcemanager.folderAdmin",
      "roles/resourcemanager.folderCreator",
      "roles/resourcemanager.folderEditor",
      "roles/resourcemanager.folderViewer",
      "roles/resourcemanager.organizationAdmin",
      "roles/run.admin",
      "roles/run.viewer",
      "roles/secretmanager.admin",
      "roles/secretmanager.viewer",
      "roles/serverless.serviceAgent",
      "roles/servicemanagement.admin",
      "roles/servicemanagement.quotaAdmin",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.viewer",
      "roles/stackdriver.accounts.editor",
      "roles/stackdriver.accounts.viewer",
      "roles/storage.admin",
      "roles/storage.hmacKeyAdmin",
      "roles/storage.objectAdmin",
      "roles/storage.objectCreator",
      "roles/storage.objectViewer",
      "roles/storagetransfer.admin",
      "roles/storagetransfer.user",
      "roles/storagetransfer.viewer",
      "roles/subscribewithgoogledeveloper.developer",
      "roles/tpu.admin",
      "roles/tpu.viewer",
      "roles/viewer",
      "roles/vpaccess.user",
      "roles/vpaccess.viewer",
      "roles/vpcaccess.admin"
    ]
  },
  {
    "permission": "accessapproval.settings.delete",
    "roles": [
      "roles/accessapproval.configEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "accessapproval.settings.update",
    "roles": [
      "roles/accessapproval.configEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.accessLevels.create",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.accessLevels.delete",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.accessLevels.get",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/accesscontextmanager.policyReader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "accesscontextmanager.accessLevels.list",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/accesscontextmanager.policyReader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "accesscontextmanager.accessLevels.update",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.accessPolicies.create",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.accessPolicies.delete",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.accessPolicies.get",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/accesscontextmanager.policyReader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "accesscontextmanager.accessPolicies.getIamPolicy",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/accesscontextmanager.policyReader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "accesscontextmanager.accessPolicies.list",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/accesscontextmanager.policyReader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "accesscontextmanager.accessPolicies.setIamPolicy",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.accessPolicies.update",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.accessZones.create",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.accessZones.delete",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.accessZones.get",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/accesscontextmanager.policyReader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "accesscontextmanager.accessZones.list",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/accesscontextmanager.policyReader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "accesscontextmanager.accessZones.update",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.policies.create",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.policies.delete",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.policies.get",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/accesscontextmanager.policyReader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "accesscontextmanager.policies.getIamPolicy",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/accesscontextmanager.policyReader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "accesscontextmanager.policies.list",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/accesscontextmanager.policyReader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "accesscontextmanager.policies.setIamPolicy",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.policies.update",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.servicePerimeters.create",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.servicePerimeters.delete",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "accesscontextmanager.servicePerimeters.get",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/accesscontextmanager.policyReader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "accesscontextmanager.servicePerimeters.list",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/accesscontextmanager.policyReader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "accesscontextmanager.servicePerimeters.update",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "resourcemanager.organizations.get",
    "roles": [
      "roles/accesscontextmanager.policyAdmin",
      "roles/accesscontextmanager.policyEditor",
      "roles/accesscontextmanager.policyReader",
      "roles/axt.admin",
      "roles/billing.creator",
      "roles/browser",
      "roles/cloudprivatecatalogproducer.admin",
      "roles/cloudprivatecatalogproducer.manager",
      "roles/compute.xpnAdmin",
      "roles/iam.organizationRoleAdmin",
      "roles/iam.organizationRoleViewer",
      "roles/resourcemanager.organizationAdmin",
      "roles/resourcemanager.organizationViewer",
      "roles/resourcemanager.projectCreator",
      "roles/securitycenter.admin",
      "roles/securitycenter.adminEditor",
      "roles/securitycenter.adminViewer",
      "roles/securitycenter.assetsViewer",
      "roles/securitycenter.findingsEditor",
      "roles/securitycenter.findingsViewer",
      "roles/securitycenter.sourcesAdmin",
      "roles/securitycenter.sourcesEditor",
      "roles/securitycenter.sourcesViewer",
      "roles/servicemanagement.admin",
      "roles/servicemanagement.quotaAdmin"
    ]
  },
  {
    "permission": "actions.agent.claimContentProvider",
    "roles": [
      "roles/actions.Admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "actions.agent.get",
    "roles": [
      "roles/actions.Admin",
      "roles/actions.Viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "actions.agent.update",
    "roles": [
      "roles/actions.Admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "actions.agentVersions.create",
    "roles": [
      "roles/actions.Admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "actions.agentVersions.delete",
    "roles": [
      "roles/actions.Admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "actions.agentVersions.deploy",
    "roles": [
      "roles/actions.Admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "actions.agentVersions.get",
    "roles": [
      "roles/actions.Admin",
      "roles/actions.Viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "actions.agentVersions.list",
    "roles": [
      "roles/actions.Admin",
      "roles/actions.Viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebase.projects.get",
    "roles": [
      "roles/actions.Admin",
      "roles/actions.Viewer",
      "roles/cloudconfig.admin",
      "roles/cloudconfig.viewer",
      "roles/cloudtestservice.testAdmin",
      "roles/cloudtestservice.testViewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.analyticsAdmin",
      "roles/firebase.analyticsViewer",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/firebaseabt.admin",
      "roles/firebaseabt.viewer",
      "roles/firebaseappdistro.admin",
      "roles/firebaseappdistro.viewer",
      "roles/firebaseauth.admin",
      "roles/firebaseauth.viewer",
      "roles/firebasecrashlytics.admin",
      "roles/firebasecrashlytics.viewer",
      "roles/firebasedatabase.admin",
      "roles/firebasedatabase.viewer",
      "roles/firebasedynamiclinks.admin",
      "roles/firebasedynamiclinks.viewer",
      "roles/firebasehosting.admin",
      "roles/firebasehosting.viewer",
      "roles/firebaseinappmessaging.admin",
      "roles/firebaseinappmessaging.viewer",
      "roles/firebaseml.admin",
      "roles/firebaseml.viewer",
      "roles/firebasenotifications.admin",
      "roles/firebasenotifications.viewer",
      "roles/firebaseperformance.admin",
      "roles/firebaseperformance.viewer",
      "roles/firebasepredictions.admin",
      "roles/firebasepredictions.viewer",
      "roles/owner",
      "roles/storage.admin",
      "roles/storage.hmacKeyAdmin",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebase.projects.update",
    "roles": [
      "roles/actions.Admin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "androidmanagement.enterprises.manage",
    "roles": [
      "roles/androidmanagement.user",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "serviceusage.quotas.get",
    "roles": [
      "roles/androidmanagement.user",
      "roles/cloudfunctions.admin",
      "roles/cloudfunctions.developer",
      "roles/cloudfunctions.serviceAgent",
      "roles/cloudfunctions.viewer",
      "roles/cloudprofiler.user",
      "roles/cloudsecurityscanner.editor",
      "roles/cloudsecurityscanner.viewer",
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/cloudsql.viewer",
      "roles/composer.admin",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.environmentAndStorageObjectViewer",
      "roles/composer.user",
      "roles/composer.worker",
      "roles/compute.admin",
      "roles/compute.imageUser",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.orgSecurityPolicyUser",
      "roles/compute.orgSecurityResourceAdmin",
      "roles/compute.osAdminLogin",
      "roles/compute.osLogin",
      "roles/compute.packetMirroringAdmin",
      "roles/compute.packetMirroringUser",
      "roles/compute.securityAdmin",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataprep.projects.user",
      "roles/dataproc.serviceAgent",
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/deploymentmanager.typeViewer",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor",
      "roles/pubsub.viewer",
      "roles/servicemanagement.admin",
      "roles/servicemanagement.quotaAdmin",
      "roles/servicemanagement.quotaViewer",
      "roles/serviceusage.serviceUsageAdmin",
      "roles/serviceusage.serviceUsageConsumer",
      "roles/serviceusage.serviceUsageViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "serviceusage.services.get",
    "roles": [
      "roles/androidmanagement.user",
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.adminViewer",
      "roles/automlrecommendations.editor",
      "roles/automlrecommendations.viewer",
      "roles/cloudfunctions.admin",
      "roles/cloudfunctions.developer",
      "roles/cloudfunctions.viewer",
      "roles/cloudprofiler.user",
      "roles/cloudsecurityscanner.editor",
      "roles/cloudsecurityscanner.viewer",
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/cloudsql.viewer",
      "roles/composer.admin",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.environmentAndStorageObjectViewer",
      "roles/composer.user",
      "roles/composer.worker",
      "roles/compute.admin",
      "roles/compute.imageUser",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.orgSecurityPolicyUser",
      "roles/compute.orgSecurityResourceAdmin",
      "roles/compute.osAdminLogin",
      "roles/compute.osLogin",
      "roles/compute.packetMirroringAdmin",
      "roles/compute.packetMirroringUser",
      "roles/compute.securityAdmin",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataprep.projects.user",
      "roles/dataproc.serviceAgent",
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/deploymentmanager.typeViewer",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor",
      "roles/pubsub.viewer",
      "roles/servicemanagement.admin",
      "roles/servicemanagement.quotaAdmin",
      "roles/servicemanagement.quotaViewer",
      "roles/serviceusage.serviceUsageAdmin",
      "roles/serviceusage.serviceUsageConsumer",
      "roles/serviceusage.serviceUsageViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "serviceusage.services.list",
    "roles": [
      "roles/androidmanagement.user",
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.adminViewer",
      "roles/automlrecommendations.editor",
      "roles/automlrecommendations.viewer",
      "roles/cloudfunctions.admin",
      "roles/cloudfunctions.developer",
      "roles/cloudfunctions.viewer",
      "roles/cloudprofiler.user",
      "roles/cloudsecurityscanner.editor",
      "roles/cloudsecurityscanner.viewer",
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/cloudsql.viewer",
      "roles/composer.admin",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.environmentAndStorageObjectViewer",
      "roles/composer.user",
      "roles/composer.worker",
      "roles/compute.admin",
      "roles/compute.imageUser",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.orgSecurityPolicyUser",
      "roles/compute.orgSecurityResourceAdmin",
      "roles/compute.osAdminLogin",
      "roles/compute.osLogin",
      "roles/compute.packetMirroringAdmin",
      "roles/compute.packetMirroringUser",
      "roles/compute.securityAdmin",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataprep.projects.user",
      "roles/dataproc.serviceAgent",
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor",
      "roles/pubsub.viewer",
      "roles/servicemanagement.quotaAdmin",
      "roles/servicemanagement.quotaViewer",
      "roles/serviceusage.serviceUsageAdmin",
      "roles/serviceusage.serviceUsageConsumer",
      "roles/serviceusage.serviceUsageViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.apiproductattributes.createOrUpdateAll",
    "roles": [
      "roles/apigee.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.apiproductattributes.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.apiproductattributes.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.apiproductattributes.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.apiproductattributes.update",
    "roles": [
      "roles/apigee.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.apiproducts.create",
    "roles": [
      "roles/apigee.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.apiproducts.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.apiproducts.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.apiproducts.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.apiproducts.update",
    "roles": [
      "roles/apigee.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.appkeys.create",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.appkeys.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.appkeys.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.appkeys.manage",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.apps.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.apps.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.deployments.create",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.deployments.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.deployments.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.deployments.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.deployments.update",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.developerappattributes.createOrUpdateAll",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.developerappattributes.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.developerappattributes.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.developerappattributes.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.developerappattributes.update",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.developerapps.create",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.developerapps.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.developerapps.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.developerapps.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.developerapps.manage",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.developerattributes.createOrUpdateAll",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.developerattributes.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.developerattributes.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.developerattributes.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.developerattributes.update",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.developers.create",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.developers.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.developers.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.developers.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.developers.update",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.developerAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.environments.create",
    "roles": [
      "roles/apigee.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.environments.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.environments.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.analyticsEditor",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/apigee.synchronizerManager",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.environments.getDataLocation",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.analyticsAgent",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.environments.getIamPolicy",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.environments.getStats",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.analyticsEditor",
      "roles/apigee.analyticsViewer",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.environments.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.environments.manageRuntime",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.synchronizerManager",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.environments.setIamPolicy",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.environments.update",
    "roles": [
      "roles/apigee.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.flowhooks.attachSharedFlow",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.flowhooks.detachSharedFlow",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.flowhooks.getSharedFlow",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.flowhooks.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.keystorealiases.create",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.keystorealiases.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.keystorealiases.exportCertificate",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.keystorealiases.generateCSR",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.keystorealiases.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.keystorealiases.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.keystorealiases.update",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.keystores.create",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.keystores.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.keystores.export",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.keystores.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.keystores.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.keyvaluemaps.create",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.keyvaluemaps.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.keyvaluemaps.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.maskconfigs.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.maskconfigs.update",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.organizations.create",
    "roles": [
      "roles/apigee.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.organizations.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.analyticsEditor",
      "roles/apigee.analyticsViewer",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.organizations.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.analyticsEditor",
      "roles/apigee.analyticsViewer",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.organizations.update",
    "roles": [
      "roles/apigee.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.proxies.create",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.proxies.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.proxies.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.proxies.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.proxyrevisions.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.proxyrevisions.deploy",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.proxyrevisions.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.proxyrevisions.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.proxyrevisions.undeploy",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.proxyrevisions.update",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.queries.create",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.analyticsEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.queries.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.analyticsEditor",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.queries.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.analyticsEditor",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.references.create",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.references.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.references.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.references.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.references.update",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.reports.create",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.analyticsEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.reports.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.analyticsEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.reports.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.analyticsEditor",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.reports.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.analyticsEditor",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.reports.update",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.analyticsEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.resourcefiles.create",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.resourcefiles.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.resourcefiles.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.resourcefiles.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.resourcefiles.update",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.sharedflowrevisions.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.sharedflowrevisions.deploy",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.sharedflowrevisions.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.sharedflowrevisions.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.sharedflowrevisions.undeploy",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.sharedflowrevisions.update",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.sharedflows.create",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.sharedflows.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.sharedflows.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.sharedflows.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.targetservers.create",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.targetservers.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.targetservers.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.targetservers.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.targetservers.update",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.tracesessions.create",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.tracesessions.delete",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "apigee.tracesessions.get",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "apigee.tracesessions.list",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.apiCreator",
      "roles/apigee.deployer",
      "roles/apigee.readOnlyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "resourcemanager.projects.getIamPolicy",
    "roles": [
      "roles/apigee.admin",
      "roles/apigee.deployer",
      "roles/apigee.developerAdmin",
      "roles/apigee.readOnlyAdmin",
      "roles/browser",
      "roles/cloudfunctions.serviceAgent",
      "roles/compute.xpnAdmin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.analyticsAdmin",
      "roles/firebase.analyticsViewer",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/iam.organizationRoleAdmin",
      "roles/iam.organizationRoleViewer",
      "roles/iam.roleAdmin",
      "roles/iam.roleViewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/resourcemanager.folderAdmin",
      "roles/resourcemanager.organizationAdmin",
      "roles/resourcemanager.projectIamAdmin",
      "roles/serverless.serviceAgent",
      "roles/viewer"
    ]
  },
  {
    "permission": "appengine.applications.get",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/appengine.appViewer",
      "roles/appengine.codeViewer",
      "roles/appengine.deployer",
      "roles/appengine.serviceAdmin",
      "roles/cloudsecurityscanner.editor",
      "roles/datastore.importExportAdmin",
      "roles/datastore.indexAdmin",
      "roles/datastore.owner",
      "roles/datastore.user",
      "roles/datastore.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "appengine.applications.update",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "appengine.instances.delete",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/appengine.serviceAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "appengine.instances.get",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/appengine.appViewer",
      "roles/appengine.codeViewer",
      "roles/appengine.deployer",
      "roles/appengine.serviceAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "appengine.instances.list",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/appengine.appViewer",
      "roles/appengine.codeViewer",
      "roles/appengine.deployer",
      "roles/appengine.serviceAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "appengine.operations.get",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/appengine.appViewer",
      "roles/appengine.codeViewer",
      "roles/appengine.deployer",
      "roles/appengine.serviceAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "appengine.operations.list",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/appengine.appViewer",
      "roles/appengine.codeViewer",
      "roles/appengine.deployer",
      "roles/appengine.serviceAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "appengine.runtimes.actAsAdmin",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "appengine.services.delete",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/appengine.serviceAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "appengine.services.get",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/appengine.appViewer",
      "roles/appengine.codeViewer",
      "roles/appengine.deployer",
      "roles/appengine.serviceAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "appengine.services.list",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/appengine.appViewer",
      "roles/appengine.codeViewer",
      "roles/appengine.deployer",
      "roles/appengine.serviceAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "appengine.services.update",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/appengine.serviceAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "appengine.versions.create",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/appengine.deployer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "appengine.versions.delete",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/appengine.deployer",
      "roles/appengine.serviceAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "appengine.versions.get",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/appengine.appViewer",
      "roles/appengine.codeViewer",
      "roles/appengine.deployer",
      "roles/appengine.serviceAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "appengine.versions.list",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/appengine.appViewer",
      "roles/appengine.codeViewer",
      "roles/appengine.deployer",
      "roles/appengine.serviceAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "appengine.versions.update",
    "roles": [
      "roles/appengine.appAdmin",
      "roles/appengine.serviceAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "appengine.versions.getFileContents",
    "roles": [
      "roles/appengine.codeViewer",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.annotationSpecs.create",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.annotationSpecs.delete",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.annotationSpecs.get",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.annotationSpecs.list",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.annotationSpecs.update",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.annotations.approve",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.annotations.create",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.annotations.list",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.annotations.manipulate",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.annotations.reject",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.columnSpecs.get",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.columnSpecs.list",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.columnSpecs.update",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.datasets.create",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.datasets.delete",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.datasets.export",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.datasets.get",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.datasets.getIamPolicy",
    "roles": [
      "roles/automl.admin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.datasets.import",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.datasets.list",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.datasets.setIamPolicy",
    "roles": [
      "roles/automl.admin",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.datasets.update",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.examples.delete",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.examples.get",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.examples.list",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.humanAnnotationTasks.create",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.humanAnnotationTasks.delete",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.humanAnnotationTasks.get",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.humanAnnotationTasks.list",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.locations.get",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.locations.getIamPolicy",
    "roles": [
      "roles/automl.admin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.locations.list",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.locations.setIamPolicy",
    "roles": [
      "roles/automl.admin",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.modelEvaluations.create",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.modelEvaluations.get",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.modelEvaluations.list",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.models.create",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.models.delete",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.models.deploy",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.models.export",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.models.get",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/cloudtranslate.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.models.getIamPolicy",
    "roles": [
      "roles/automl.admin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.models.list",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.models.predict",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.predictor",
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.models.setIamPolicy",
    "roles": [
      "roles/automl.admin",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.models.undeploy",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.operations.cancel",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.operations.delete",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automl.operations.get",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.operations.list",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.tableSpecs.get",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.tableSpecs.list",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/automl.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automl.tableSpecs.update",
    "roles": [
      "roles/automl.admin",
      "roles/automl.editor",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "automlrecommendations.apiKeys.create",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "automlrecommendations.apiKeys.delete",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "automlrecommendations.apiKeys.list",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.adminViewer",
      "roles/automlrecommendations.editor",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "automlrecommendations.catalogItems.create",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "automlrecommendations.catalogItems.delete",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "automlrecommendations.catalogItems.get",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.adminViewer",
      "roles/automlrecommendations.editor",
      "roles/automlrecommendations.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automlrecommendations.catalogItems.list",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.adminViewer",
      "roles/automlrecommendations.editor",
      "roles/automlrecommendations.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automlrecommendations.catalogItems.update",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "automlrecommendations.catalogs.getStats",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.adminViewer",
      "roles/automlrecommendations.editor",
      "roles/automlrecommendations.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automlrecommendations.catalogs.list",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.adminViewer",
      "roles/automlrecommendations.editor",
      "roles/automlrecommendations.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automlrecommendations.eventStores.getStats",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.adminViewer",
      "roles/automlrecommendations.editor",
      "roles/automlrecommendations.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automlrecommendations.events.create",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "automlrecommendations.events.list",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.adminViewer",
      "roles/automlrecommendations.editor",
      "roles/automlrecommendations.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automlrecommendations.events.purge",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "automlrecommendations.placements.getStats",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.adminViewer",
      "roles/automlrecommendations.editor",
      "roles/automlrecommendations.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automlrecommendations.placements.list",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.adminViewer",
      "roles/automlrecommendations.editor",
      "roles/automlrecommendations.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "automlrecommendations.recommendations.list",
    "roles": [
      "roles/automlrecommendations.admin",
      "roles/automlrecommendations.adminViewer",
      "roles/automlrecommendations.editor",
      "roles/automlrecommendations.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "axt.labels.get",
    "roles": [
      "roles/axt.admin"
    ]
  },
  {
    "permission": "axt.labels.set",
    "roles": [
      "roles/axt.admin"
    ]
  },
  {
    "permission": "bigquery.config.get",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.user",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.config.update",
    "roles": [
      "roles/bigquery.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.connections.create",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.connectionAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.connections.delete",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.connectionAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.connections.get",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.connectionAdmin",
      "roles/bigquery.connectionUser",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.connections.getIamPolicy",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.connectionAdmin",
      "roles/bigquery.connectionUser",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.connections.list",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.connectionAdmin",
      "roles/bigquery.connectionUser",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.connections.setIamPolicy",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.connectionAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.connections.update",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.connectionAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.connections.use",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.connectionAdmin",
      "roles/bigquery.connectionUser",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.datasets.create",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/bigquery.user",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.datasets.delete",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataOwner",
      "roles/datafusion.serviceAgent",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.datasets.get",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/bigquery.dataViewer",
      "roles/bigquery.metadataViewer",
      "roles/bigquery.user",
      "roles/datacatalog.admin",
      "roles/datacatalog.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.datasets.getIamPolicy",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/bigquery.dataViewer",
      "roles/bigquery.metadataViewer",
      "roles/bigquery.user",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.datasets.setIamPolicy",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataOwner",
      "roles/datafusion.serviceAgent",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.datasets.update",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataOwner",
      "roles/datafusion.serviceAgent",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.datasets.updateTag",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/datacatalog.admin",
      "roles/datacatalog.tagEditor",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.jobs.create",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.jobUser",
      "roles/bigquery.user",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.jobs.get",
    "roles": [
      "roles/bigquery.admin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.jobs.list",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.user",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.jobs.listAll",
    "roles": [
      "roles/bigquery.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.jobs.update",
    "roles": [
      "roles/bigquery.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.models.create",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.models.delete",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.models.getData",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/bigquery.dataViewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.models.getMetadata",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/bigquery.dataViewer",
      "roles/bigquery.metadataViewer",
      "roles/datacatalog.admin",
      "roles/datacatalog.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.models.list",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/bigquery.dataViewer",
      "roles/bigquery.metadataViewer",
      "roles/bigquery.user",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.models.updateData",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.models.updateMetadata",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.models.updateTag",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/datacatalog.admin",
      "roles/datacatalog.tagEditor",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.readsessions.create",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.readSessionUser",
      "roles/bigquery.user",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.routines.create",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.routines.delete",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.routines.get",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/bigquery.dataViewer",
      "roles/bigquery.metadataViewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.routines.list",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/bigquery.dataViewer",
      "roles/bigquery.metadataViewer",
      "roles/bigquery.user",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.routines.update",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.savedqueries.create",
    "roles": [
      "roles/bigquery.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.savedqueries.delete",
    "roles": [
      "roles/bigquery.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.savedqueries.get",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.user",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.savedqueries.list",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.user",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.savedqueries.update",
    "roles": [
      "roles/bigquery.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigquery.tables.create",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/datafusion.serviceAgent"
    ]
  },
  {
    "permission": "bigquery.tables.delete",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/datafusion.serviceAgent"
    ]
  },
  {
    "permission": "bigquery.tables.export",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/bigquery.dataViewer",
      "roles/datafusion.serviceAgent"
    ]
  },
  {
    "permission": "bigquery.tables.get",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/bigquery.dataViewer",
      "roles/bigquery.metadataViewer",
      "roles/datacatalog.admin",
      "roles/datacatalog.viewer",
      "roles/datafusion.serviceAgent"
    ]
  },
  {
    "permission": "bigquery.tables.getData",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/bigquery.dataViewer",
      "roles/datafusion.serviceAgent"
    ]
  },
  {
    "permission": "bigquery.tables.list",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/bigquery.dataViewer",
      "roles/bigquery.metadataViewer",
      "roles/bigquery.user",
      "roles/datafusion.serviceAgent",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer"
    ]
  },
  {
    "permission": "bigquery.tables.setCategory",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataOwner",
      "roles/datafusion.serviceAgent"
    ]
  },
  {
    "permission": "bigquery.tables.update",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/datafusion.serviceAgent"
    ]
  },
  {
    "permission": "bigquery.tables.updateData",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/datafusion.serviceAgent"
    ]
  },
  {
    "permission": "bigquery.tables.updateTag",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.dataEditor",
      "roles/bigquery.dataOwner",
      "roles/datacatalog.admin",
      "roles/datacatalog.tagEditor",
      "roles/datafusion.serviceAgent"
    ]
  },
  {
    "permission": "bigquery.transfers.get",
    "roles": [
      "roles/bigquery.admin",
      "roles/bigquery.user",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigquery.transfers.update",
    "roles": [
      "roles/bigquery.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigtable.appProfiles.create",
    "roles": [
      "roles/bigtable.admin",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigtable.appProfiles.delete",
    "roles": [
      "roles/bigtable.admin",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigtable.appProfiles.get",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/bigtable.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigtable.appProfiles.list",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/bigtable.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigtable.appProfiles.update",
    "roles": [
      "roles/bigtable.admin",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigtable.clusters.create",
    "roles": [
      "roles/bigtable.admin",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigtable.clusters.delete",
    "roles": [
      "roles/bigtable.admin",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigtable.clusters.get",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/bigtable.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigtable.clusters.list",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/bigtable.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigtable.clusters.update",
    "roles": [
      "roles/bigtable.admin",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigtable.instances.create",
    "roles": [
      "roles/bigtable.admin",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigtable.instances.delete",
    "roles": [
      "roles/bigtable.admin",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigtable.instances.get",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/bigtable.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigtable.instances.getIamPolicy",
    "roles": [
      "roles/bigtable.admin",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigtable.instances.list",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/bigtable.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigtable.instances.setIamPolicy",
    "roles": [
      "roles/bigtable.admin",
      "roles/datafusion.serviceAgent",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "bigtable.instances.update",
    "roles": [
      "roles/bigtable.admin",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigtable.locations.list",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/bigtable.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigtable.tables.checkConsistency",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/bigtable.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigtable.tables.create",
    "roles": [
      "roles/bigtable.admin",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigtable.tables.delete",
    "roles": [
      "roles/bigtable.admin",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigtable.tables.generateConsistencyToken",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/bigtable.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigtable.tables.get",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/bigtable.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigtable.tables.list",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/bigtable.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigtable.tables.mutateRows",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.user",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "bigtable.tables.readRows",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigtable.tables.sampleRowKeys",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "bigtable.tables.update",
    "roles": [
      "roles/bigtable.admin",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.metricDescriptors.get",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/bigtable.viewer",
      "roles/composer.worker",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.worker",
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.metricWriter",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.metricDescriptors.list",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/bigtable.viewer",
      "roles/composer.worker",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.worker",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.metricWriter",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.timeSeries.list",
    "roles": [
      "roles/bigtable.admin",
      "roles/bigtable.reader",
      "roles/bigtable.user",
      "roles/bigtable.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/servicemanagement.admin",
      "roles/servicemanagement.quotaAdmin",
      "roles/servicemanagement.quotaViewer",
      "roles/serviceusage.serviceUsageAdmin",
      "roles/serviceusage.serviceUsageConsumer",
      "roles/serviceusage.serviceUsageViewer",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "billing.accounts.close",
    "roles": [
      "roles/billing.admin"
    ]
  },
  {
    "permission": "billing.accounts.get",
    "roles": [
      "roles/billing.admin",
      "roles/billing.user",
      "roles/billing.viewer"
    ]
  },
  {
    "permission": "billing.accounts.getIamPolicy",
    "roles": [
      "roles/billing.admin",
      "roles/billing.user",
      "roles/billing.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer"
    ]
  },
  {
    "permission": "billing.accounts.getPaymentInfo",
    "roles": [
      "roles/billing.admin",
      "roles/billing.viewer"
    ]
  },
  {
    "permission": "billing.accounts.getSpendingInformation",
    "roles": [
      "roles/billing.admin",
      "roles/billing.viewer"
    ]
  },
  {
    "permission": "billing.accounts.getUsageExportSpec",
    "roles": [
      "roles/billing.admin",
      "roles/billing.viewer"
    ]
  },
  {
    "permission": "billing.accounts.list",
    "roles": [
      "roles/billing.admin",
      "roles/billing.user",
      "roles/billing.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer"
    ]
  },
  {
    "permission": "billing.accounts.move",
    "roles": [
      "roles/billing.admin"
    ]
  },
  {
    "permission": "billing.accounts.redeemPromotion",
    "roles": [
      "roles/billing.admin",
      "roles/billing.user"
    ]
  },
  {
    "permission": "billing.accounts.removeFromOrganization",
    "roles": [
      "roles/billing.admin"
    ]
  },
  {
    "permission": "billing.accounts.reopen",
    "roles": [
      "roles/billing.admin"
    ]
  },
  {
    "permission": "billing.accounts.setIamPolicy",
    "roles": [
      "roles/billing.admin",
      "roles/iam.securityAdmin"
    ]
  },
  {
    "permission": "billing.accounts.update",
    "roles": [
      "roles/billing.admin"
    ]
  },
  {
    "permission": "billing.accounts.updatePaymentInfo",
    "roles": [
      "roles/billing.admin"
    ]
  },
  {
    "permission": "billing.accounts.updateUsageExportSpec",
    "roles": [
      "roles/billing.admin"
    ]
  },
  {
    "permission": "billing.budgets.create",
    "roles": [
      "roles/billing.admin"
    ]
  },
  {
    "permission": "billing.budgets.delete",
    "roles": [
      "roles/billing.admin"
    ]
  },
  {
    "permission": "billing.budgets.get",
    "roles": [
      "roles/billing.admin",
      "roles/billing.viewer"
    ]
  },
  {
    "permission": "billing.budgets.list",
    "roles": [
      "roles/billing.admin",
      "roles/billing.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer"
    ]
  },
  {
    "permission": "billing.budgets.update",
    "roles": [
      "roles/billing.admin"
    ]
  },
  {
    "permission": "billing.credits.list",
    "roles": [
      "roles/billing.admin",
      "roles/billing.user",
      "roles/billing.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer"
    ]
  },
  {
    "permission": "billing.resourceAssociations.create",
    "roles": [
      "roles/billing.admin",
      "roles/billing.user"
    ]
  },
  {
    "permission": "billing.resourceAssociations.delete",
    "roles": [
      "roles/billing.admin"
    ]
  },
  {
    "permission": "billing.resourceAssociations.list",
    "roles": [
      "roles/billing.admin",
      "roles/billing.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer"
    ]
  },
  {
    "permission": "billing.subscriptions.create",
    "roles": [
      "roles/billing.admin"
    ]
  },
  {
    "permission": "billing.subscriptions.get",
    "roles": [
      "roles/billing.admin",
      "roles/billing.viewer"
    ]
  },
  {
    "permission": "billing.subscriptions.list",
    "roles": [
      "roles/billing.admin",
      "roles/billing.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer"
    ]
  },
  {
    "permission": "billing.subscriptions.update",
    "roles": [
      "roles/billing.admin"
    ]
  },
  {
    "permission": "cloudnotifications.activities.list",
    "roles": [
      "roles/billing.admin",
      "roles/editor",
      "roles/errorreporting.admin",
      "roles/errorreporting.user",
      "roles/errorreporting.viewer",
      "roles/firebase.admin",
      "roles/firebase.analyticsAdmin",
      "roles/firebase.analyticsViewer",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "logging.logEntries.list",
    "roles": [
      "roles/billing.admin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/logging.admin",
      "roles/logging.privateLogViewer",
      "roles/logging.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "logging.logServiceIndexes.list",
    "roles": [
      "roles/billing.admin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/logging.privateLogViewer",
      "roles/logging.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "logging.logServices.list",
    "roles": [
      "roles/billing.admin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/logging.privateLogViewer",
      "roles/logging.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "logging.logs.list",
    "roles": [
      "roles/billing.admin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/logging.privateLogViewer",
      "roles/logging.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "logging.privateLogEntries.list",
    "roles": [
      "roles/billing.admin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/logging.admin",
      "roles/logging.privateLogViewer",
      "roles/owner"
    ]
  },
  {
    "permission": "resourcemanager.projects.createBillingAssignment",
    "roles": [
      "roles/billing.admin",
      "roles/billing.projectManager",
      "roles/owner"
    ]
  },
  {
    "permission": "resourcemanager.projects.deleteBillingAssignment",
    "roles": [
      "roles/billing.admin",
      "roles/billing.projectManager",
      "roles/owner"
    ]
  },
  {
    "permission": "billing.accounts.create",
    "roles": [
      "roles/billing.creator"
    ]
  },
  {
    "permission": "binaryauthorization.attestors.create",
    "roles": [
      "roles/binaryauthorization.attestorsAdmin",
      "roles/binaryauthorization.attestorsEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "binaryauthorization.attestors.delete",
    "roles": [
      "roles/binaryauthorization.attestorsAdmin",
      "roles/binaryauthorization.attestorsEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "binaryauthorization.attestors.get",
    "roles": [
      "roles/binaryauthorization.attestorsAdmin",
      "roles/binaryauthorization.attestorsEditor",
      "roles/binaryauthorization.attestorsVerifier",
      "roles/binaryauthorization.attestorsViewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "binaryauthorization.attestors.getIamPolicy",
    "roles": [
      "roles/binaryauthorization.attestorsAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "binaryauthorization.attestors.list",
    "roles": [
      "roles/binaryauthorization.attestorsAdmin",
      "roles/binaryauthorization.attestorsEditor",
      "roles/binaryauthorization.attestorsVerifier",
      "roles/binaryauthorization.attestorsViewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "binaryauthorization.attestors.setIamPolicy",
    "roles": [
      "roles/binaryauthorization.attestorsAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "binaryauthorization.attestors.update",
    "roles": [
      "roles/binaryauthorization.attestorsAdmin",
      "roles/binaryauthorization.attestorsEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "binaryauthorization.attestors.verifyImageAttested",
    "roles": [
      "roles/binaryauthorization.attestorsAdmin",
      "roles/binaryauthorization.attestorsEditor",
      "roles/binaryauthorization.attestorsVerifier",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "binaryauthorization.policy.get",
    "roles": [
      "roles/binaryauthorization.policyAdmin",
      "roles/binaryauthorization.policyEditor",
      "roles/binaryauthorization.policyViewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "binaryauthorization.policy.getIamPolicy",
    "roles": [
      "roles/binaryauthorization.policyAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "binaryauthorization.policy.setIamPolicy",
    "roles": [
      "roles/binaryauthorization.policyAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "binaryauthorization.policy.update",
    "roles": [
      "roles/binaryauthorization.policyAdmin",
      "roles/binaryauthorization.policyEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "resourcemanager.folders.get",
    "roles": [
      "roles/browser",
      "roles/cloudprivatecatalogproducer.admin",
      "roles/cloudprivatecatalogproducer.manager",
      "roles/resourcemanager.folderAdmin",
      "roles/resourcemanager.folderCreator",
      "roles/resourcemanager.folderEditor",
      "roles/resourcemanager.folderIamAdmin",
      "roles/resourcemanager.folderViewer",
      "roles/resourcemanager.organizationAdmin",
      "roles/servicemanagement.admin"
    ]
  },
  {
    "permission": "resourcemanager.folders.list",
    "roles": [
      "roles/browser",
      "roles/cloudprivatecatalogproducer.admin",
      "roles/cloudprivatecatalogproducer.manager",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/resourcemanager.folderAdmin",
      "roles/resourcemanager.folderCreator",
      "roles/resourcemanager.folderEditor",
      "roles/resourcemanager.folderViewer",
      "roles/resourcemanager.organizationAdmin",
      "roles/servicemanagement.admin"
    ]
  },
  {
    "permission": "chat.bots.get",
    "roles": [
      "roles/chat.owner",
      "roles/chat.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "chat.bots.update",
    "roles": [
      "roles/chat.owner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportAccessLevel",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportAccessPolicy",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportAllAccessPolicy",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportAppengineApplications",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportAppengineServices",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportAppengineVersions",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportBigqueryDatasets",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportBigqueryTables",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportBigtableCluster",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportBigtableInstance",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportBigtableTable",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportCloudbillingBillingAccounts",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportCloudkmsCryptoKeys",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportCloudkmsKeyRings",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportCloudresourcemanagerFolders",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportCloudresourcemanagerOrganizations",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportCloudresourcemanagerProjects",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeAddress",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeAutoscalers",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeBackendBuckets",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeBackendServices",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeDisks",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeFirewalls",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeForwardingRules",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeGlobalAddress",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeGlobalForwardingRules",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeHealthChecks",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeHttpHealthChecks",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeHttpsHealthChecks",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeImages",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeInstanceGroupManagers",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeInstanceGroups",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeInstanceTemplates",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeInstances",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeInterconnect",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeInterconnectAttachment",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeLicenses",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeNetworks",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeProjects",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeRegionAutoscaler",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeRegionBackendServices",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeRegionDisk",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeRegionInstanceGroup",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeRegionInstanceGroupManager",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeRouters",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeRoutes",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeSecurityPolicy",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeSnapshots",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeSslCertificates",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeSubnetworks",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeTargetHttpProxies",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeTargetHttpsProxies",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeTargetInstances",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeTargetPools",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeTargetSslProxies",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeTargetTcpProxies",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeTargetVpnGateways",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeUrlMaps",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportComputeVpnTunnels",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportContainerClusterrole",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportContainerClusterrolebinding",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportContainerClusters",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportContainerNamespace",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportContainerNode",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportContainerNodepool",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportContainerPod",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportContainerRole",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportContainerRolebinding",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportContainerregistryImage",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportDatafusionInstance",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportDataprocClusters",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportDataprocJobs",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportDnsManagedZones",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportDnsPolicies",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportIamPolicy",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportIamRoles",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportIamServiceAccountKeys",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportIamServiceAccounts",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportManagedidentitiesDomain",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportOrgPolicy",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportPubsubSubscriptions",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportPubsubTopics",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportResource",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportServicePerimeter",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.assets.exportServicemanagementServices",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportSpannerDatabases",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportSpannerInstances",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportSqladminInstances",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.assets.exportStorageBuckets",
    "roles": [
      "roles/cloudasset.owner",
      "roles/cloudasset.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudasset.feeds.create",
    "roles": [
      "roles/cloudasset.owner",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.feeds.delete",
    "roles": [
      "roles/cloudasset.owner",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.feeds.get",
    "roles": [
      "roles/cloudasset.owner",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.feeds.list",
    "roles": [
      "roles/cloudasset.owner",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudasset.feeds.update",
    "roles": [
      "roles/cloudasset.owner",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudbuild.builds.create",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.builds.editor",
      "roles/cloudbuild.serviceAgent",
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/serverless.serviceAgent"
    ]
  },
  {
    "permission": "cloudbuild.builds.get",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.builds.editor",
      "roles/cloudbuild.builds.viewer",
      "roles/cloudbuild.serviceAgent",
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/serverless.serviceAgent",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudbuild.builds.list",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.builds.editor",
      "roles/cloudbuild.builds.viewer",
      "roles/cloudbuild.serviceAgent",
      "roles/composer.worker",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudbuild.builds.update",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.builds.editor",
      "roles/cloudbuild.serviceAgent",
      "roles/composer.worker",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "logging.logEntries.create",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.serviceAgent",
      "roles/cloudscheduler.serviceAgent",
      "roles/cloudtasks.serviceAgent",
      "roles/composer.worker",
      "roles/dataflow.worker",
      "roles/dataproc.worker",
      "roles/editor",
      "roles/logging.admin",
      "roles/logging.logWriter",
      "roles/owner"
    ]
  },
  {
    "permission": "pubsub.topics.create",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.serviceAgent",
      "roles/cloudfunctions.serviceAgent",
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor"
    ]
  },
  {
    "permission": "pubsub.topics.publish",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.serviceAgent",
      "roles/cloudscheduler.serviceAgent",
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor",
      "roles/pubsub.publisher"
    ]
  },
  {
    "permission": "remotebuildexecution.blobs.get",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.builds.editor",
      "roles/cloudbuild.builds.viewer",
      "roles/cloudbuild.serviceAgent",
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/remotebuildexecution.artifactAdmin",
      "roles/remotebuildexecution.artifactCreator",
      "roles/remotebuildexecution.artifactViewer",
      "roles/remotebuildexecution.worker",
      "roles/viewer"
    ]
  },
  {
    "permission": "source.repos.get",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.serviceAgent",
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/source.admin",
      "roles/source.reader",
      "roles/source.writer",
      "roles/viewer"
    ]
  },
  {
    "permission": "source.repos.list",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.serviceAgent",
      "roles/composer.worker",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/source.admin",
      "roles/source.reader",
      "roles/source.writer",
      "roles/viewer"
    ]
  },
  {
    "permission": "storage.buckets.create",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.serviceAgent",
      "roles/cloudmigration.inframanager",
      "roles/cloudtestservice.testAdmin",
      "roles/composer.worker",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/storage.admin"
    ]
  },
  {
    "permission": "storage.buckets.get",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.serviceAgent",
      "roles/cloudfunctions.serviceAgent",
      "roles/cloudmigration.inframanager",
      "roles/cloudtestservice.testAdmin",
      "roles/composer.worker",
      "roles/dataflow.admin",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.worker",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/storage.admin",
      "roles/storage.legacyBucketOwner",
      "roles/storage.legacyBucketReader",
      "roles/storage.legacyBucketWriter"
    ]
  },
  {
    "permission": "storage.buckets.list",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.serviceAgent",
      "roles/cloudmigration.inframanager",
      "roles/composer.worker",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/storage.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "storage.objects.create",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.serviceAgent",
      "roles/cloudmigration.storageaccess",
      "roles/cloudtestservice.testAdmin",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.worker",
      "roles/dataflow.admin",
      "roles/dataflow.worker",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.worker",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/storage.admin",
      "roles/storage.legacyBucketOwner",
      "roles/storage.legacyBucketWriter",
      "roles/storage.objectAdmin",
      "roles/storage.objectCreator"
    ]
  },
  {
    "permission": "storage.objects.delete",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.serviceAgent",
      "roles/cloudmigration.storageaccess",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.worker",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.worker",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/storage.admin",
      "roles/storage.legacyBucketOwner",
      "roles/storage.legacyBucketWriter",
      "roles/storage.objectAdmin"
    ]
  },
  {
    "permission": "storage.objects.get",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.serviceAgent",
      "roles/cloudmigration.storageaccess",
      "roles/cloudtestservice.testAdmin",
      "roles/cloudtestservice.testViewer",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.environmentAndStorageObjectViewer",
      "roles/composer.worker",
      "roles/dataflow.admin",
      "roles/dataflow.worker",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.worker",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/serverless.serviceAgent",
      "roles/storage.admin",
      "roles/storage.legacyObjectOwner",
      "roles/storage.legacyObjectReader",
      "roles/storage.objectAdmin",
      "roles/storage.objectViewer"
    ]
  },
  {
    "permission": "storage.objects.list",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.serviceAgent",
      "roles/cloudmigration.storageaccess",
      "roles/cloudtestservice.testAdmin",
      "roles/cloudtestservice.testViewer",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.environmentAndStorageObjectViewer",
      "roles/composer.worker",
      "roles/dataflow.admin",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.worker",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/serverless.serviceAgent",
      "roles/storage.admin",
      "roles/storage.legacyBucketOwner",
      "roles/storage.legacyBucketReader",
      "roles/storage.legacyBucketWriter",
      "roles/storage.objectAdmin",
      "roles/storage.objectViewer"
    ]
  },
  {
    "permission": "storage.objects.update",
    "roles": [
      "roles/cloudbuild.builds.builder",
      "roles/cloudbuild.serviceAgent",
      "roles/cloudmigration.storageaccess",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.worker",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.worker",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/storage.admin",
      "roles/storage.legacyObjectOwner",
      "roles/storage.objectAdmin"
    ]
  },
  {
    "permission": "compute.firewalls.get",
    "roles": [
      "roles/cloudbuild.serviceAgent",
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.viewer",
      "roles/container.hostServiceAgentUser",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.firewalls.list",
    "roles": [
      "roles/cloudbuild.serviceAgent",
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.networks.get",
    "roles": [
      "roles/cloudbuild.serviceAgent",
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/dns.admin",
      "roles/dns.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.subnetworks.get",
    "roles": [
      "roles/cloudbuild.serviceAgent",
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudconfig.configs.get",
    "roles": [
      "roles/cloudconfig.admin",
      "roles/cloudconfig.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudconfig.configs.update",
    "roles": [
      "roles/cloudconfig.admin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebase.clients.get",
    "roles": [
      "roles/cloudconfig.admin",
      "roles/cloudconfig.viewer",
      "roles/cloudtestservice.testAdmin",
      "roles/cloudtestservice.testViewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.analyticsAdmin",
      "roles/firebase.analyticsViewer",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/firebaseabt.admin",
      "roles/firebaseabt.viewer",
      "roles/firebaseappdistro.admin",
      "roles/firebaseappdistro.viewer",
      "roles/firebaseauth.admin",
      "roles/firebaseauth.viewer",
      "roles/firebasecrash.symbolMappingsAdmin",
      "roles/firebasecrashlytics.admin",
      "roles/firebasecrashlytics.viewer",
      "roles/firebasedatabase.admin",
      "roles/firebasedatabase.viewer",
      "roles/firebasedynamiclinks.admin",
      "roles/firebasedynamiclinks.viewer",
      "roles/firebasehosting.admin",
      "roles/firebasehosting.viewer",
      "roles/firebaseinappmessaging.admin",
      "roles/firebaseinappmessaging.viewer",
      "roles/firebaseml.admin",
      "roles/firebaseml.viewer",
      "roles/firebasenotifications.admin",
      "roles/firebasenotifications.viewer",
      "roles/firebaseperformance.admin",
      "roles/firebaseperformance.viewer",
      "roles/firebasepredictions.admin",
      "roles/firebasepredictions.viewer",
      "roles/mobilecrashreporting.symbolMappingsAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "clouddebugger.breakpoints.list",
    "roles": [
      "roles/clouddebugger.agent",
      "roles/clouddebugger.user",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "clouddebugger.breakpoints.listActive",
    "roles": [
      "roles/clouddebugger.agent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "clouddebugger.breakpoints.update",
    "roles": [
      "roles/clouddebugger.agent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "clouddebugger.debuggees.create",
    "roles": [
      "roles/clouddebugger.agent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "clouddebugger.breakpoints.create",
    "roles": [
      "roles/clouddebugger.user",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "clouddebugger.breakpoints.delete",
    "roles": [
      "roles/clouddebugger.user",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "clouddebugger.breakpoints.get",
    "roles": [
      "roles/clouddebugger.user",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "clouddebugger.debuggees.list",
    "roles": [
      "roles/clouddebugger.user",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudfunctions.functions.call",
    "roles": [
      "roles/cloudfunctions.admin",
      "roles/cloudfunctions.developer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudfunctions.functions.create",
    "roles": [
      "roles/cloudfunctions.admin",
      "roles/cloudfunctions.developer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudfunctions.functions.delete",
    "roles": [
      "roles/cloudfunctions.admin",
      "roles/cloudfunctions.developer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudfunctions.functions.get",
    "roles": [
      "roles/cloudfunctions.admin",
      "roles/cloudfunctions.developer",
      "roles/cloudfunctions.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudfunctions.functions.getIamPolicy",
    "roles": [
      "roles/cloudfunctions.admin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudfunctions.functions.invoke",
    "roles": [
      "roles/cloudfunctions.admin",
      "roles/cloudfunctions.developer",
      "roles/cloudfunctions.invoker",
      "roles/cloudfunctions.serviceAgent",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudfunctions.functions.list",
    "roles": [
      "roles/cloudfunctions.admin",
      "roles/cloudfunctions.developer",
      "roles/cloudfunctions.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudfunctions.functions.setIamPolicy",
    "roles": [
      "roles/cloudfunctions.admin",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudfunctions.functions.sourceCodeGet",
    "roles": [
      "roles/cloudfunctions.admin",
      "roles/cloudfunctions.developer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudfunctions.functions.sourceCodeSet",
    "roles": [
      "roles/cloudfunctions.admin",
      "roles/cloudfunctions.developer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudfunctions.functions.update",
    "roles": [
      "roles/cloudfunctions.admin",
      "roles/cloudfunctions.developer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudfunctions.locations.list",
    "roles": [
      "roles/cloudfunctions.admin",
      "roles/cloudfunctions.developer",
      "roles/cloudfunctions.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudfunctions.operations.get",
    "roles": [
      "roles/cloudfunctions.admin",
      "roles/cloudfunctions.developer",
      "roles/cloudfunctions.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudfunctions.operations.list",
    "roles": [
      "roles/cloudfunctions.admin",
      "roles/cloudfunctions.developer",
      "roles/cloudfunctions.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "clientauthconfig.clients.list",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.growthAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/serverless.serviceAgent",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasedatabase.instances.get",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/firebasedatabase.admin",
      "roles/firebasedatabase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasedatabase.instances.update",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebasedatabase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "iam.serviceAccounts.getAccessToken",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/cloudscheduler.serviceAgent",
      "roles/cloudtasks.serviceAgent",
      "roles/iam.serviceAccountTokenCreator",
      "roles/iam.workloadIdentityUser",
      "roles/serverless.serviceAgent"
    ]
  },
  {
    "permission": "iam.serviceAccounts.signBlob",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/iam.serviceAccountTokenCreator",
      "roles/serverless.serviceAgent"
    ]
  },
  {
    "permission": "pubsub.subscriptions.consume",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor",
      "roles/pubsub.subscriber"
    ]
  },
  {
    "permission": "pubsub.subscriptions.create",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor"
    ]
  },
  {
    "permission": "pubsub.subscriptions.delete",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor"
    ]
  },
  {
    "permission": "pubsub.subscriptions.get",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor",
      "roles/pubsub.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "pubsub.subscriptions.getIamPolicy",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/pubsub.admin"
    ]
  },
  {
    "permission": "pubsub.subscriptions.list",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/composer.worker",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor",
      "roles/pubsub.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "pubsub.subscriptions.setIamPolicy",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/pubsub.admin"
    ]
  },
  {
    "permission": "pubsub.subscriptions.update",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor"
    ]
  },
  {
    "permission": "pubsub.topics.attachSubscription",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor",
      "roles/pubsub.subscriber"
    ]
  },
  {
    "permission": "pubsub.topics.get",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/composer.worker",
      "roles/datacatalog.admin",
      "roles/datacatalog.viewer",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor",
      "roles/pubsub.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "serviceusage.services.disable",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/servicemanagement.quotaAdmin",
      "roles/serviceusage.serviceUsageAdmin"
    ]
  },
  {
    "permission": "serviceusage.services.enable",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/owner",
      "roles/servicemanagement.quotaAdmin",
      "roles/serviceusage.serviceUsageAdmin",
      "roles/stackdriver.accounts.editor"
    ]
  },
  {
    "permission": "storage.buckets.update",
    "roles": [
      "roles/cloudfunctions.serviceAgent",
      "roles/cloudmigration.inframanager",
      "roles/cloudtestservice.testAdmin",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/storage.admin",
      "roles/storage.legacyBucketOwner"
    ]
  },
  {
    "permission": "cloudiot.devices.bindGateway",
    "roles": [
      "roles/cloudiot.admin",
      "roles/cloudiot.editor",
      "roles/cloudiot.provisioner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudiot.devices.create",
    "roles": [
      "roles/cloudiot.admin",
      "roles/cloudiot.editor",
      "roles/cloudiot.provisioner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudiot.devices.delete",
    "roles": [
      "roles/cloudiot.admin",
      "roles/cloudiot.editor",
      "roles/cloudiot.provisioner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudiot.devices.get",
    "roles": [
      "roles/cloudiot.admin",
      "roles/cloudiot.deviceController",
      "roles/cloudiot.editor",
      "roles/cloudiot.provisioner",
      "roles/cloudiot.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudiot.devices.list",
    "roles": [
      "roles/cloudiot.admin",
      "roles/cloudiot.deviceController",
      "roles/cloudiot.editor",
      "roles/cloudiot.provisioner",
      "roles/cloudiot.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudiot.devices.sendCommand",
    "roles": [
      "roles/cloudiot.admin",
      "roles/cloudiot.deviceController",
      "roles/cloudiot.editor",
      "roles/cloudiot.provisioner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudiot.devices.unbindGateway",
    "roles": [
      "roles/cloudiot.admin",
      "roles/cloudiot.editor",
      "roles/cloudiot.provisioner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudiot.devices.update",
    "roles": [
      "roles/cloudiot.admin",
      "roles/cloudiot.editor",
      "roles/cloudiot.provisioner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudiot.devices.updateConfig",
    "roles": [
      "roles/cloudiot.admin",
      "roles/cloudiot.deviceController",
      "roles/cloudiot.editor",
      "roles/cloudiot.provisioner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudiot.registries.create",
    "roles": [
      "roles/cloudiot.admin",
      "roles/cloudiot.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudiot.registries.delete",
    "roles": [
      "roles/cloudiot.admin",
      "roles/cloudiot.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudiot.registries.get",
    "roles": [
      "roles/cloudiot.admin",
      "roles/cloudiot.deviceController",
      "roles/cloudiot.editor",
      "roles/cloudiot.provisioner",
      "roles/cloudiot.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudiot.registries.getIamPolicy",
    "roles": [
      "roles/cloudiot.admin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudiot.registries.list",
    "roles": [
      "roles/cloudiot.admin",
      "roles/cloudiot.deviceController",
      "roles/cloudiot.editor",
      "roles/cloudiot.provisioner",
      "roles/cloudiot.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudiot.registries.setIamPolicy",
    "roles": [
      "roles/cloudiot.admin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudiot.registries.update",
    "roles": [
      "roles/cloudiot.admin",
      "roles/cloudiot.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudiottoken.tokensettings.get",
    "roles": [
      "roles/cloudiot.admin",
      "roles/cloudiot.deviceController",
      "roles/cloudiot.editor",
      "roles/cloudiot.provisioner",
      "roles/cloudiot.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudiottoken.tokensettings.update",
    "roles": [
      "roles/cloudiot.admin",
      "roles/cloudiot.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudjobdiscovery.tools.access",
    "roles": [
      "roles/cloudjobdiscovery.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "iam.serviceAccounts.list",
    "roles": [
      "roles/cloudjobdiscovery.admin",
      "roles/cloudmigration.inframanager",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/iam.serviceAccountAdmin",
      "roles/iam.serviceAccountCreator",
      "roles/iam.serviceAccountDeleter",
      "roles/iam.serviceAccountKeyAdmin",
      "roles/iam.serviceAccountTokenCreator",
      "roles/iam.serviceAccountUser",
      "roles/iam.workloadIdentityUser",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudjobdiscovery.companies.create",
    "roles": [
      "roles/cloudjobdiscovery.jobsEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudjobdiscovery.companies.delete",
    "roles": [
      "roles/cloudjobdiscovery.jobsEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudjobdiscovery.companies.get",
    "roles": [
      "roles/cloudjobdiscovery.jobsEditor",
      "roles/cloudjobdiscovery.jobsViewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudjobdiscovery.companies.list",
    "roles": [
      "roles/cloudjobdiscovery.jobsEditor",
      "roles/cloudjobdiscovery.jobsViewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudjobdiscovery.companies.update",
    "roles": [
      "roles/cloudjobdiscovery.jobsEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudjobdiscovery.events.create",
    "roles": [
      "roles/cloudjobdiscovery.jobsEditor",
      "roles/cloudjobdiscovery.profilesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudjobdiscovery.jobs.create",
    "roles": [
      "roles/cloudjobdiscovery.jobsEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudjobdiscovery.jobs.delete",
    "roles": [
      "roles/cloudjobdiscovery.jobsEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudjobdiscovery.jobs.get",
    "roles": [
      "roles/cloudjobdiscovery.jobsEditor",
      "roles/cloudjobdiscovery.jobsViewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudjobdiscovery.jobs.search",
    "roles": [
      "roles/cloudjobdiscovery.jobsEditor",
      "roles/cloudjobdiscovery.jobsViewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudjobdiscovery.jobs.update",
    "roles": [
      "roles/cloudjobdiscovery.jobsEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudjobdiscovery.profiles.create",
    "roles": [
      "roles/cloudjobdiscovery.profilesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudjobdiscovery.profiles.delete",
    "roles": [
      "roles/cloudjobdiscovery.profilesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudjobdiscovery.profiles.get",
    "roles": [
      "roles/cloudjobdiscovery.profilesEditor",
      "roles/cloudjobdiscovery.profilesViewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudjobdiscovery.profiles.search",
    "roles": [
      "roles/cloudjobdiscovery.profilesEditor",
      "roles/cloudjobdiscovery.profilesViewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudjobdiscovery.profiles.update",
    "roles": [
      "roles/cloudjobdiscovery.profilesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudjobdiscovery.tenants.create",
    "roles": [
      "roles/cloudjobdiscovery.profilesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudjobdiscovery.tenants.delete",
    "roles": [
      "roles/cloudjobdiscovery.profilesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudjobdiscovery.tenants.get",
    "roles": [
      "roles/cloudjobdiscovery.profilesEditor",
      "roles/cloudjobdiscovery.profilesViewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudjobdiscovery.tenants.update",
    "roles": [
      "roles/cloudjobdiscovery.profilesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudkms.cryptoKeyVersions.create",
    "roles": [
      "roles/cloudkms.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudkms.cryptoKeyVersions.destroy",
    "roles": [
      "roles/cloudkms.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudkms.cryptoKeyVersions.get",
    "roles": [
      "roles/cloudkms.admin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudkms.cryptoKeyVersions.list",
    "roles": [
      "roles/cloudkms.admin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudkms.cryptoKeyVersions.restore",
    "roles": [
      "roles/cloudkms.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudkms.cryptoKeyVersions.update",
    "roles": [
      "roles/cloudkms.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudkms.cryptoKeys.create",
    "roles": [
      "roles/cloudkms.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudkms.cryptoKeys.get",
    "roles": [
      "roles/cloudkms.admin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudkms.cryptoKeys.getIamPolicy",
    "roles": [
      "roles/cloudkms.admin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudkms.cryptoKeys.list",
    "roles": [
      "roles/cloudkms.admin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudkms.cryptoKeys.setIamPolicy",
    "roles": [
      "roles/cloudkms.admin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudkms.cryptoKeys.update",
    "roles": [
      "roles/cloudkms.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudkms.importJobs.create",
    "roles": [
      "roles/cloudkms.admin",
      "roles/cloudkms.importer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudkms.importJobs.get",
    "roles": [
      "roles/cloudkms.admin",
      "roles/cloudkms.importer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudkms.importJobs.getIamPolicy",
    "roles": [
      "roles/cloudkms.admin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudkms.importJobs.list",
    "roles": [
      "roles/cloudkms.admin",
      "roles/cloudkms.importer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudkms.importJobs.setIamPolicy",
    "roles": [
      "roles/cloudkms.admin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudkms.importJobs.useToImport",
    "roles": [
      "roles/cloudkms.admin",
      "roles/cloudkms.importer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudkms.keyRings.create",
    "roles": [
      "roles/cloudkms.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudkms.keyRings.get",
    "roles": [
      "roles/cloudkms.admin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudkms.keyRings.getIamPolicy",
    "roles": [
      "roles/cloudkms.admin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudkms.keyRings.list",
    "roles": [
      "roles/cloudkms.admin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudkms.keyRings.setIamPolicy",
    "roles": [
      "roles/cloudkms.admin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudkms.cryptoKeyVersions.useToDecrypt",
    "roles": [
      "roles/cloudkms.cryptoKeyDecrypter",
      "roles/cloudkms.cryptoKeyEncrypterDecrypter",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudkms.cryptoKeyVersions.useToEncrypt",
    "roles": [
      "roles/cloudkms.cryptoKeyEncrypter",
      "roles/cloudkms.cryptoKeyEncrypterDecrypter",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudkms.cryptoKeyVersions.viewPublicKey",
    "roles": [
      "roles/cloudkms.publicKeyViewer",
      "roles/cloudkms.signerVerifier",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudkms.cryptoKeyVersions.useToSign",
    "roles": [
      "roles/cloudkms.signer",
      "roles/cloudkms.signerVerifier",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudmigration.velostrataendpoints.connect",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/cloudmigration.velostrataconnect",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.addresses.create",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.addresses.createInternal",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.addresses.delete",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.addresses.deleteInternal",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.addresses.get",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.addresses.list",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/cloudsecurityscanner.editor",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.addresses.setLabels",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.addresses.use",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.addresses.useInternal",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.diskTypes.get",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.diskTypes.list",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.disks.create",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.disks.delete",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.disks.get",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.disks.list",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.disks.setLabels",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.disks.update",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.disks.use",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.disks.useReadOnly",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.images.get",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.imageUser",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.images.list",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.imageUser",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.images.useReadOnly",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.imageUser",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instances.attachDisk",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.create",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.delete",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataflow.worker",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.detachDisk",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.get",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.osAdminLogin",
      "roles/compute.osLogin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instances.getSerialPortOutput",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instances.list",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.osAdminLogin",
      "roles/compute.osLogin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instances.reset",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.setDiskAutoDelete",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataflow.worker",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.setLabels",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.setMachineType",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.setMetadata",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.setMinCpuPlatform",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.setScheduling",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.setServiceAccount",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.setTags",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.start",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.startWithEncryptionKey",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.stop",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.update",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.updateNetworkInterface",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.updateShieldedInstanceConfig",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.securityAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.use",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.licenseCodes.get",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.licenseCodes.list",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.licenseCodes.update",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.licenseCodes.use",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.licenses.get",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.licenses.list",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.machineTypes.get",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.viewer",
      "roles/dataflow.admin",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.machineTypes.list",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.networks.list",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/dns.admin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/redis.admin",
      "roles/redis.editor",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.networks.use",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.networks.useExternalIp",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.nodeGroups.get",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.nodeGroups.list",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.nodeTemplates.list",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.projects.get",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.orgSecurityPolicyUser",
      "roles/compute.orgSecurityResourceAdmin",
      "roles/compute.osAdminLogin",
      "roles/compute.osLogin",
      "roles/compute.packetMirroringAdmin",
      "roles/compute.packetMirroringUser",
      "roles/compute.securityAdmin",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/compute.xpnAdmin",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.regionOperations.get",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.securityAdmin",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.regions.get",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.regions.list",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.subnetworks.list",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.subnetworks.use",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.subnetworks.useExternalIp",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.zoneOperations.get",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.securityAdmin",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.zones.get",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.zones.list",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "gkehub.endpoints.connect",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/cloudmigration.velostrataconnect",
      "roles/gkehub.connect",
      "roles/owner"
    ]
  },
  {
    "permission": "iam.serviceAccounts.get",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/iam.serviceAccountAdmin",
      "roles/iam.serviceAccountCreator",
      "roles/iam.serviceAccountDeleter",
      "roles/iam.serviceAccountKeyAdmin",
      "roles/iam.serviceAccountTokenCreator",
      "roles/iam.serviceAccountUser",
      "roles/iam.workloadIdentityUser",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "storage.buckets.delete",
    "roles": [
      "roles/cloudmigration.inframanager",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/storage.admin"
    ]
  },
  {
    "permission": "cloudprivatecatalog.targets.get",
    "roles": [
      "roles/cloudprivatecatalog.consumer",
      "roles/cloudprivatecatalogproducer.manager",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudprivatecatalogproducer.associations.create",
    "roles": [
      "roles/cloudprivatecatalogproducer.admin",
      "roles/cloudprivatecatalogproducer.manager",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudprivatecatalogproducer.associations.delete",
    "roles": [
      "roles/cloudprivatecatalogproducer.admin",
      "roles/cloudprivatecatalogproducer.manager",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudprivatecatalogproducer.associations.get",
    "roles": [
      "roles/cloudprivatecatalogproducer.admin",
      "roles/cloudprivatecatalogproducer.manager",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudprivatecatalogproducer.associations.list",
    "roles": [
      "roles/cloudprivatecatalogproducer.admin",
      "roles/cloudprivatecatalogproducer.manager",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudprivatecatalogproducer.catalogs.create",
    "roles": [
      "roles/cloudprivatecatalogproducer.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudprivatecatalogproducer.catalogs.delete",
    "roles": [
      "roles/cloudprivatecatalogproducer.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudprivatecatalogproducer.catalogs.get",
    "roles": [
      "roles/cloudprivatecatalogproducer.admin",
      "roles/cloudprivatecatalogproducer.manager",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudprivatecatalogproducer.catalogs.getIamPolicy",
    "roles": [
      "roles/cloudprivatecatalogproducer.admin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudprivatecatalogproducer.catalogs.list",
    "roles": [
      "roles/cloudprivatecatalogproducer.admin",
      "roles/cloudprivatecatalogproducer.manager",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudprivatecatalogproducer.catalogs.setIamPolicy",
    "roles": [
      "roles/cloudprivatecatalogproducer.admin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudprivatecatalogproducer.catalogs.undelete",
    "roles": [
      "roles/cloudprivatecatalogproducer.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudprivatecatalogproducer.catalogs.update",
    "roles": [
      "roles/cloudprivatecatalogproducer.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudprivatecatalogproducer.targets.associate",
    "roles": [
      "roles/cloudprivatecatalogproducer.manager",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudprivatecatalogproducer.targets.unassociate",
    "roles": [
      "roles/cloudprivatecatalogproducer.manager",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudprofiler.profiles.create",
    "roles": [
      "roles/cloudprofiler.agent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudprofiler.profiles.update",
    "roles": [
      "roles/cloudprofiler.agent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudprofiler.profiles.list",
    "roles": [
      "roles/cloudprofiler.user",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudscheduler.jobs.create",
    "roles": [
      "roles/cloudscheduler.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudscheduler.jobs.delete",
    "roles": [
      "roles/cloudscheduler.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudscheduler.jobs.enable",
    "roles": [
      "roles/cloudscheduler.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudscheduler.jobs.fullView",
    "roles": [
      "roles/cloudscheduler.admin",
      "roles/cloudscheduler.jobRunner",
      "roles/cloudscheduler.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudscheduler.jobs.get",
    "roles": [
      "roles/cloudscheduler.admin",
      "roles/cloudscheduler.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudscheduler.jobs.list",
    "roles": [
      "roles/cloudscheduler.admin",
      "roles/cloudscheduler.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudscheduler.jobs.pause",
    "roles": [
      "roles/cloudscheduler.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudscheduler.jobs.run",
    "roles": [
      "roles/cloudscheduler.admin",
      "roles/cloudscheduler.jobRunner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudscheduler.jobs.update",
    "roles": [
      "roles/cloudscheduler.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudscheduler.locations.get",
    "roles": [
      "roles/cloudscheduler.admin",
      "roles/cloudscheduler.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudscheduler.locations.list",
    "roles": [
      "roles/cloudscheduler.admin",
      "roles/cloudscheduler.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudsecurityscanner.crawledurls.list",
    "roles": [
      "roles/cloudsecurityscanner.editor",
      "roles/cloudsecurityscanner.runner",
      "roles/cloudsecurityscanner.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsecurityscanner.results.get",
    "roles": [
      "roles/cloudsecurityscanner.editor",
      "roles/cloudsecurityscanner.viewer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsecurityscanner.results.list",
    "roles": [
      "roles/cloudsecurityscanner.editor",
      "roles/cloudsecurityscanner.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsecurityscanner.scanruns.get",
    "roles": [
      "roles/cloudsecurityscanner.editor",
      "roles/cloudsecurityscanner.runner",
      "roles/cloudsecurityscanner.viewer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsecurityscanner.scanruns.getSummary",
    "roles": [
      "roles/cloudsecurityscanner.editor",
      "roles/cloudsecurityscanner.viewer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsecurityscanner.scanruns.list",
    "roles": [
      "roles/cloudsecurityscanner.editor",
      "roles/cloudsecurityscanner.runner",
      "roles/cloudsecurityscanner.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsecurityscanner.scanruns.stop",
    "roles": [
      "roles/cloudsecurityscanner.editor",
      "roles/cloudsecurityscanner.runner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsecurityscanner.scans.create",
    "roles": [
      "roles/cloudsecurityscanner.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsecurityscanner.scans.delete",
    "roles": [
      "roles/cloudsecurityscanner.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsecurityscanner.scans.get",
    "roles": [
      "roles/cloudsecurityscanner.editor",
      "roles/cloudsecurityscanner.runner",
      "roles/cloudsecurityscanner.viewer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsecurityscanner.scans.list",
    "roles": [
      "roles/cloudsecurityscanner.editor",
      "roles/cloudsecurityscanner.runner",
      "roles/cloudsecurityscanner.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsecurityscanner.scans.run",
    "roles": [
      "roles/cloudsecurityscanner.editor",
      "roles/cloudsecurityscanner.runner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsecurityscanner.scans.update",
    "roles": [
      "roles/cloudsecurityscanner.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.backupRuns.create",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.backupRuns.delete",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.backupRuns.get",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/cloudsql.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudsql.backupRuns.list",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/cloudsql.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudsql.databases.create",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.databases.delete",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.databases.get",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/cloudsql.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudsql.databases.list",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/cloudsql.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudsql.databases.update",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.addServerCa",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.clone",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.connect",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.client",
      "roles/cloudsql.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.create",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.delete",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.demoteMaster",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.export",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/cloudsql.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudsql.instances.failover",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.get",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.client",
      "roles/cloudsql.editor",
      "roles/cloudsql.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudsql.instances.import",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.list",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/cloudsql.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudsql.instances.listServerCas",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/cloudsql.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudsql.instances.promoteReplica",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.resetSslConfig",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.restart",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.restoreBackup",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.rotateServerCa",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.startReplica",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.stopReplica",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.truncateLog",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.instances.update",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.sslCerts.create",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.sslCerts.createEphemeral",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.sslCerts.delete",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.sslCerts.get",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/cloudsql.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudsql.sslCerts.list",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/cloudsql.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudsql.users.create",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.users.delete",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsql.users.list",
    "roles": [
      "roles/cloudsql.admin",
      "roles/cloudsql.editor",
      "roles/cloudsql.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudsql.users.update",
    "roles": [
      "roles/cloudsql.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsupport.accounts.create",
    "roles": [
      "roles/cloudsupport.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsupport.accounts.delete",
    "roles": [
      "roles/cloudsupport.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsupport.accounts.get",
    "roles": [
      "roles/cloudsupport.admin",
      "roles/cloudsupport.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudsupport.accounts.getIamPolicy",
    "roles": [
      "roles/cloudsupport.admin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudsupport.accounts.getUserRoles",
    "roles": [
      "roles/cloudsupport.admin",
      "roles/cloudsupport.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudsupport.accounts.list",
    "roles": [
      "roles/cloudsupport.admin",
      "roles/cloudsupport.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudsupport.accounts.setIamPolicy",
    "roles": [
      "roles/cloudsupport.admin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsupport.accounts.update",
    "roles": [
      "roles/cloudsupport.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsupport.accounts.updateUserRoles",
    "roles": [
      "roles/cloudsupport.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudsupport.operations.get",
    "roles": [
      "roles/cloudsupport.admin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtasks.locations.get",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.queueAdmin",
      "roles/cloudtasks.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtasks.locations.list",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.queueAdmin",
      "roles/cloudtasks.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtasks.queues.create",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.queueAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtasks.queues.delete",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.queueAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtasks.queues.get",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.queueAdmin",
      "roles/cloudtasks.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtasks.queues.getIamPolicy",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.queueAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtasks.queues.list",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.queueAdmin",
      "roles/cloudtasks.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtasks.queues.pause",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.queueAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtasks.queues.purge",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.queueAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtasks.queues.resume",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.queueAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtasks.queues.setIamPolicy",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.queueAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtasks.queues.update",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.queueAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtasks.tasks.create",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.enqueuer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtasks.tasks.delete",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.taskDeleter",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtasks.tasks.fullView",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.enqueuer",
      "roles/cloudtasks.taskRunner",
      "roles/cloudtasks.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtasks.tasks.get",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtasks.tasks.list",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtasks.tasks.run",
    "roles": [
      "roles/cloudtasks.admin",
      "roles/cloudtasks.taskRunner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtestservice.environmentcatalog.get",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/cloudtestservice.testViewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtestservice.matrices.create",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtestservice.matrices.get",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/cloudtestservice.testViewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtestservice.matrices.update",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtoolresults.executions.create",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtoolresults.executions.get",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/cloudtestservice.testViewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtoolresults.executions.list",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/cloudtestservice.testViewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtoolresults.executions.update",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtoolresults.histories.create",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtoolresults.histories.get",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/cloudtestservice.testViewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtoolresults.histories.list",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/cloudtestservice.testViewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtoolresults.settings.create",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtoolresults.settings.get",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/cloudtestservice.testViewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtoolresults.settings.update",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtoolresults.steps.create",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtoolresults.steps.get",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/cloudtestservice.testViewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtoolresults.steps.list",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/cloudtestservice.testViewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtoolresults.steps.update",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebase.billingPlans.get",
    "roles": [
      "roles/cloudtestservice.testAdmin",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.analyticsAdmin",
      "roles/firebase.analyticsViewer",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtrace.insights.get",
    "roles": [
      "roles/cloudtrace.admin",
      "roles/cloudtrace.user",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtrace.insights.list",
    "roles": [
      "roles/cloudtrace.admin",
      "roles/cloudtrace.user",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtrace.stats.get",
    "roles": [
      "roles/cloudtrace.admin",
      "roles/cloudtrace.user",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtrace.tasks.create",
    "roles": [
      "roles/cloudtrace.admin",
      "roles/cloudtrace.user",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtrace.tasks.delete",
    "roles": [
      "roles/cloudtrace.admin",
      "roles/cloudtrace.user",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtrace.tasks.get",
    "roles": [
      "roles/cloudtrace.admin",
      "roles/cloudtrace.user",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtrace.tasks.list",
    "roles": [
      "roles/cloudtrace.admin",
      "roles/cloudtrace.user",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtrace.traces.get",
    "roles": [
      "roles/cloudtrace.admin",
      "roles/cloudtrace.user",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtrace.traces.list",
    "roles": [
      "roles/cloudtrace.admin",
      "roles/cloudtrace.user",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtrace.traces.patch",
    "roles": [
      "roles/cloudtrace.admin",
      "roles/cloudtrace.agent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtranslate.generalModels.batchPredict",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtranslate.generalModels.get",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/cloudtranslate.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtranslate.generalModels.predict",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtranslate.glossaries.batchPredict",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtranslate.glossaries.create",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtranslate.glossaries.delete",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtranslate.glossaries.get",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/cloudtranslate.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtranslate.glossaries.list",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/cloudtranslate.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtranslate.glossaries.predict",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtranslate.languageDetectionModels.predict",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtranslate.locations.get",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/cloudtranslate.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtranslate.locations.list",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/cloudtranslate.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtranslate.operations.cancel",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtranslate.operations.delete",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudtranslate.operations.get",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/cloudtranslate.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtranslate.operations.list",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/cloudtranslate.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "cloudtranslate.operations.wait",
    "roles": [
      "roles/cloudtranslate.admin",
      "roles/cloudtranslate.editor",
      "roles/cloudtranslate.user",
      "roles/cloudtranslate.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "composer.environments.create",
    "roles": [
      "roles/composer.admin",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "composer.environments.delete",
    "roles": [
      "roles/composer.admin",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "composer.environments.get",
    "roles": [
      "roles/composer.admin",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.environmentAndStorageObjectViewer",
      "roles/composer.user",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "composer.environments.list",
    "roles": [
      "roles/composer.admin",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.environmentAndStorageObjectViewer",
      "roles/composer.user",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "composer.environments.update",
    "roles": [
      "roles/composer.admin",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "composer.imageversions.list",
    "roles": [
      "roles/composer.admin",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.environmentAndStorageObjectViewer",
      "roles/composer.user",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "composer.operations.delete",
    "roles": [
      "roles/composer.admin",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "composer.operations.get",
    "roles": [
      "roles/composer.admin",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.environmentAndStorageObjectViewer",
      "roles/composer.user",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "composer.operations.list",
    "roles": [
      "roles/composer.admin",
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.environmentAndStorageObjectViewer",
      "roles/composer.user",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "storage.objects.getIamPolicy",
    "roles": [
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.worker",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.worker",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/storage.admin",
      "roles/storage.legacyObjectOwner",
      "roles/storage.objectAdmin"
    ]
  },
  {
    "permission": "storage.objects.setIamPolicy",
    "roles": [
      "roles/composer.environmentAndStorageObjectAdmin",
      "roles/composer.worker",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.worker",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/storage.admin",
      "roles/storage.legacyObjectOwner",
      "roles/storage.objectAdmin"
    ]
  },
  {
    "permission": "container.apiServices.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.apiServices.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.apiServices.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.apiServices.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.apiServices.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.apiServices.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.backendConfigs.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.backendConfigs.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.backendConfigs.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.backendConfigs.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.backendConfigs.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.bindings.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.bindings.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.bindings.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.bindings.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.bindings.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.certificateSigningRequests.approve",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "container.certificateSigningRequests.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.certificateSigningRequests.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.certificateSigningRequests.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.certificateSigningRequests.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.certificateSigningRequests.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.certificateSigningRequests.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.clusterRoleBindings.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "container.clusterRoleBindings.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "container.clusterRoleBindings.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.clusterRoleBindings.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.clusterRoleBindings.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "container.clusterRoles.bind",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "container.clusterRoles.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "container.clusterRoles.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "container.clusterRoles.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.clusterRoles.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.clusterRoles.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "container.clusters.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.clusterAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.clusters.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.clusterAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.clusters.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.clusterAdmin",
      "roles/container.clusterViewer",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.clusters.getCredentials",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.clusters.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.clusterAdmin",
      "roles/container.clusterViewer",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.clusters.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.clusterAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.componentStatuses.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.componentStatuses.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.configMaps.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.configMaps.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.configMaps.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.configMaps.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.configMaps.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.controllerRevisions.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.controllerRevisions.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.controllerRevisions.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.controllerRevisions.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.controllerRevisions.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.cronJobs.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.cronJobs.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.cronJobs.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.cronJobs.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.cronJobs.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.cronJobs.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.cronJobs.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.csiDrivers.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.csiDrivers.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.csiDrivers.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.csiDrivers.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.csiDrivers.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.csiNodes.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.csiNodes.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.csiNodes.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.csiNodes.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.csiNodes.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.customResourceDefinitions.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.customResourceDefinitions.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.customResourceDefinitions.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.customResourceDefinitions.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.customResourceDefinitions.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.customResourceDefinitions.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.daemonSets.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.daemonSets.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.daemonSets.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.daemonSets.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.daemonSets.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.daemonSets.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.daemonSets.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.deployments.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.deployments.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.deployments.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.deployments.getScale",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.deployments.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.deployments.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.deployments.rollback",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.deployments.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.deployments.updateScale",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.deployments.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.endpoints.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.endpoints.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.endpoints.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.endpoints.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.endpoints.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.events.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.events.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.events.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.events.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.events.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.horizontalPodAutoscalers.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.horizontalPodAutoscalers.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.horizontalPodAutoscalers.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.horizontalPodAutoscalers.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.horizontalPodAutoscalers.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.horizontalPodAutoscalers.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.horizontalPodAutoscalers.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.hostServiceAgent.use",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.hostServiceAgentUser"
    ]
  },
  {
    "permission": "container.ingresses.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.ingresses.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.ingresses.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.ingresses.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.ingresses.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.ingresses.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.ingresses.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.initializerConfigurations.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.initializerConfigurations.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.initializerConfigurations.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.initializerConfigurations.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.initializerConfigurations.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.jobs.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.jobs.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.jobs.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.jobs.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.jobs.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.jobs.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.jobs.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.limitRanges.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.limitRanges.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.limitRanges.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.limitRanges.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.limitRanges.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.localSubjectAccessReviews.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/owner"
    ]
  },
  {
    "permission": "container.localSubjectAccessReviews.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.namespaces.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.namespaces.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.namespaces.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.namespaces.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.namespaces.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.namespaces.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.namespaces.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.networkPolicies.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.networkPolicies.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.networkPolicies.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.networkPolicies.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.networkPolicies.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.nodes.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.nodes.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.nodes.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.nodes.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.nodes.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.nodes.proxy",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.nodes.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.nodes.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.operations.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.clusterAdmin",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.operations.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.clusterAdmin",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.persistentVolumeClaims.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.persistentVolumeClaims.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.persistentVolumeClaims.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.persistentVolumeClaims.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.persistentVolumeClaims.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.persistentVolumeClaims.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.persistentVolumeClaims.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.persistentVolumes.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.persistentVolumes.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.persistentVolumes.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.persistentVolumes.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.persistentVolumes.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.persistentVolumes.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.persistentVolumes.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.petSets.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.petSets.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.petSets.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.petSets.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.petSets.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.petSets.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.podDisruptionBudgets.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.podDisruptionBudgets.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.podDisruptionBudgets.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.podDisruptionBudgets.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.podDisruptionBudgets.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.podDisruptionBudgets.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.podDisruptionBudgets.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.podPresets.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.podPresets.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.podPresets.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.podPresets.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.podPresets.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.podSecurityPolicies.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.podSecurityPolicies.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.podSecurityPolicies.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.podSecurityPolicies.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.podSecurityPolicies.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.podSecurityPolicies.use",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.podTemplates.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.podTemplates.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.podTemplates.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.podTemplates.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.podTemplates.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.pods.attach",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.pods.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.pods.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.pods.evict",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.pods.exec",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.pods.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.pods.getLogs",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.pods.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.pods.initialize",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.pods.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.pods.portForward",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.pods.proxy",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.pods.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.pods.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.replicaSets.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.replicaSets.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.replicaSets.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.replicaSets.getScale",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.replicaSets.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.replicaSets.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.replicaSets.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.replicaSets.updateScale",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.replicaSets.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.replicationControllers.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.replicationControllers.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.replicationControllers.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.replicationControllers.getScale",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.replicationControllers.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.replicationControllers.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.replicationControllers.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.replicationControllers.updateScale",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.replicationControllers.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.resourceQuotas.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.resourceQuotas.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.resourceQuotas.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.resourceQuotas.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.resourceQuotas.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.resourceQuotas.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.resourceQuotas.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.roleBindings.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "container.roleBindings.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "container.roleBindings.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.roleBindings.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.roleBindings.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "container.roles.bind",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "container.roles.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "container.roles.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "container.roles.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.roles.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.roles.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "container.runtimeClasses.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.runtimeClasses.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.runtimeClasses.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.runtimeClasses.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.runtimeClasses.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.scheduledJobs.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.scheduledJobs.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.scheduledJobs.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.scheduledJobs.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.scheduledJobs.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.scheduledJobs.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.secrets.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.secrets.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.secrets.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.secrets.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "container.secrets.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.selfSubjectAccessReviews.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.selfSubjectAccessReviews.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.serviceAccounts.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.serviceAccounts.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.serviceAccounts.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.serviceAccounts.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.serviceAccounts.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.services.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.services.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.services.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.services.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.services.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.services.proxy",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.services.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.services.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.statefulSets.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.statefulSets.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.statefulSets.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.statefulSets.getScale",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.statefulSets.getStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.statefulSets.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.statefulSets.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.statefulSets.updateScale",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.statefulSets.updateStatus",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.storageClasses.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.storageClasses.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.storageClasses.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.storageClasses.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.storageClasses.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.subjectAccessReviews.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/owner"
    ]
  },
  {
    "permission": "container.subjectAccessReviews.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.thirdPartyObjects.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.thirdPartyObjects.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.thirdPartyObjects.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.thirdPartyObjects.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.thirdPartyObjects.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.thirdPartyResources.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.thirdPartyResources.delete",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.thirdPartyResources.get",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.thirdPartyResources.list",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "container.thirdPartyResources.update",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "container.tokenReviews.create",
    "roles": [
      "roles/composer.worker",
      "roles/container.admin",
      "roles/container.developer",
      "roles/container.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.metricDescriptors.create",
    "roles": [
      "roles/composer.worker",
      "roles/dataproc.worker",
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.metricWriter",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.monitoredResourceDescriptors.get",
    "roles": [
      "roles/composer.worker",
      "roles/dataproc.worker",
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.metricWriter",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.monitoredResourceDescriptors.list",
    "roles": [
      "roles/composer.worker",
      "roles/dataproc.worker",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.metricWriter",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.timeSeries.create",
    "roles": [
      "roles/composer.worker",
      "roles/dataproc.worker",
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.metricWriter",
      "roles/owner"
    ]
  },
  {
    "permission": "pubsub.snapshots.create",
    "roles": [
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor"
    ]
  },
  {
    "permission": "pubsub.snapshots.delete",
    "roles": [
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor"
    ]
  },
  {
    "permission": "pubsub.snapshots.get",
    "roles": [
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor",
      "roles/pubsub.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "pubsub.snapshots.list",
    "roles": [
      "roles/composer.worker",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor",
      "roles/pubsub.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "pubsub.snapshots.seek",
    "roles": [
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor",
      "roles/pubsub.subscriber",
      "roles/viewer"
    ]
  },
  {
    "permission": "pubsub.snapshots.update",
    "roles": [
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor"
    ]
  },
  {
    "permission": "pubsub.topics.delete",
    "roles": [
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor"
    ]
  },
  {
    "permission": "pubsub.topics.list",
    "roles": [
      "roles/composer.worker",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor",
      "roles/pubsub.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "pubsub.topics.update",
    "roles": [
      "roles/composer.worker",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor"
    ]
  },
  {
    "permission": "pubsub.topics.updateTag",
    "roles": [
      "roles/composer.worker",
      "roles/datacatalog.admin",
      "roles/datacatalog.tagEditor",
      "roles/editor",
      "roles/owner",
      "roles/pubsub.admin",
      "roles/pubsub.editor"
    ]
  },
  {
    "permission": "compute.acceleratorTypes.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.acceleratorTypes.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.autoscalers.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.autoscalers.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.autoscalers.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.autoscalers.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.autoscalers.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.backendBuckets.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.backendBuckets.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.backendBuckets.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.backendBuckets.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.backendBuckets.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.backendBuckets.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.backendServices.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.backendServices.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.backendServices.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.backendServices.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.backendServices.setSecurityPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.backendServices.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.backendServices.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.commitments.create",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.commitments.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.commitments.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.disks.addResourcePolicies",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.disks.createSnapshot",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.disks.getIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.disks.removeResourcePolicies",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.disks.resize",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.disks.setIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.externalVpnGateways.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.externalVpnGateways.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.externalVpnGateways.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.externalVpnGateways.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.externalVpnGateways.setLabels",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.externalVpnGateways.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.firewalls.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.securityAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.firewalls.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.securityAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.firewalls.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.securityAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.forwardingRules.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.forwardingRules.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.forwardingRules.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.forwardingRules.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.forwardingRules.setLabels",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.forwardingRules.setTarget",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.globalAddresses.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.globalAddresses.createInternal",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.globalAddresses.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.globalAddresses.deleteInternal",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.globalAddresses.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.globalAddresses.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.globalAddresses.setLabels",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.globalAddresses.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.globalForwardingRules.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.globalForwardingRules.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.globalForwardingRules.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.globalForwardingRules.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.globalForwardingRules.setLabels",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.globalForwardingRules.setTarget",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.globalOperations.delete",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.globalOperations.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.orgSecurityPolicyUser",
      "roles/compute.orgSecurityResourceAdmin",
      "roles/compute.securityAdmin",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/compute.xpnAdmin",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.globalOperations.getIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.orgSecurityPolicyUser",
      "roles/compute.orgSecurityResourceAdmin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.globalOperations.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.orgSecurityPolicyUser",
      "roles/compute.orgSecurityResourceAdmin",
      "roles/compute.securityAdmin",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/compute.xpnAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.globalOperations.setIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.orgSecurityPolicyUser",
      "roles/compute.orgSecurityResourceAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.healthChecks.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.healthChecks.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.healthChecks.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.healthChecks.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.healthChecks.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.healthChecks.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.healthChecks.useReadOnly",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.httpHealthChecks.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.httpHealthChecks.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.httpHealthChecks.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.httpHealthChecks.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.httpHealthChecks.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.httpHealthChecks.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.httpHealthChecks.useReadOnly",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.httpsHealthChecks.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.httpsHealthChecks.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.httpsHealthChecks.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.httpsHealthChecks.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.httpsHealthChecks.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.httpsHealthChecks.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.httpsHealthChecks.useReadOnly",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.images.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.images.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.images.deprecate",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.images.getFromFamily",
    "roles": [
      "roles/compute.admin",
      "roles/compute.imageUser",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.images.getIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.images.setIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.images.setLabels",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.images.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instanceGroupManagers.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instanceGroupManagers.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instanceGroupManagers.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instanceGroupManagers.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instanceGroupManagers.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/dataflow.worker",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instanceGroupManagers.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instanceGroups.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instanceGroups.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instanceGroups.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instanceGroups.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instanceGroups.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instanceGroups.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instanceTemplates.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instanceTemplates.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instanceTemplates.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instanceTemplates.getIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instanceTemplates.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instanceTemplates.setIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instanceTemplates.useReadOnly",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instances.addAccessConfig",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.addMaintenancePolicies",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.deleteAccessConfig",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.getGuestAttributes",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instances.getIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instances.getShieldedInstanceIdentity",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instances.getShieldedVmIdentity",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instances.listReferrers",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.instances.osAdminLogin",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.osAdminLogin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.osLogin",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.osAdminLogin",
      "roles/compute.osLogin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.removeMaintenancePolicies",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.resume",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.setDeletionProtection",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.setIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.setMachineResources",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.setShieldedInstanceIntegrityPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.securityAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.setShieldedVmIntegrityPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.securityAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.suspend",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.updateAccessConfig",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.updateDisplayDevice",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.instances.updateShieldedVmConfig",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.securityAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.interconnectAttachments.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.interconnectAttachments.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.interconnectAttachments.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.interconnectAttachments.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.interconnectAttachments.setLabels",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.interconnectAttachments.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.interconnectAttachments.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.interconnectLocations.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.interconnectLocations.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.interconnects.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.interconnects.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.interconnects.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.interconnects.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.interconnects.setLabels",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.interconnects.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.interconnects.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.licenseCodes.getIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.licenseCodes.setIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.licenses.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.licenses.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.licenses.getIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.licenses.setIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.maintenancePolicies.create",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.maintenancePolicies.delete",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.maintenancePolicies.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.maintenancePolicies.getIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.maintenancePolicies.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.maintenancePolicies.setIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.maintenancePolicies.use",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.networkEndpointGroups.attachNetworkEndpoints",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.networkEndpointGroups.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.networkEndpointGroups.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.networkEndpointGroups.detachNetworkEndpoints",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.networkEndpointGroups.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.networkEndpointGroups.getIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.networkEndpointGroups.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.networkEndpointGroups.setIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/dataproc.serviceAgent",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.networkEndpointGroups.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.networks.addPeering",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.networks.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.networks.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.networks.mirror",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/compute.packetMirroringAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.networks.removePeering",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.networks.switchToCustomMode",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.networks.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.networks.updatePeering",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.networks.updatePolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/compute.securityAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.nodeGroups.addNodes",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.nodeGroups.create",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.nodeGroups.delete",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.nodeGroups.deleteNodes",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.nodeGroups.getIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.nodeGroups.setIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.nodeGroups.setNodeTemplate",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.nodeTemplates.create",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.nodeTemplates.delete",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.nodeTemplates.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.nodeTemplates.getIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.nodeTemplates.setIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.nodeTypes.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.nodeTypes.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.organizations.administerXpn",
    "roles": [
      "roles/compute.admin",
      "roles/compute.xpnAdmin"
    ]
  },
  {
    "permission": "compute.organizations.disableXpnHost",
    "roles": [
      "roles/compute.admin",
      "roles/compute.xpnAdmin"
    ]
  },
  {
    "permission": "compute.organizations.disableXpnResource",
    "roles": [
      "roles/compute.admin",
      "roles/compute.xpnAdmin"
    ]
  },
  {
    "permission": "compute.organizations.enableXpnHost",
    "roles": [
      "roles/compute.admin",
      "roles/compute.xpnAdmin"
    ]
  },
  {
    "permission": "compute.organizations.enableXpnResource",
    "roles": [
      "roles/compute.admin",
      "roles/compute.xpnAdmin"
    ]
  },
  {
    "permission": "compute.oslogin.updateExternalUser",
    "roles": [
      "roles/compute.admin",
      "roles/compute.osLoginExternalUser",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.packetMirrorings.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.packetMirroringUser",
      "roles/compute.securityAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.projects.setCommonInstanceMetadata",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.projects.setDefaultNetworkTier",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.projects.setDefaultServiceAccount",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.projects.setUsageExportBucket",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.regionBackendServices.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.regionBackendServices.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.regionBackendServices.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.regionBackendServices.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.regionBackendServices.setSecurityPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.regionBackendServices.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.regionBackendServices.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.regionOperations.delete",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.regionOperations.getIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.regionOperations.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.securityAdmin",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.regionOperations.setIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.reservations.create",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.reservations.delete",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.reservations.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.reservations.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.reservations.resize",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.resourcePolicies.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.resourcePolicies.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.resourcePolicies.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.resourcePolicies.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.resourcePolicies.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.routers.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.routers.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.routers.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.routers.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.routers.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.routers.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.routes.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.routes.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.routes.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.routes.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.securityPolicies.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.securityAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.securityPolicies.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.securityAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.securityPolicies.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.orgSecurityPolicyUser",
      "roles/compute.securityAdmin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.securityPolicies.getIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.securityAdmin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.securityPolicies.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.orgSecurityPolicyUser",
      "roles/compute.securityAdmin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.securityPolicies.setIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.securityAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.securityPolicies.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.securityAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.securityPolicies.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.orgSecurityPolicyAdmin",
      "roles/compute.orgSecurityPolicyUser",
      "roles/compute.securityAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.snapshots.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.snapshots.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.snapshots.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.snapshots.getIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.snapshots.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.snapshots.setIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.snapshots.setLabels",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.snapshots.useReadOnly",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.storageAdmin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.sslCertificates.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.securityAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.sslCertificates.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.securityAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.sslCertificates.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.sslCertificates.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.sslPolicies.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.securityAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.sslPolicies.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.securityAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.sslPolicies.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.sslPolicies.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.sslPolicies.listAvailableFeatures",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.securityAdmin",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.sslPolicies.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.securityAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.sslPolicies.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.securityAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.subnetworks.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.subnetworks.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.subnetworks.expandIpCidrRange",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.subnetworks.getIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/compute.viewer",
      "roles/compute.xpnAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.subnetworks.mirror",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/compute.packetMirroringAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.subnetworks.setIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/compute.xpnAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.subnetworks.setPrivateIpGoogleAccess",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.subnetworks.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetHttpProxies.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetHttpProxies.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetHttpProxies.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.targetHttpProxies.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.targetHttpProxies.setUrlMap",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetHttpProxies.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetHttpsProxies.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetHttpsProxies.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetHttpsProxies.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.targetHttpsProxies.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.targetHttpsProxies.setSslCertificates",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetHttpsProxies.setSslPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetHttpsProxies.setUrlMap",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetHttpsProxies.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetInstances.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetInstances.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetInstances.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.targetInstances.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.targetInstances.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetPools.addHealthCheck",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetPools.addInstance",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetPools.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetPools.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetPools.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.targetPools.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.targetPools.removeHealthCheck",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetPools.removeInstance",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetPools.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetPools.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetSslProxies.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetSslProxies.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetSslProxies.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.targetSslProxies.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.targetSslProxies.setBackendService",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetSslProxies.setProxyHeader",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetSslProxies.setSslCertificates",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetSslProxies.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetTcpProxies.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetTcpProxies.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetTcpProxies.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.targetTcpProxies.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.targetTcpProxies.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetTcpProxies.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetVpnGateways.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetVpnGateways.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetVpnGateways.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.targetVpnGateways.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.targetVpnGateways.setLabels",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.targetVpnGateways.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.urlMaps.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.urlMaps.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.urlMaps.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.urlMaps.invalidateCache",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.urlMaps.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.urlMaps.update",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.urlMaps.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.urlMaps.validate",
    "roles": [
      "roles/compute.admin",
      "roles/compute.loadBalancerAdmin",
      "roles/compute.networkAdmin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.vpnGateways.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.vpnGateways.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.vpnGateways.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.vpnGateways.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.vpnGateways.setLabels",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.vpnGateways.use",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.vpnTunnels.create",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.vpnTunnels.delete",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.vpnTunnels.get",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.vpnTunnels.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/compute.viewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.vpnTunnels.setLabels",
    "roles": [
      "roles/compute.admin",
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.zoneOperations.delete",
    "roles": [
      "roles/compute.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "compute.zoneOperations.getIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/compute.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.zoneOperations.list",
    "roles": [
      "roles/compute.admin",
      "roles/compute.instanceAdmin",
      "roles/compute.instanceAdmin.v1",
      "roles/compute.networkAdmin",
      "roles/compute.securityAdmin",
      "roles/compute.storageAdmin",
      "roles/compute.viewer",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "compute.zoneOperations.setIamPolicy",
    "roles": [
      "roles/compute.admin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "servicenetworking.operations.get",
    "roles": [
      "roles/compute.networkAdmin",
      "roles/editor",
      "roles/owner",
      "roles/servicenetworking.networksAdmin",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicenetworking.services.addPeering",
    "roles": [
      "roles/compute.networkAdmin",
      "roles/owner",
      "roles/servicenetworking.networksAdmin"
    ]
  },
  {
    "permission": "servicenetworking.services.get",
    "roles": [
      "roles/compute.networkAdmin",
      "roles/compute.networkUser",
      "roles/compute.networkViewer",
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/servicenetworking.networksAdmin",
      "roles/viewer"
    ]
  },
  {
    "permission": "datacatalog.categories.getIamPolicy",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.categoryAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datacatalog.categories.setIamPolicy",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.categoryAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.entries.create",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.entryCreator",
      "roles/datacatalog.entryGroupOwner",
      "roles/datacatalog.entryOwner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.entries.delete",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.entryGroupOwner",
      "roles/datacatalog.entryOwner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.entries.get",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.entryCreator",
      "roles/datacatalog.entryGroupOwner",
      "roles/datacatalog.entryOwner",
      "roles/datacatalog.entryViewer",
      "roles/datacatalog.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datacatalog.entries.getIamPolicy",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.entryGroupOwner",
      "roles/datacatalog.entryOwner",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datacatalog.entries.setIamPolicy",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.entryGroupOwner",
      "roles/datacatalog.entryOwner",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.entries.update",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.entryGroupOwner",
      "roles/datacatalog.entryOwner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.entryGroups.create",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.entryGroupCreator",
      "roles/datacatalog.entryGroupOwner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.entryGroups.delete",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.entryGroupOwner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.entryGroups.get",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.entryCreator",
      "roles/datacatalog.entryGroupCreator",
      "roles/datacatalog.entryGroupOwner",
      "roles/datacatalog.entryOwner",
      "roles/datacatalog.entryViewer",
      "roles/datacatalog.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datacatalog.entryGroups.getIamPolicy",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.entryGroupOwner",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datacatalog.entryGroups.setIamPolicy",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.entryGroupOwner",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.tagTemplates.create",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.tagTemplateCreator",
      "roles/datacatalog.tagTemplateOwner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.tagTemplates.delete",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.tagTemplateOwner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.tagTemplates.get",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.tagTemplateCreator",
      "roles/datacatalog.tagTemplateOwner",
      "roles/datacatalog.tagTemplateUser",
      "roles/datacatalog.tagTemplateViewer",
      "roles/datacatalog.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datacatalog.tagTemplates.getIamPolicy",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.tagTemplateOwner",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datacatalog.tagTemplates.getTag",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.tagTemplateOwner",
      "roles/datacatalog.tagTemplateUser",
      "roles/datacatalog.tagTemplateViewer",
      "roles/datacatalog.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datacatalog.tagTemplates.setIamPolicy",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.tagTemplateOwner",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.tagTemplates.update",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.tagTemplateOwner",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.tagTemplates.use",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.tagTemplateOwner",
      "roles/datacatalog.tagTemplateUser",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.taxonomies.create",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.categoryAdmin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.taxonomies.delete",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.categoryAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.taxonomies.get",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.categoryAdmin",
      "roles/datacatalog.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datacatalog.taxonomies.getIamPolicy",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.categoryAdmin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datacatalog.taxonomies.list",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.categoryAdmin",
      "roles/datacatalog.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datacatalog.taxonomies.setIamPolicy",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.categoryAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.taxonomies.update",
    "roles": [
      "roles/datacatalog.admin",
      "roles/datacatalog.categoryAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datacatalog.categories.fineGrainedGet",
    "roles": [
      "roles/datacatalog.categoryFineGrainedReader"
    ]
  },
  {
    "permission": "dataflow.jobs.cancel",
    "roles": [
      "roles/dataflow.admin",
      "roles/dataflow.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataflow.jobs.create",
    "roles": [
      "roles/dataflow.admin",
      "roles/dataflow.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataflow.jobs.get",
    "roles": [
      "roles/dataflow.admin",
      "roles/dataflow.developer",
      "roles/dataflow.viewer",
      "roles/dataflow.worker",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataflow.jobs.list",
    "roles": [
      "roles/dataflow.admin",
      "roles/dataflow.developer",
      "roles/dataflow.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataflow.jobs.updateContents",
    "roles": [
      "roles/dataflow.admin",
      "roles/dataflow.developer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataflow.messages.list",
    "roles": [
      "roles/dataflow.admin",
      "roles/dataflow.developer",
      "roles/dataflow.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataflow.metrics.get",
    "roles": [
      "roles/dataflow.admin",
      "roles/dataflow.developer",
      "roles/dataflow.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datafusion.instances.create",
    "roles": [
      "roles/datafusion.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datafusion.instances.delete",
    "roles": [
      "roles/datafusion.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datafusion.instances.get",
    "roles": [
      "roles/datafusion.admin",
      "roles/datafusion.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datafusion.instances.getIamPolicy",
    "roles": [
      "roles/datafusion.admin",
      "roles/datafusion.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datafusion.instances.list",
    "roles": [
      "roles/datafusion.admin",
      "roles/datafusion.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datafusion.instances.restart",
    "roles": [
      "roles/datafusion.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datafusion.instances.setIamPolicy",
    "roles": [
      "roles/datafusion.admin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datafusion.instances.update",
    "roles": [
      "roles/datafusion.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datafusion.instances.upgrade",
    "roles": [
      "roles/datafusion.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datafusion.locations.get",
    "roles": [
      "roles/datafusion.admin",
      "roles/datafusion.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datafusion.locations.list",
    "roles": [
      "roles/datafusion.admin",
      "roles/datafusion.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datafusion.operations.cancel",
    "roles": [
      "roles/datafusion.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datafusion.operations.get",
    "roles": [
      "roles/datafusion.admin",
      "roles/datafusion.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datafusion.operations.list",
    "roles": [
      "roles/datafusion.admin",
      "roles/datafusion.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataproc.clusters.create",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.clusters.delete",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.clusters.get",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataproc.clusters.list",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataproc.clusters.update",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.clusters.use",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.jobs.cancel",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.jobs.create",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.jobs.delete",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.jobs.get",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataproc.jobs.list",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/dataproc.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataproc.jobs.update",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.operations.delete",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.operations.get",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataproc.operations.list",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataproc.workflowTemplates.create",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.workflowTemplates.delete",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.workflowTemplates.get",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataproc.workflowTemplates.instantiate",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.workflowTemplates.instantiateInline",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.workflowTemplates.list",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/dataproc.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataproc.workflowTemplates.update",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.admin",
      "roles/dataproc.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "spanner.databaseOperations.cancel",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.databaseUser"
    ]
  },
  {
    "permission": "spanner.databaseOperations.delete",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.databaseUser"
    ]
  },
  {
    "permission": "spanner.databaseOperations.get",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.databaseUser",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.databaseOperations.list",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.databaseUser",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.databases.beginOrRollbackReadWriteTransaction",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.databaseUser"
    ]
  },
  {
    "permission": "spanner.databases.beginReadOnlyTransaction",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.databaseReader",
      "roles/spanner.databaseUser",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.databases.getDdl",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.databaseReader",
      "roles/spanner.databaseUser",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.databases.list",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.databases.read",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.databaseReader",
      "roles/spanner.databaseUser",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.databases.select",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.databaseReader",
      "roles/spanner.databaseUser",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.databases.updateDdl",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.databaseUser"
    ]
  },
  {
    "permission": "spanner.databases.write",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.databaseUser"
    ]
  },
  {
    "permission": "spanner.instanceConfigs.get",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.instanceConfigs.list",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.instances.get",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.instances.list",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.sessions.create",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.databaseReader",
      "roles/spanner.databaseUser",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.sessions.delete",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.databaseReader",
      "roles/spanner.databaseUser",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.sessions.get",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.databaseReader",
      "roles/spanner.databaseUser",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.sessions.list",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/spanner.databaseReader",
      "roles/spanner.databaseUser",
      "roles/viewer"
    ]
  },
  {
    "permission": "storage.buckets.getIamPolicy",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/storage.admin",
      "roles/storage.legacyBucketOwner"
    ]
  },
  {
    "permission": "storage.buckets.setIamPolicy",
    "roles": [
      "roles/datafusion.serviceAgent",
      "roles/dataproc.serviceAgent",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/storage.admin",
      "roles/storage.legacyBucketOwner"
    ]
  },
  {
    "permission": "datalabeling.annotateddatasets.delete",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datalabeling.annotateddatasets.get",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/datalabeling.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datalabeling.annotateddatasets.label",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datalabeling.annotateddatasets.list",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/datalabeling.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datalabeling.annotationspecsets.create",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datalabeling.annotationspecsets.delete",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datalabeling.annotationspecsets.get",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/datalabeling.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datalabeling.annotationspecsets.list",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/datalabeling.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datalabeling.dataitems.get",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/datalabeling.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datalabeling.dataitems.list",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/datalabeling.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datalabeling.datasets.create",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datalabeling.datasets.delete",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datalabeling.datasets.export",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datalabeling.datasets.get",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/datalabeling.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datalabeling.datasets.import",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datalabeling.datasets.list",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/datalabeling.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datalabeling.examples.get",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/datalabeling.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datalabeling.examples.list",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/datalabeling.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datalabeling.instructions.create",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datalabeling.instructions.delete",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datalabeling.instructions.get",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/datalabeling.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datalabeling.instructions.list",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/datalabeling.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datalabeling.operations.cancel",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "datalabeling.operations.get",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/datalabeling.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datalabeling.operations.list",
    "roles": [
      "roles/datalabeling.admin",
      "roles/datalabeling.editor",
      "roles/datalabeling.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataprep.projects.use",
    "roles": [
      "roles/dataprep.projects.user",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.clusters.getIamPolicy",
    "roles": [
      "roles/dataproc.admin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataproc.clusters.setIamPolicy",
    "roles": [
      "roles/dataproc.admin",
      "roles/dataproc.serviceAgent",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.jobs.getIamPolicy",
    "roles": [
      "roles/dataproc.admin",
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataproc.jobs.setIamPolicy",
    "roles": [
      "roles/dataproc.admin",
      "roles/dataproc.serviceAgent",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.operations.cancel",
    "roles": [
      "roles/dataproc.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.operations.getIamPolicy",
    "roles": [
      "roles/dataproc.admin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataproc.operations.setIamPolicy",
    "roles": [
      "roles/dataproc.admin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.workflowTemplates.getIamPolicy",
    "roles": [
      "roles/dataproc.admin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataproc.workflowTemplates.setIamPolicy",
    "roles": [
      "roles/dataproc.admin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "iam.serviceAccounts.actAs",
    "roles": [
      "roles/dataproc.serviceAgent",
      "roles/editor",
      "roles/iam.serviceAccountUser",
      "roles/owner",
      "roles/serverless.serviceAgent"
    ]
  },
  {
    "permission": "dataproc.agents.create",
    "roles": [
      "roles/dataproc.worker",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.agents.delete",
    "roles": [
      "roles/dataproc.worker",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.agents.get",
    "roles": [
      "roles/dataproc.worker",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataproc.agents.list",
    "roles": [
      "roles/dataproc.worker",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataproc.agents.update",
    "roles": [
      "roles/dataproc.worker",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.tasks.lease",
    "roles": [
      "roles/dataproc.worker",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataproc.tasks.listInvalidatedLeases",
    "roles": [
      "roles/dataproc.worker",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataproc.tasks.reportStatus",
    "roles": [
      "roles/dataproc.worker",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dataprocessing.featurecontrols.get",
    "roles": [
      "roles/dataprocessing.admin",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataprocessing.featurecontrols.list",
    "roles": [
      "roles/dataprocessing.admin",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dataprocessing.featurecontrols.update",
    "roles": [
      "roles/dataprocessing.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "dataprocessing.iamaccesshistory.exportData",
    "roles": [
      "roles/dataprocessing.admin",
      "roles/dataprocessing.iamAccessHistoryExporter",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.databases.export",
    "roles": [
      "roles/datastore.importExportAdmin",
      "roles/datastore.owner",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.databases.import",
    "roles": [
      "roles/datastore.importExportAdmin",
      "roles/datastore.owner",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.operations.cancel",
    "roles": [
      "roles/datastore.importExportAdmin",
      "roles/datastore.owner",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.operations.get",
    "roles": [
      "roles/datastore.importExportAdmin",
      "roles/datastore.owner",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.operations.list",
    "roles": [
      "roles/datastore.importExportAdmin",
      "roles/datastore.owner",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.indexes.create",
    "roles": [
      "roles/datastore.indexAdmin",
      "roles/datastore.owner",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.indexes.delete",
    "roles": [
      "roles/datastore.indexAdmin",
      "roles/datastore.owner",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.indexes.get",
    "roles": [
      "roles/datastore.indexAdmin",
      "roles/datastore.owner",
      "roles/datastore.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datastore.indexes.list",
    "roles": [
      "roles/datastore.indexAdmin",
      "roles/datastore.owner",
      "roles/datastore.user",
      "roles/datastore.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datastore.indexes.update",
    "roles": [
      "roles/datastore.indexAdmin",
      "roles/datastore.owner",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.databases.create",
    "roles": [
      "roles/datastore.owner",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.databases.delete",
    "roles": [
      "roles/datastore.owner",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.databases.get",
    "roles": [
      "roles/datastore.owner",
      "roles/datastore.user",
      "roles/datastore.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datastore.databases.getIamPolicy",
    "roles": [
      "roles/datastore.owner",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datastore.databases.list",
    "roles": [
      "roles/datastore.owner",
      "roles/datastore.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datastore.databases.setIamPolicy",
    "roles": [
      "roles/datastore.owner",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.databases.update",
    "roles": [
      "roles/datastore.owner",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.entities.allocateIds",
    "roles": [
      "roles/datastore.owner",
      "roles/datastore.user",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.entities.create",
    "roles": [
      "roles/datastore.owner",
      "roles/datastore.user",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.entities.delete",
    "roles": [
      "roles/datastore.owner",
      "roles/datastore.user",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.entities.get",
    "roles": [
      "roles/datastore.owner",
      "roles/datastore.user",
      "roles/datastore.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datastore.entities.list",
    "roles": [
      "roles/datastore.owner",
      "roles/datastore.user",
      "roles/datastore.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datastore.entities.update",
    "roles": [
      "roles/datastore.owner",
      "roles/datastore.user",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.locations.get",
    "roles": [
      "roles/datastore.owner",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.locations.list",
    "roles": [
      "roles/datastore.owner",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.namespaces.get",
    "roles": [
      "roles/datastore.owner",
      "roles/datastore.user",
      "roles/datastore.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datastore.namespaces.getIamPolicy",
    "roles": [
      "roles/datastore.owner",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datastore.namespaces.list",
    "roles": [
      "roles/datastore.owner",
      "roles/datastore.user",
      "roles/datastore.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datastore.namespaces.setIamPolicy",
    "roles": [
      "roles/datastore.owner",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.operations.delete",
    "roles": [
      "roles/datastore.owner",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "datastore.statistics.get",
    "roles": [
      "roles/datastore.owner",
      "roles/datastore.user",
      "roles/datastore.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "datastore.statistics.list",
    "roles": [
      "roles/datastore.owner",
      "roles/datastore.user",
      "roles/datastore.viewer",
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.compositeTypes.create",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "deploymentmanager.compositeTypes.delete",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "deploymentmanager.compositeTypes.get",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/deploymentmanager.typeViewer",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.compositeTypes.list",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/deploymentmanager.typeViewer",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.compositeTypes.update",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "deploymentmanager.deployments.cancelPreview",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "deploymentmanager.deployments.create",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "deploymentmanager.deployments.delete",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "deploymentmanager.deployments.get",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.deployments.list",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.deployments.stop",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "deploymentmanager.deployments.update",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "deploymentmanager.manifests.get",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.manifests.list",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.operations.get",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.operations.list",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.resources.get",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.resources.list",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.typeProviders.create",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "deploymentmanager.typeProviders.delete",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "deploymentmanager.typeProviders.get",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/deploymentmanager.typeViewer",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.typeProviders.getType",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/deploymentmanager.typeViewer",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.typeProviders.list",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/deploymentmanager.typeViewer",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.typeProviders.listTypes",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/deploymentmanager.typeViewer",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.typeProviders.update",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "deploymentmanager.types.create",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "deploymentmanager.types.delete",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "deploymentmanager.types.get",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/deploymentmanager.typeViewer",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.types.list",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/deploymentmanager.typeViewer",
      "roles/deploymentmanager.viewer",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "deploymentmanager.types.update",
    "roles": [
      "roles/deploymentmanager.editor",
      "roles/deploymentmanager.typeEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.agents.create",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.agents.delete",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.agents.export",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.agents.get",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.agents.import",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.agents.restore",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.agents.search",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.agents.train",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.agents.update",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.contexts.create",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.client",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.contexts.delete",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.client",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.contexts.get",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.client",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.contexts.list",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.client",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.contexts.update",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.client",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.documents.create",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.documents.delete",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.documents.get",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.documents.list",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.entityTypes.create",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.entityTypes.createEntity",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.entityTypes.delete",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.entityTypes.deleteEntity",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.entityTypes.get",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.entityTypes.list",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.entityTypes.update",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.entityTypes.updateEntity",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.intents.create",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.intents.delete",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.intents.get",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.intents.list",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.intents.update",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.knowledgeBases.create",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.knowledgeBases.delete",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.knowledgeBases.get",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.knowledgeBases.list",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.operations.get",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.sessionEntityTypes.create",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.client",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.sessionEntityTypes.delete",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.client",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.sessionEntityTypes.get",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.client",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.sessionEntityTypes.list",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.client",
      "roles/dialogflow.consoleAgentEditor",
      "roles/dialogflow.reader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.sessionEntityTypes.update",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.client",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dialogflow.sessions.detectIntent",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.client",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dialogflow.sessions.streamingDetectIntent",
    "roles": [
      "roles/dialogflow.admin",
      "roles/dialogflow.client",
      "roles/dialogflow.consoleAgentEditor",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dlp.analyzeRiskTemplates.create",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.analyzeRiskTemplatesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.analyzeRiskTemplates.delete",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.analyzeRiskTemplatesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.analyzeRiskTemplates.get",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.analyzeRiskTemplatesEditor",
      "roles/dlp.analyzeRiskTemplatesReader",
      "roles/dlp.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dlp.analyzeRiskTemplates.list",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.analyzeRiskTemplatesEditor",
      "roles/dlp.analyzeRiskTemplatesReader",
      "roles/dlp.reader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dlp.analyzeRiskTemplates.update",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.analyzeRiskTemplatesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.deidentifyTemplates.create",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.deidentifyTemplatesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.deidentifyTemplates.delete",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.deidentifyTemplatesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.deidentifyTemplates.get",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.deidentifyTemplatesEditor",
      "roles/dlp.deidentifyTemplatesReader",
      "roles/dlp.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dlp.deidentifyTemplates.list",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.deidentifyTemplatesEditor",
      "roles/dlp.deidentifyTemplatesReader",
      "roles/dlp.reader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dlp.deidentifyTemplates.update",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.deidentifyTemplatesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.inspectTemplates.create",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.inspectTemplatesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.inspectTemplates.delete",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.inspectTemplatesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.inspectTemplates.get",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.inspectTemplatesEditor",
      "roles/dlp.inspectTemplatesReader",
      "roles/dlp.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dlp.inspectTemplates.list",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.inspectTemplatesEditor",
      "roles/dlp.inspectTemplatesReader",
      "roles/dlp.reader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dlp.inspectTemplates.update",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.inspectTemplatesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.jobTriggers.create",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.jobTriggersEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.jobTriggers.delete",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.jobTriggersEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.jobTriggers.get",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.jobTriggersEditor",
      "roles/dlp.jobTriggersReader",
      "roles/dlp.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dlp.jobTriggers.list",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.jobTriggersEditor",
      "roles/dlp.jobTriggersReader",
      "roles/dlp.reader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dlp.jobTriggers.update",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.jobTriggersEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.jobs.cancel",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.jobsEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.jobs.create",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.jobsEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.jobs.delete",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.jobsEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.jobs.get",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.jobsEditor",
      "roles/dlp.jobsReader",
      "roles/dlp.reader",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.jobs.list",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.jobsEditor",
      "roles/dlp.jobsReader",
      "roles/dlp.reader",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.kms.encrypt",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.jobsEditor",
      "roles/dlp.user",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.storedInfoTypes.create",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.storedInfoTypesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.storedInfoTypes.delete",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.storedInfoTypesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dlp.storedInfoTypes.get",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.reader",
      "roles/dlp.storedInfoTypesEditor",
      "roles/dlp.storedInfoTypesReader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dlp.storedInfoTypes.list",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.reader",
      "roles/dlp.storedInfoTypesEditor",
      "roles/dlp.storedInfoTypesReader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dlp.storedInfoTypes.update",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.storedInfoTypesEditor",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "serviceusage.services.use",
    "roles": [
      "roles/dlp.admin",
      "roles/dlp.user",
      "roles/editor",
      "roles/owner",
      "roles/redis.admin",
      "roles/redis.editor",
      "roles/redis.viewer",
      "roles/serviceusage.serviceUsageAdmin",
      "roles/serviceusage.serviceUsageConsumer"
    ]
  },
  {
    "permission": "dns.changes.create",
    "roles": [
      "roles/dns.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dns.changes.get",
    "roles": [
      "roles/dns.admin",
      "roles/dns.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dns.changes.list",
    "roles": [
      "roles/dns.admin",
      "roles/dns.reader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dns.dnsKeys.get",
    "roles": [
      "roles/dns.admin",
      "roles/dns.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dns.dnsKeys.list",
    "roles": [
      "roles/dns.admin",
      "roles/dns.reader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dns.managedZoneOperations.get",
    "roles": [
      "roles/dns.admin",
      "roles/dns.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dns.managedZoneOperations.list",
    "roles": [
      "roles/dns.admin",
      "roles/dns.reader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dns.managedZones.create",
    "roles": [
      "roles/dns.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dns.managedZones.delete",
    "roles": [
      "roles/dns.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dns.managedZones.get",
    "roles": [
      "roles/dns.admin",
      "roles/dns.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dns.managedZones.list",
    "roles": [
      "roles/dns.admin",
      "roles/dns.reader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dns.managedZones.update",
    "roles": [
      "roles/dns.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dns.networks.bindPrivateDNSPolicy",
    "roles": [
      "roles/dns.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dns.networks.bindPrivateDNSZone",
    "roles": [
      "roles/dns.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dns.networks.targetWithPeeringZone",
    "roles": [
      "roles/dns.admin",
      "roles/dns.peer",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dns.policies.create",
    "roles": [
      "roles/dns.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dns.policies.delete",
    "roles": [
      "roles/dns.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dns.policies.get",
    "roles": [
      "roles/dns.admin",
      "roles/dns.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dns.policies.list",
    "roles": [
      "roles/dns.admin",
      "roles/dns.reader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dns.policies.update",
    "roles": [
      "roles/dns.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dns.projects.get",
    "roles": [
      "roles/dns.admin",
      "roles/dns.reader",
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dns.resourceRecordSets.create",
    "roles": [
      "roles/dns.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dns.resourceRecordSets.delete",
    "roles": [
      "roles/dns.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "dns.resourceRecordSets.list",
    "roles": [
      "roles/dns.admin",
      "roles/dns.reader",
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "dns.resourceRecordSets.update",
    "roles": [
      "roles/dns.admin",
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "appengine.memcache.addKey",
    "roles": [
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "appengine.memcache.flush",
    "roles": [
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "appengine.memcache.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "appengine.memcache.getKey",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "appengine.memcache.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "appengine.memcache.update",
    "roles": [
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "billing.resourceCosts.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "clientauthconfig.brands.create",
    "roles": [
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "clientauthconfig.brands.delete",
    "roles": [
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "clientauthconfig.brands.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "clientauthconfig.brands.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "clientauthconfig.brands.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "clientauthconfig.clients.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "clientauthconfig.clients.createSecret",
    "roles": [
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "clientauthconfig.clients.delete",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "clientauthconfig.clients.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.growthAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "clientauthconfig.clients.getWithSecret",
    "roles": [
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "clientauthconfig.clients.listWithSecrets",
    "roles": [
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "clientauthconfig.clients.undelete",
    "roles": [
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "clientauthconfig.clients.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "cloudmessaging.messages.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "endpoints.portals.attachCustomDomain",
    "roles": [
      "roles/editor",
      "roles/endpoints.portalAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "endpoints.portals.detachCustomDomain",
    "roles": [
      "roles/editor",
      "roles/endpoints.portalAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "endpoints.portals.listCustomDomains",
    "roles": [
      "roles/editor",
      "roles/endpoints.portalAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "endpoints.portals.update",
    "roles": [
      "roles/editor",
      "roles/endpoints.portalAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "errorreporting.applications.list",
    "roles": [
      "roles/editor",
      "roles/errorreporting.admin",
      "roles/errorreporting.user",
      "roles/errorreporting.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "errorreporting.errorEvents.create",
    "roles": [
      "roles/editor",
      "roles/errorreporting.admin",
      "roles/errorreporting.writer",
      "roles/owner"
    ]
  },
  {
    "permission": "errorreporting.errorEvents.delete",
    "roles": [
      "roles/editor",
      "roles/errorreporting.admin",
      "roles/errorreporting.user",
      "roles/owner"
    ]
  },
  {
    "permission": "errorreporting.errorEvents.list",
    "roles": [
      "roles/editor",
      "roles/errorreporting.admin",
      "roles/errorreporting.user",
      "roles/errorreporting.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "errorreporting.groupMetadata.get",
    "roles": [
      "roles/editor",
      "roles/errorreporting.admin",
      "roles/errorreporting.user",
      "roles/errorreporting.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "errorreporting.groupMetadata.update",
    "roles": [
      "roles/editor",
      "roles/errorreporting.admin",
      "roles/errorreporting.user",
      "roles/owner"
    ]
  },
  {
    "permission": "errorreporting.groups.list",
    "roles": [
      "roles/editor",
      "roles/errorreporting.admin",
      "roles/errorreporting.user",
      "roles/errorreporting.viewer",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "file.instances.create",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "file.instances.delete",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "file.instances.get",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/file.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "file.instances.list",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/file.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "file.instances.restore",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "file.instances.update",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "file.locations.get",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/file.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "file.locations.list",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/file.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "file.operations.cancel",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "file.operations.delete",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "file.operations.get",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/file.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "file.operations.list",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/file.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "file.snapshots.create",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "file.snapshots.delete",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "file.snapshots.get",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/file.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "file.snapshots.list",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/file.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "file.snapshots.update",
    "roles": [
      "roles/editor",
      "roles/file.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "firebase.clients.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebase.clients.delete",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebase.links.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.analyticsAdmin",
      "roles/firebase.analyticsViewer",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseabt.experimentresults.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.viewer",
      "roles/firebaseabt.admin",
      "roles/firebaseabt.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseabt.experiments.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebaseabt.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseabt.experiments.delete",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebaseabt.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseabt.experiments.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.viewer",
      "roles/firebaseabt.admin",
      "roles/firebaseabt.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseabt.experiments.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.viewer",
      "roles/firebaseabt.admin",
      "roles/firebaseabt.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseabt.experiments.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebaseabt.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseabt.projectmetadata.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.viewer",
      "roles/firebaseabt.admin",
      "roles/firebaseabt.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseanalytics.resources.googleAnalyticsEdit",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.analyticsAdmin",
      "roles/firebase.developAdmin",
      "roles/firebase.growthAdmin",
      "roles/firebase.qualityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.analyticsAdmin",
      "roles/firebase.analyticsViewer",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseappdistro.groups.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/firebaseappdistro.admin",
      "roles/firebaseappdistro.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseappdistro.groups.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebaseappdistro.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseappdistro.releases.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/firebaseappdistro.admin",
      "roles/firebaseappdistro.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseappdistro.releases.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebaseappdistro.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseappdistro.testers.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/firebaseappdistro.admin",
      "roles/firebaseappdistro.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseappdistro.testers.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebaseappdistro.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseauth.configs.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaseauth.admin",
      "roles/identitytoolkit.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseauth.configs.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/firebaseauth.admin",
      "roles/firebaseauth.viewer",
      "roles/identitytoolkit.admin",
      "roles/identitytoolkit.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseauth.configs.getHashConfig",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaseauth.admin",
      "roles/identitytoolkit.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseauth.configs.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaseauth.admin",
      "roles/identitytoolkit.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseauth.users.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaseauth.admin",
      "roles/identitytoolkit.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseauth.users.createSession",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaseauth.admin",
      "roles/identitytoolkit.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseauth.users.delete",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaseauth.admin",
      "roles/identitytoolkit.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseauth.users.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/firebaseauth.admin",
      "roles/firebaseauth.viewer",
      "roles/identitytoolkit.admin",
      "roles/identitytoolkit.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseauth.users.sendEmail",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaseauth.admin",
      "roles/identitytoolkit.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseauth.users.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaseauth.admin",
      "roles/identitytoolkit.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasecrash.issues.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasecrash.reports.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasecrashlytics.config.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/firebasecrashlytics.admin",
      "roles/firebasecrashlytics.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasecrashlytics.config.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebasecrashlytics.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasecrashlytics.data.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/firebasecrashlytics.admin",
      "roles/firebasecrashlytics.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasecrashlytics.issues.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/firebasecrashlytics.admin",
      "roles/firebasecrashlytics.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasecrashlytics.issues.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/firebasecrashlytics.admin",
      "roles/firebasecrashlytics.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasecrashlytics.issues.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebasecrashlytics.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasecrashlytics.sessions.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/firebasecrashlytics.admin",
      "roles/firebasecrashlytics.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasedatabase.instances.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebasedatabase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasedatabase.instances.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/firebasedatabase.admin",
      "roles/firebasedatabase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasedynamiclinks.destinations.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.viewer",
      "roles/firebasedynamiclinks.admin",
      "roles/firebasedynamiclinks.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasedynamiclinks.domains.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebasedynamiclinks.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasedynamiclinks.domains.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.viewer",
      "roles/firebasedynamiclinks.admin",
      "roles/firebasedynamiclinks.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasedynamiclinks.domains.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.viewer",
      "roles/firebasedynamiclinks.admin",
      "roles/firebasedynamiclinks.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasedynamiclinks.domains.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebasedynamiclinks.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasedynamiclinks.links.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebasedynamiclinks.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasedynamiclinks.links.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.viewer",
      "roles/firebasedynamiclinks.admin",
      "roles/firebasedynamiclinks.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasedynamiclinks.links.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.viewer",
      "roles/firebasedynamiclinks.admin",
      "roles/firebasedynamiclinks.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasedynamiclinks.links.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebasedynamiclinks.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasedynamiclinks.stats.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.viewer",
      "roles/firebasedynamiclinks.admin",
      "roles/firebasedynamiclinks.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseextensions.configs.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.analyticsAdmin",
      "roles/firebase.analyticsViewer",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasehosting.sites.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebasehosting.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasehosting.sites.delete",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebasehosting.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasehosting.sites.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/firebasehosting.admin",
      "roles/firebasehosting.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasehosting.sites.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/firebasehosting.admin",
      "roles/firebasehosting.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasehosting.sites.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebasehosting.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseinappmessaging.campaigns.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebaseinappmessaging.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseinappmessaging.campaigns.delete",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebaseinappmessaging.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseinappmessaging.campaigns.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.viewer",
      "roles/firebaseinappmessaging.admin",
      "roles/firebaseinappmessaging.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseinappmessaging.campaigns.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.viewer",
      "roles/firebaseinappmessaging.admin",
      "roles/firebaseinappmessaging.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseinappmessaging.campaigns.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebaseinappmessaging.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseml.compressionjobs.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaseml.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseml.compressionjobs.delete",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaseml.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseml.compressionjobs.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/firebaseml.admin",
      "roles/firebaseml.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseml.compressionjobs.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/firebaseml.admin",
      "roles/firebaseml.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseml.compressionjobs.start",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaseml.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseml.compressionjobs.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaseml.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseml.models.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaseml.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseml.models.delete",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaseml.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseml.models.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/firebaseml.admin",
      "roles/firebaseml.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseml.models.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/firebaseml.admin",
      "roles/firebaseml.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseml.modelversions.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaseml.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseml.modelversions.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/firebaseml.admin",
      "roles/firebaseml.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseml.modelversions.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/firebaseml.admin",
      "roles/firebaseml.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaseml.modelversions.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaseml.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasenotifications.messages.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebasenotifications.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasenotifications.messages.delete",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebasenotifications.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasenotifications.messages.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.viewer",
      "roles/firebasenotifications.admin",
      "roles/firebasenotifications.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasenotifications.messages.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.viewer",
      "roles/firebasenotifications.admin",
      "roles/firebasenotifications.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasenotifications.messages.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebasenotifications.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseperformance.config.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebaseperformance.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseperformance.config.delete",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebaseperformance.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseperformance.config.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebaseperformance.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseperformance.data.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/firebaseperformance.admin",
      "roles/firebaseperformance.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasepredictions.predictions.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebasepredictions.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasepredictions.predictions.delete",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebasepredictions.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasepredictions.predictions.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.viewer",
      "roles/firebasepredictions.admin",
      "roles/firebasepredictions.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebasepredictions.predictions.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebasepredictions.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaserules.releases.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaserules.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaserules.releases.delete",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaserules.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaserules.releases.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/firebaserules.admin",
      "roles/firebaserules.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaserules.releases.getExecutable",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaserules.admin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaserules.releases.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/firebaserules.admin",
      "roles/firebaserules.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaserules.releases.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaserules.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaserules.rulesets.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaserules.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaserules.rulesets.delete",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaserules.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaserules.rulesets.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/firebaserules.admin",
      "roles/firebaserules.viewer",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaserules.rulesets.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.viewer",
      "roles/firebaserules.admin",
      "roles/firebaserules.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "firebaserules.rulesets.test",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebaserules.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "genomics.datasets.create",
    "roles": [
      "roles/editor",
      "roles/genomics.admin",
      "roles/genomics.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "genomics.datasets.delete",
    "roles": [
      "roles/editor",
      "roles/genomics.admin",
      "roles/genomics.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "genomics.datasets.get",
    "roles": [
      "roles/editor",
      "roles/genomics.admin",
      "roles/genomics.editor",
      "roles/genomics.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "genomics.datasets.list",
    "roles": [
      "roles/editor",
      "roles/genomics.admin",
      "roles/genomics.editor",
      "roles/genomics.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "genomics.datasets.update",
    "roles": [
      "roles/editor",
      "roles/genomics.admin",
      "roles/genomics.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "genomics.operations.cancel",
    "roles": [
      "roles/editor",
      "roles/genomics.admin",
      "roles/genomics.editor",
      "roles/genomics.pipelinesRunner",
      "roles/owner"
    ]
  },
  {
    "permission": "genomics.operations.create",
    "roles": [
      "roles/editor",
      "roles/genomics.admin",
      "roles/genomics.editor",
      "roles/genomics.pipelinesRunner",
      "roles/owner"
    ]
  },
  {
    "permission": "genomics.operations.get",
    "roles": [
      "roles/editor",
      "roles/genomics.admin",
      "roles/genomics.editor",
      "roles/genomics.pipelinesRunner",
      "roles/genomics.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "genomics.operations.list",
    "roles": [
      "roles/editor",
      "roles/genomics.admin",
      "roles/genomics.editor",
      "roles/genomics.pipelinesRunner",
      "roles/genomics.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "gkehub.locations.get",
    "roles": [
      "roles/editor",
      "roles/gkehub.admin",
      "roles/gkehub.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "gkehub.locations.list",
    "roles": [
      "roles/editor",
      "roles/gkehub.admin",
      "roles/gkehub.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "gkehub.memberships.create",
    "roles": [
      "roles/editor",
      "roles/gkehub.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "gkehub.memberships.delete",
    "roles": [
      "roles/editor",
      "roles/gkehub.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "gkehub.memberships.generateConnectManifest",
    "roles": [
      "roles/editor",
      "roles/gkehub.admin",
      "roles/gkehub.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "gkehub.memberships.get",
    "roles": [
      "roles/editor",
      "roles/gkehub.admin",
      "roles/gkehub.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "gkehub.memberships.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/gkehub.admin",
      "roles/gkehub.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "gkehub.memberships.list",
    "roles": [
      "roles/editor",
      "roles/gkehub.admin",
      "roles/gkehub.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "gkehub.memberships.update",
    "roles": [
      "roles/editor",
      "roles/gkehub.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "gkehub.operations.cancel",
    "roles": [
      "roles/editor",
      "roles/gkehub.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "gkehub.operations.get",
    "roles": [
      "roles/editor",
      "roles/gkehub.admin",
      "roles/gkehub.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "gkehub.operations.list",
    "roles": [
      "roles/editor",
      "roles/gkehub.admin",
      "roles/gkehub.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.datasets.create",
    "roles": [
      "roles/editor",
      "roles/healthcare.datasetAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.datasets.deidentify",
    "roles": [
      "roles/editor",
      "roles/healthcare.datasetAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.datasets.delete",
    "roles": [
      "roles/editor",
      "roles/healthcare.datasetAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.datasets.get",
    "roles": [
      "roles/editor",
      "roles/healthcare.annotationEditor",
      "roles/healthcare.annotationReader",
      "roles/healthcare.annotationStoreAdmin",
      "roles/healthcare.annotationStoreViewer",
      "roles/healthcare.datasetAdmin",
      "roles/healthcare.datasetViewer",
      "roles/healthcare.dicomEditor",
      "roles/healthcare.dicomStoreAdmin",
      "roles/healthcare.dicomStoreViewer",
      "roles/healthcare.dicomViewer",
      "roles/healthcare.fhirResourceEditor",
      "roles/healthcare.fhirResourceReader",
      "roles/healthcare.fhirStoreAdmin",
      "roles/healthcare.fhirStoreViewer",
      "roles/healthcare.hl7V2Consumer",
      "roles/healthcare.hl7V2Editor",
      "roles/healthcare.hl7V2Ingest",
      "roles/healthcare.hl7V2StoreAdmin",
      "roles/healthcare.hl7V2StoreViewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.datasets.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/healthcare.datasetAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.datasets.list",
    "roles": [
      "roles/editor",
      "roles/healthcare.annotationEditor",
      "roles/healthcare.annotationReader",
      "roles/healthcare.annotationStoreAdmin",
      "roles/healthcare.annotationStoreViewer",
      "roles/healthcare.datasetAdmin",
      "roles/healthcare.datasetViewer",
      "roles/healthcare.dicomEditor",
      "roles/healthcare.dicomStoreAdmin",
      "roles/healthcare.dicomStoreViewer",
      "roles/healthcare.dicomViewer",
      "roles/healthcare.fhirResourceEditor",
      "roles/healthcare.fhirResourceReader",
      "roles/healthcare.fhirStoreAdmin",
      "roles/healthcare.fhirStoreViewer",
      "roles/healthcare.hl7V2Consumer",
      "roles/healthcare.hl7V2Editor",
      "roles/healthcare.hl7V2Ingest",
      "roles/healthcare.hl7V2StoreAdmin",
      "roles/healthcare.hl7V2StoreViewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.datasets.update",
    "roles": [
      "roles/editor",
      "roles/healthcare.datasetAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.dicomStores.create",
    "roles": [
      "roles/editor",
      "roles/healthcare.dicomStoreAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.dicomStores.delete",
    "roles": [
      "roles/editor",
      "roles/healthcare.dicomStoreAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.dicomStores.dicomWebDelete",
    "roles": [
      "roles/editor",
      "roles/healthcare.dicomEditor",
      "roles/healthcare.dicomStoreAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.dicomStores.dicomWebRead",
    "roles": [
      "roles/editor",
      "roles/healthcare.dicomEditor",
      "roles/healthcare.dicomViewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.dicomStores.dicomWebWrite",
    "roles": [
      "roles/editor",
      "roles/healthcare.dicomEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.dicomStores.export",
    "roles": [
      "roles/editor",
      "roles/healthcare.dicomEditor",
      "roles/healthcare.dicomViewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.dicomStores.get",
    "roles": [
      "roles/editor",
      "roles/healthcare.dicomEditor",
      "roles/healthcare.dicomStoreAdmin",
      "roles/healthcare.dicomStoreViewer",
      "roles/healthcare.dicomViewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.dicomStores.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/healthcare.dicomStoreAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.dicomStores.import",
    "roles": [
      "roles/editor",
      "roles/healthcare.dicomEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.dicomStores.list",
    "roles": [
      "roles/editor",
      "roles/healthcare.dicomEditor",
      "roles/healthcare.dicomStoreAdmin",
      "roles/healthcare.dicomStoreViewer",
      "roles/healthcare.dicomViewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.dicomStores.update",
    "roles": [
      "roles/editor",
      "roles/healthcare.dicomStoreAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.fhirResources.create",
    "roles": [
      "roles/editor",
      "roles/healthcare.fhirResourceEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.fhirResources.delete",
    "roles": [
      "roles/editor",
      "roles/healthcare.fhirResourceEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.fhirResources.get",
    "roles": [
      "roles/editor",
      "roles/healthcare.fhirResourceEditor",
      "roles/healthcare.fhirResourceReader",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.fhirResources.patch",
    "roles": [
      "roles/editor",
      "roles/healthcare.fhirResourceEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.fhirResources.purge",
    "roles": [
      "roles/editor",
      "roles/healthcare.fhirStoreAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.fhirResources.update",
    "roles": [
      "roles/editor",
      "roles/healthcare.fhirResourceEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.fhirStores.create",
    "roles": [
      "roles/editor",
      "roles/healthcare.fhirStoreAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.fhirStores.delete",
    "roles": [
      "roles/editor",
      "roles/healthcare.fhirStoreAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.fhirStores.export",
    "roles": [
      "roles/editor",
      "roles/healthcare.fhirStoreAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.fhirStores.get",
    "roles": [
      "roles/editor",
      "roles/healthcare.fhirResourceEditor",
      "roles/healthcare.fhirResourceReader",
      "roles/healthcare.fhirStoreAdmin",
      "roles/healthcare.fhirStoreViewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.fhirStores.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/healthcare.fhirStoreAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.fhirStores.import",
    "roles": [
      "roles/editor",
      "roles/healthcare.fhirStoreAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.fhirStores.list",
    "roles": [
      "roles/editor",
      "roles/healthcare.fhirResourceEditor",
      "roles/healthcare.fhirResourceReader",
      "roles/healthcare.fhirStoreAdmin",
      "roles/healthcare.fhirStoreViewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.fhirStores.searchResources",
    "roles": [
      "roles/editor",
      "roles/healthcare.fhirResourceEditor",
      "roles/healthcare.fhirResourceReader",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.fhirStores.update",
    "roles": [
      "roles/editor",
      "roles/healthcare.fhirStoreAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.hl7V2Messages.create",
    "roles": [
      "roles/editor",
      "roles/healthcare.hl7V2Consumer",
      "roles/healthcare.hl7V2Editor",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.hl7V2Messages.delete",
    "roles": [
      "roles/editor",
      "roles/healthcare.hl7V2Editor",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.hl7V2Messages.get",
    "roles": [
      "roles/editor",
      "roles/healthcare.hl7V2Consumer",
      "roles/healthcare.hl7V2Editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.hl7V2Messages.ingest",
    "roles": [
      "roles/editor",
      "roles/healthcare.hl7V2Editor",
      "roles/healthcare.hl7V2Ingest",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.hl7V2Messages.list",
    "roles": [
      "roles/editor",
      "roles/healthcare.hl7V2Consumer",
      "roles/healthcare.hl7V2Editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.hl7V2Messages.update",
    "roles": [
      "roles/editor",
      "roles/healthcare.hl7V2Consumer",
      "roles/healthcare.hl7V2Editor",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.hl7V2Stores.create",
    "roles": [
      "roles/editor",
      "roles/healthcare.hl7V2StoreAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.hl7V2Stores.delete",
    "roles": [
      "roles/editor",
      "roles/healthcare.hl7V2StoreAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.hl7V2Stores.get",
    "roles": [
      "roles/editor",
      "roles/healthcare.hl7V2Consumer",
      "roles/healthcare.hl7V2Editor",
      "roles/healthcare.hl7V2Ingest",
      "roles/healthcare.hl7V2StoreAdmin",
      "roles/healthcare.hl7V2StoreViewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.hl7V2Stores.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/healthcare.hl7V2StoreAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.hl7V2Stores.list",
    "roles": [
      "roles/editor",
      "roles/healthcare.hl7V2Consumer",
      "roles/healthcare.hl7V2Editor",
      "roles/healthcare.hl7V2Ingest",
      "roles/healthcare.hl7V2StoreAdmin",
      "roles/healthcare.hl7V2StoreViewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.hl7V2Stores.update",
    "roles": [
      "roles/editor",
      "roles/healthcare.hl7V2StoreAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.operations.cancel",
    "roles": [
      "roles/editor",
      "roles/healthcare.datasetAdmin",
      "roles/healthcare.dicomEditor",
      "roles/healthcare.dicomStoreAdmin",
      "roles/healthcare.fhirResourceEditor",
      "roles/healthcare.fhirStoreAdmin",
      "roles/healthcare.hl7V2Editor",
      "roles/healthcare.hl7V2StoreAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.operations.get",
    "roles": [
      "roles/editor",
      "roles/healthcare.annotationEditor",
      "roles/healthcare.annotationReader",
      "roles/healthcare.annotationStoreAdmin",
      "roles/healthcare.annotationStoreViewer",
      "roles/healthcare.datasetAdmin",
      "roles/healthcare.datasetViewer",
      "roles/healthcare.dicomEditor",
      "roles/healthcare.dicomStoreAdmin",
      "roles/healthcare.dicomStoreViewer",
      "roles/healthcare.dicomViewer",
      "roles/healthcare.fhirResourceEditor",
      "roles/healthcare.fhirResourceReader",
      "roles/healthcare.fhirStoreAdmin",
      "roles/healthcare.fhirStoreViewer",
      "roles/healthcare.hl7V2Consumer",
      "roles/healthcare.hl7V2Editor",
      "roles/healthcare.hl7V2Ingest",
      "roles/healthcare.hl7V2StoreAdmin",
      "roles/healthcare.hl7V2StoreViewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "healthcare.operations.list",
    "roles": [
      "roles/editor",
      "roles/healthcare.datasetAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "iam.roles.get",
    "roles": [
      "roles/editor",
      "roles/iam.organizationRoleAdmin",
      "roles/iam.organizationRoleViewer",
      "roles/iam.roleAdmin",
      "roles/iam.roleViewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "iam.roles.list",
    "roles": [
      "roles/editor",
      "roles/iam.organizationRoleAdmin",
      "roles/iam.organizationRoleViewer",
      "roles/iam.roleAdmin",
      "roles/iam.roleViewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "iam.serviceAccountKeys.create",
    "roles": [
      "roles/editor",
      "roles/iam.serviceAccountKeyAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "iam.serviceAccountKeys.delete",
    "roles": [
      "roles/editor",
      "roles/iam.serviceAccountKeyAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "iam.serviceAccountKeys.get",
    "roles": [
      "roles/editor",
      "roles/iam.serviceAccountKeyAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "iam.serviceAccountKeys.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/iam.serviceAccountKeyAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "iam.serviceAccounts.create",
    "roles": [
      "roles/editor",
      "roles/iam.serviceAccountAdmin",
      "roles/iam.serviceAccountCreator",
      "roles/owner"
    ]
  },
  {
    "permission": "iam.serviceAccounts.delete",
    "roles": [
      "roles/editor",
      "roles/iam.serviceAccountAdmin",
      "roles/iam.serviceAccountDeleter",
      "roles/owner"
    ]
  },
  {
    "permission": "iam.serviceAccounts.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/iam.serviceAccountAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "iam.serviceAccounts.update",
    "roles": [
      "roles/editor",
      "roles/iam.serviceAccountAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.projects.getSettings",
    "roles": [
      "roles/editor",
      "roles/iap.settingsAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "iap.projects.updateSettings",
    "roles": [
      "roles/editor",
      "roles/iap.settingsAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.web.getSettings",
    "roles": [
      "roles/editor",
      "roles/iap.settingsAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "iap.web.updateSettings",
    "roles": [
      "roles/editor",
      "roles/iap.settingsAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.webServiceVersions.getSettings",
    "roles": [
      "roles/editor",
      "roles/iap.settingsAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "iap.webServiceVersions.updateSettings",
    "roles": [
      "roles/editor",
      "roles/iap.settingsAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.webServices.getSettings",
    "roles": [
      "roles/editor",
      "roles/iap.settingsAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "iap.webServices.updateSettings",
    "roles": [
      "roles/editor",
      "roles/iap.settingsAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.webTypes.getSettings",
    "roles": [
      "roles/editor",
      "roles/iap.settingsAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "iap.webTypes.updateSettings",
    "roles": [
      "roles/editor",
      "roles/iap.settingsAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "lifesciences.operations.cancel",
    "roles": [
      "roles/editor",
      "roles/lifesciences.admin",
      "roles/lifesciences.editor",
      "roles/lifesciences.workflowsRunner",
      "roles/owner"
    ]
  },
  {
    "permission": "lifesciences.operations.get",
    "roles": [
      "roles/editor",
      "roles/lifesciences.admin",
      "roles/lifesciences.editor",
      "roles/lifesciences.viewer",
      "roles/lifesciences.workflowsRunner",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "lifesciences.operations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/lifesciences.admin",
      "roles/lifesciences.editor",
      "roles/lifesciences.viewer",
      "roles/lifesciences.workflowsRunner",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "lifesciences.workflows.run",
    "roles": [
      "roles/editor",
      "roles/lifesciences.admin",
      "roles/lifesciences.editor",
      "roles/lifesciences.workflowsRunner",
      "roles/owner"
    ]
  },
  {
    "permission": "logging.exclusions.get",
    "roles": [
      "roles/editor",
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/logging.privateLogViewer",
      "roles/logging.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "logging.exclusions.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/logging.privateLogViewer",
      "roles/logging.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "logging.logMetrics.create",
    "roles": [
      "roles/editor",
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/owner"
    ]
  },
  {
    "permission": "logging.logMetrics.delete",
    "roles": [
      "roles/editor",
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/owner"
    ]
  },
  {
    "permission": "logging.logMetrics.get",
    "roles": [
      "roles/editor",
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/logging.privateLogViewer",
      "roles/logging.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "logging.logMetrics.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/logging.privateLogViewer",
      "roles/logging.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "logging.logMetrics.update",
    "roles": [
      "roles/editor",
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/owner"
    ]
  },
  {
    "permission": "logging.logs.delete",
    "roles": [
      "roles/editor",
      "roles/logging.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "logging.sinks.get",
    "roles": [
      "roles/editor",
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/logging.privateLogViewer",
      "roles/logging.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "logging.sinks.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/logging.privateLogViewer",
      "roles/logging.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "logging.usage.get",
    "roles": [
      "roles/editor",
      "roles/logging.admin",
      "roles/logging.privateLogViewer",
      "roles/logging.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "managedidentities.domains.attachTrust",
    "roles": [
      "roles/editor",
      "roles/managedidentities.admin",
      "roles/managedidentities.domainAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "managedidentities.domains.create",
    "roles": [
      "roles/editor",
      "roles/managedidentities.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "managedidentities.domains.delete",
    "roles": [
      "roles/editor",
      "roles/managedidentities.admin",
      "roles/managedidentities.domainAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "managedidentities.domains.detachTrust",
    "roles": [
      "roles/editor",
      "roles/managedidentities.admin",
      "roles/managedidentities.domainAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "managedidentities.domains.get",
    "roles": [
      "roles/editor",
      "roles/managedidentities.admin",
      "roles/managedidentities.domainAdmin",
      "roles/managedidentities.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "managedidentities.domains.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/managedidentities.admin",
      "roles/managedidentities.domainAdmin",
      "roles/managedidentities.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "managedidentities.domains.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/managedidentities.admin",
      "roles/managedidentities.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "managedidentities.domains.reconfigureTrust",
    "roles": [
      "roles/editor",
      "roles/managedidentities.admin",
      "roles/managedidentities.domainAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "managedidentities.domains.resetpassword",
    "roles": [
      "roles/editor",
      "roles/managedidentities.admin",
      "roles/managedidentities.domainAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "managedidentities.domains.update",
    "roles": [
      "roles/editor",
      "roles/managedidentities.admin",
      "roles/managedidentities.domainAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "managedidentities.domains.validateTrust",
    "roles": [
      "roles/editor",
      "roles/managedidentities.admin",
      "roles/managedidentities.domainAdmin",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "managedidentities.locations.get",
    "roles": [
      "roles/editor",
      "roles/managedidentities.admin",
      "roles/managedidentities.domainAdmin",
      "roles/managedidentities.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "managedidentities.locations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/managedidentities.admin",
      "roles/managedidentities.domainAdmin",
      "roles/managedidentities.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "managedidentities.operations.cancel",
    "roles": [
      "roles/editor",
      "roles/managedidentities.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "managedidentities.operations.delete",
    "roles": [
      "roles/editor",
      "roles/managedidentities.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "managedidentities.operations.get",
    "roles": [
      "roles/editor",
      "roles/managedidentities.admin",
      "roles/managedidentities.domainAdmin",
      "roles/managedidentities.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "managedidentities.operations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/managedidentities.admin",
      "roles/managedidentities.domainAdmin",
      "roles/managedidentities.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "ml.jobs.cancel",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.jobOwner",
      "roles/owner"
    ]
  },
  {
    "permission": "ml.jobs.create",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.jobOwner",
      "roles/owner"
    ]
  },
  {
    "permission": "ml.jobs.get",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.jobOwner",
      "roles/ml.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "ml.jobs.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.jobOwner",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "ml.jobs.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.jobOwner",
      "roles/ml.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "ml.jobs.update",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.jobOwner",
      "roles/owner"
    ]
  },
  {
    "permission": "ml.locations.get",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "ml.locations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "ml.models.create",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.modelOwner",
      "roles/owner"
    ]
  },
  {
    "permission": "ml.models.delete",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.modelOwner",
      "roles/owner"
    ]
  },
  {
    "permission": "ml.models.get",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.modelOwner",
      "roles/ml.modelUser",
      "roles/ml.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "ml.models.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.modelOwner",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "ml.models.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.modelOwner",
      "roles/ml.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "ml.models.predict",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.modelOwner",
      "roles/ml.modelUser",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "ml.models.update",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.modelOwner",
      "roles/owner"
    ]
  },
  {
    "permission": "ml.operations.cancel",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.operationOwner",
      "roles/owner"
    ]
  },
  {
    "permission": "ml.operations.get",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.operationOwner",
      "roles/ml.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "ml.operations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.operationOwner",
      "roles/ml.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "ml.projects.getConfig",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "ml.versions.create",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.modelOwner",
      "roles/owner"
    ]
  },
  {
    "permission": "ml.versions.delete",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.modelOwner",
      "roles/owner"
    ]
  },
  {
    "permission": "ml.versions.get",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.modelOwner",
      "roles/ml.modelUser",
      "roles/ml.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "ml.versions.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.modelOwner",
      "roles/ml.modelUser",
      "roles/ml.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "ml.versions.predict",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.developer",
      "roles/ml.modelOwner",
      "roles/ml.modelUser",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "ml.versions.update",
    "roles": [
      "roles/editor",
      "roles/ml.admin",
      "roles/ml.modelOwner",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.alertPolicies.create",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.alertPolicyEditor",
      "roles/monitoring.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.alertPolicies.delete",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.alertPolicyEditor",
      "roles/monitoring.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.alertPolicies.get",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.alertPolicyEditor",
      "roles/monitoring.alertPolicyViewer",
      "roles/monitoring.editor",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.alertPolicies.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/monitoring.admin",
      "roles/monitoring.alertPolicyEditor",
      "roles/monitoring.alertPolicyViewer",
      "roles/monitoring.editor",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.alertPolicies.update",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.alertPolicyEditor",
      "roles/monitoring.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.dashboards.create",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.dashboards.delete",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.dashboards.get",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.dashboards.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.dashboards.update",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.groups.create",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.groups.delete",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.groups.get",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.groups.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.groups.update",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.metricDescriptors.delete",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.notificationChannelDescriptors.get",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.notificationChannelEditor",
      "roles/monitoring.notificationChannelViewer",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.notificationChannelDescriptors.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.notificationChannelEditor",
      "roles/monitoring.notificationChannelViewer",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.notificationChannels.create",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.notificationChannelEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.notificationChannels.delete",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.notificationChannelEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.notificationChannels.get",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.notificationChannelEditor",
      "roles/monitoring.notificationChannelViewer",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.notificationChannels.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.notificationChannelEditor",
      "roles/monitoring.notificationChannelViewer",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.notificationChannels.sendVerificationCode",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.notificationChannelEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.notificationChannels.update",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.notificationChannelEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.notificationChannels.verify",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.notificationChannelEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.publicWidgets.create",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.publicWidgets.delete",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.publicWidgets.get",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.publicWidgets.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.publicWidgets.update",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.uptimeCheckConfigs.create",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.uptimeCheckConfigEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.uptimeCheckConfigs.delete",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.uptimeCheckConfigEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.uptimeCheckConfigs.get",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.uptimeCheckConfigEditor",
      "roles/monitoring.uptimeCheckConfigViewer",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.uptimeCheckConfigs.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.uptimeCheckConfigEditor",
      "roles/monitoring.uptimeCheckConfigViewer",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "monitoring.uptimeCheckConfigs.update",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.uptimeCheckConfigEditor",
      "roles/owner"
    ]
  },
  {
    "permission": "netappcloudvolumes.activeDirectories.create",
    "roles": [
      "roles/editor",
      "roles/netappcloudvolumes.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "netappcloudvolumes.activeDirectories.delete",
    "roles": [
      "roles/editor",
      "roles/netappcloudvolumes.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "netappcloudvolumes.activeDirectories.get",
    "roles": [
      "roles/editor",
      "roles/netappcloudvolumes.admin",
      "roles/netappcloudvolumes.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "netappcloudvolumes.activeDirectories.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/netappcloudvolumes.admin",
      "roles/netappcloudvolumes.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "netappcloudvolumes.activeDirectories.update",
    "roles": [
      "roles/editor",
      "roles/netappcloudvolumes.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "netappcloudvolumes.ipRanges.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/netappcloudvolumes.admin",
      "roles/netappcloudvolumes.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "netappcloudvolumes.jobs.get",
    "roles": [
      "roles/editor",
      "roles/netappcloudvolumes.admin",
      "roles/netappcloudvolumes.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "netappcloudvolumes.jobs.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/netappcloudvolumes.admin",
      "roles/netappcloudvolumes.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "netappcloudvolumes.regions.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/netappcloudvolumes.admin",
      "roles/netappcloudvolumes.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "netappcloudvolumes.serviceLevels.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/netappcloudvolumes.admin",
      "roles/netappcloudvolumes.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "netappcloudvolumes.snapshots.create",
    "roles": [
      "roles/editor",
      "roles/netappcloudvolumes.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "netappcloudvolumes.snapshots.delete",
    "roles": [
      "roles/editor",
      "roles/netappcloudvolumes.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "netappcloudvolumes.snapshots.get",
    "roles": [
      "roles/editor",
      "roles/netappcloudvolumes.admin",
      "roles/netappcloudvolumes.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "netappcloudvolumes.snapshots.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/netappcloudvolumes.admin",
      "roles/netappcloudvolumes.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "netappcloudvolumes.snapshots.update",
    "roles": [
      "roles/editor",
      "roles/netappcloudvolumes.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "netappcloudvolumes.volumes.create",
    "roles": [
      "roles/editor",
      "roles/netappcloudvolumes.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "netappcloudvolumes.volumes.delete",
    "roles": [
      "roles/editor",
      "roles/netappcloudvolumes.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "netappcloudvolumes.volumes.get",
    "roles": [
      "roles/editor",
      "roles/netappcloudvolumes.admin",
      "roles/netappcloudvolumes.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "netappcloudvolumes.volumes.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/netappcloudvolumes.admin",
      "roles/netappcloudvolumes.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "netappcloudvolumes.volumes.update",
    "roles": [
      "roles/editor",
      "roles/netappcloudvolumes.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "notebooks.environments.create",
    "roles": [
      "roles/editor",
      "roles/notebooks.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "notebooks.environments.delete",
    "roles": [
      "roles/editor",
      "roles/notebooks.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "notebooks.environments.get",
    "roles": [
      "roles/editor",
      "roles/notebooks.admin",
      "roles/notebooks.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "notebooks.environments.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/notebooks.admin",
      "roles/notebooks.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "notebooks.environments.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/notebooks.admin",
      "roles/notebooks.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "notebooks.instances.create",
    "roles": [
      "roles/editor",
      "roles/notebooks.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "notebooks.instances.delete",
    "roles": [
      "roles/editor",
      "roles/notebooks.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "notebooks.instances.get",
    "roles": [
      "roles/editor",
      "roles/notebooks.admin",
      "roles/notebooks.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "notebooks.instances.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/notebooks.admin",
      "roles/notebooks.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "notebooks.instances.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/notebooks.admin",
      "roles/notebooks.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "notebooks.instances.update",
    "roles": [
      "roles/editor",
      "roles/notebooks.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "notebooks.locations.get",
    "roles": [
      "roles/editor",
      "roles/notebooks.admin",
      "roles/notebooks.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "notebooks.locations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/notebooks.admin",
      "roles/notebooks.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "notebooks.operations.cancel",
    "roles": [
      "roles/editor",
      "roles/notebooks.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "notebooks.operations.delete",
    "roles": [
      "roles/editor",
      "roles/notebooks.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "notebooks.operations.get",
    "roles": [
      "roles/editor",
      "roles/notebooks.admin",
      "roles/notebooks.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "notebooks.operations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/notebooks.admin",
      "roles/notebooks.viewer",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "orgpolicy.policy.get",
    "roles": [
      "roles/editor",
      "roles/orgpolicy.policyAdmin",
      "roles/orgpolicy.policyViewer",
      "roles/owner",
      "roles/resourcemanager.folderAdmin",
      "roles/resourcemanager.folderCreator",
      "roles/resourcemanager.folderEditor",
      "roles/resourcemanager.folderViewer",
      "roles/resourcemanager.organizationAdmin",
      "roles/viewer"
    ]
  },
  {
    "permission": "proximitybeacon.attachments.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/proximitybeacon.attachmentEditor"
    ]
  },
  {
    "permission": "proximitybeacon.attachments.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/proximitybeacon.attachmentEditor"
    ]
  },
  {
    "permission": "proximitybeacon.attachments.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/proximitybeacon.attachmentEditor",
      "roles/proximitybeacon.attachmentViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "proximitybeacon.attachments.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/proximitybeacon.attachmentEditor",
      "roles/proximitybeacon.attachmentViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "proximitybeacon.beacons.attach",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/proximitybeacon.attachmentPublisher"
    ]
  },
  {
    "permission": "proximitybeacon.beacons.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/proximitybeacon.beaconEditor"
    ]
  },
  {
    "permission": "proximitybeacon.beacons.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/proximitybeacon.attachmentEditor",
      "roles/proximitybeacon.attachmentPublisher",
      "roles/proximitybeacon.beaconEditor",
      "roles/viewer"
    ]
  },
  {
    "permission": "proximitybeacon.beacons.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/proximitybeacon.attachmentEditor",
      "roles/proximitybeacon.attachmentPublisher",
      "roles/proximitybeacon.beaconEditor",
      "roles/viewer"
    ]
  },
  {
    "permission": "proximitybeacon.beacons.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/proximitybeacon.beaconEditor"
    ]
  },
  {
    "permission": "proximitybeacon.namespaces.create",
    "roles": [
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "proximitybeacon.namespaces.delete",
    "roles": [
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "proximitybeacon.namespaces.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/viewer"
    ]
  },
  {
    "permission": "proximitybeacon.namespaces.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/proximitybeacon.attachmentEditor",
      "roles/viewer"
    ]
  },
  {
    "permission": "proximitybeacon.namespaces.update",
    "roles": [
      "roles/editor",
      "roles/owner"
    ]
  },
  {
    "permission": "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/recommender.computeAdmin",
      "roles/recommender.computeViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/recommender.computeAdmin",
      "roles/recommender.computeViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "recommender.computeInstanceGroupManagerMachineTypeRecommendations.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/recommender.computeAdmin"
    ]
  },
  {
    "permission": "recommender.computeInstanceMachineTypeRecommendations.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/recommender.computeAdmin",
      "roles/recommender.computeViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "recommender.computeInstanceMachineTypeRecommendations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/recommender.computeAdmin",
      "roles/recommender.computeViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "recommender.computeInstanceMachineTypeRecommendations.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/recommender.computeAdmin"
    ]
  },
  {
    "permission": "recommender.iamPolicyRecommendations.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/recommender.iamAdmin",
      "roles/recommender.iamViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "recommender.iamPolicyRecommendations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/recommender.iamAdmin",
      "roles/recommender.iamViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "recommender.iamPolicyRecommendations.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/recommender.iamAdmin"
    ]
  },
  {
    "permission": "recommender.locations.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/recommender.computeAdmin",
      "roles/recommender.computeViewer",
      "roles/recommender.iamAdmin",
      "roles/recommender.iamViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "recommender.locations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/recommender.computeAdmin",
      "roles/recommender.computeViewer",
      "roles/recommender.iamAdmin",
      "roles/recommender.iamViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "redis.instances.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redis.admin"
    ]
  },
  {
    "permission": "redis.instances.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redis.admin"
    ]
  },
  {
    "permission": "redis.instances.export",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redis.admin"
    ]
  },
  {
    "permission": "redis.instances.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redis.admin",
      "roles/redis.editor",
      "roles/redis.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "redis.instances.import",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redis.admin"
    ]
  },
  {
    "permission": "redis.instances.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/redis.admin",
      "roles/redis.editor",
      "roles/redis.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "redis.instances.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redis.admin",
      "roles/redis.editor"
    ]
  },
  {
    "permission": "redis.locations.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redis.admin",
      "roles/redis.editor",
      "roles/redis.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "redis.locations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/redis.admin",
      "roles/redis.editor",
      "roles/redis.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "redis.operations.cancel",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redis.admin",
      "roles/redis.editor"
    ]
  },
  {
    "permission": "redis.operations.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redis.admin",
      "roles/redis.editor"
    ]
  },
  {
    "permission": "redis.operations.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redis.admin",
      "roles/redis.editor",
      "roles/redis.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "redis.operations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/redis.admin",
      "roles/redis.editor",
      "roles/redis.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "redisenterprisecloud.databases.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redisenterprisecloud.admin"
    ]
  },
  {
    "permission": "redisenterprisecloud.databases.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redisenterprisecloud.admin"
    ]
  },
  {
    "permission": "redisenterprisecloud.databases.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redisenterprisecloud.admin",
      "roles/redisenterprisecloud.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "redisenterprisecloud.databases.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/redisenterprisecloud.admin",
      "roles/redisenterprisecloud.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "redisenterprisecloud.databases.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redisenterprisecloud.admin"
    ]
  },
  {
    "permission": "redisenterprisecloud.subscriptions.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redisenterprisecloud.admin"
    ]
  },
  {
    "permission": "redisenterprisecloud.subscriptions.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redisenterprisecloud.admin"
    ]
  },
  {
    "permission": "redisenterprisecloud.subscriptions.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redisenterprisecloud.admin",
      "roles/redisenterprisecloud.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "redisenterprisecloud.subscriptions.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/redisenterprisecloud.admin",
      "roles/redisenterprisecloud.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "redisenterprisecloud.subscriptions.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/redisenterprisecloud.admin"
    ]
  },
  {
    "permission": "remotebuildexecution.actions.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/remotebuildexecution.artifactAdmin",
      "roles/remotebuildexecution.artifactCreator"
    ]
  },
  {
    "permission": "remotebuildexecution.actions.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/remotebuildexecution.artifactAdmin"
    ]
  },
  {
    "permission": "remotebuildexecution.actions.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/remotebuildexecution.artifactAdmin",
      "roles/remotebuildexecution.artifactCreator",
      "roles/remotebuildexecution.artifactViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "remotebuildexecution.actions.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/remotebuildexecution.worker"
    ]
  },
  {
    "permission": "remotebuildexecution.blobs.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/remotebuildexecution.actionCacheWriter",
      "roles/remotebuildexecution.artifactAdmin",
      "roles/remotebuildexecution.artifactCreator",
      "roles/remotebuildexecution.worker"
    ]
  },
  {
    "permission": "remotebuildexecution.botsessions.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/remotebuildexecution.worker"
    ]
  },
  {
    "permission": "remotebuildexecution.botsessions.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/remotebuildexecution.worker"
    ]
  },
  {
    "permission": "remotebuildexecution.instances.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/remotebuildexecution.configurationAdmin"
    ]
  },
  {
    "permission": "remotebuildexecution.instances.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/remotebuildexecution.configurationAdmin",
      "roles/remotebuildexecution.configurationViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "remotebuildexecution.instances.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/remotebuildexecution.configurationAdmin",
      "roles/remotebuildexecution.configurationViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "remotebuildexecution.logstreams.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/remotebuildexecution.artifactAdmin",
      "roles/remotebuildexecution.artifactCreator",
      "roles/remotebuildexecution.logstreamWriter",
      "roles/remotebuildexecution.worker"
    ]
  },
  {
    "permission": "remotebuildexecution.logstreams.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/remotebuildexecution.artifactAdmin",
      "roles/remotebuildexecution.artifactCreator",
      "roles/remotebuildexecution.artifactViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "remotebuildexecution.logstreams.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/remotebuildexecution.artifactAdmin",
      "roles/remotebuildexecution.artifactCreator",
      "roles/remotebuildexecution.logstreamWriter",
      "roles/remotebuildexecution.worker"
    ]
  },
  {
    "permission": "remotebuildexecution.workerpools.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/remotebuildexecution.configurationAdmin"
    ]
  },
  {
    "permission": "remotebuildexecution.workerpools.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/remotebuildexecution.configurationAdmin",
      "roles/remotebuildexecution.configurationViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "remotebuildexecution.workerpools.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/remotebuildexecution.configurationAdmin",
      "roles/remotebuildexecution.configurationViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "remotebuildexecution.workerpools.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/remotebuildexecution.configurationAdmin"
    ]
  },
  {
    "permission": "resourcemanager.projects.move",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/resourcemanager.folderAdmin",
      "roles/resourcemanager.folderMover",
      "roles/resourcemanager.projectMover"
    ]
  },
  {
    "permission": "resourcemanager.projects.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/resourcemanager.projectMover"
    ]
  },
  {
    "permission": "run.configurations.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/run.admin",
      "roles/run.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "run.configurations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/run.admin",
      "roles/run.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "run.locations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/run.admin",
      "roles/run.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "run.revisions.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/run.admin"
    ]
  },
  {
    "permission": "run.revisions.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/run.admin",
      "roles/run.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "run.revisions.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/run.admin",
      "roles/run.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "run.routes.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/run.admin",
      "roles/run.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "run.routes.invoke",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/run.admin",
      "roles/run.invoker",
      "roles/serverless.serviceAgent"
    ]
  },
  {
    "permission": "run.routes.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/run.admin",
      "roles/run.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "run.services.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/run.admin"
    ]
  },
  {
    "permission": "run.services.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/run.admin"
    ]
  },
  {
    "permission": "run.services.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/run.admin",
      "roles/run.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "run.services.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/run.admin",
      "roles/run.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "run.services.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/run.admin",
      "roles/run.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "run.services.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/run.admin"
    ]
  },
  {
    "permission": "runtimeconfig.configs.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin"
    ]
  },
  {
    "permission": "runtimeconfig.configs.delete",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin"
    ]
  },
  {
    "permission": "runtimeconfig.configs.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "runtimeconfig.configs.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/runtimeconfig.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "runtimeconfig.configs.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin"
    ]
  },
  {
    "permission": "runtimeconfig.operations.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "runtimeconfig.operations.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/runtimeconfig.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "runtimeconfig.variables.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin"
    ]
  },
  {
    "permission": "runtimeconfig.variables.delete",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin"
    ]
  },
  {
    "permission": "runtimeconfig.variables.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "runtimeconfig.variables.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/runtimeconfig.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "runtimeconfig.variables.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin"
    ]
  },
  {
    "permission": "runtimeconfig.variables.watch",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "runtimeconfig.waiters.create",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin"
    ]
  },
  {
    "permission": "runtimeconfig.waiters.delete",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin"
    ]
  },
  {
    "permission": "runtimeconfig.waiters.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "runtimeconfig.waiters.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/runtimeconfig.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "runtimeconfig.waiters.update",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin"
    ]
  },
  {
    "permission": "secretmanager.locations.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/secretmanager.admin",
      "roles/secretmanager.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "secretmanager.locations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/secretmanager.admin",
      "roles/secretmanager.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "secretmanager.secrets.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/secretmanager.admin"
    ]
  },
  {
    "permission": "secretmanager.secrets.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/secretmanager.admin"
    ]
  },
  {
    "permission": "secretmanager.secrets.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/secretmanager.admin",
      "roles/secretmanager.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "secretmanager.secrets.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/secretmanager.admin",
      "roles/secretmanager.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "secretmanager.secrets.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/secretmanager.admin",
      "roles/secretmanager.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "secretmanager.secrets.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/secretmanager.admin"
    ]
  },
  {
    "permission": "secretmanager.versions.add",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/secretmanager.admin"
    ]
  },
  {
    "permission": "secretmanager.versions.destroy",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/secretmanager.admin"
    ]
  },
  {
    "permission": "secretmanager.versions.disable",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/secretmanager.admin"
    ]
  },
  {
    "permission": "secretmanager.versions.enable",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/secretmanager.admin"
    ]
  },
  {
    "permission": "secretmanager.versions.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/secretmanager.admin",
      "roles/secretmanager.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "secretmanager.versions.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/secretmanager.admin",
      "roles/secretmanager.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "securitycenter.assets.group",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/securitycenter.adminEditor",
      "roles/securitycenter.adminViewer",
      "roles/securitycenter.assetsViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "securitycenter.assets.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/securitycenter.adminEditor",
      "roles/securitycenter.adminViewer",
      "roles/securitycenter.assetsViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "securitycenter.assets.listAssetPropertyNames",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/securitycenter.adminEditor",
      "roles/securitycenter.adminViewer",
      "roles/securitycenter.assetsViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "securitycenter.assets.runDiscovery",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/securitycenter.adminEditor",
      "roles/securitycenter.assetsDiscoveryRunner"
    ]
  },
  {
    "permission": "securitycenter.assetsecuritymarks.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/securitycenter.adminEditor",
      "roles/securitycenter.assetSecurityMarksWriter"
    ]
  },
  {
    "permission": "securitycenter.findings.group",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/securitycenter.adminEditor",
      "roles/securitycenter.adminViewer",
      "roles/securitycenter.findingsEditor",
      "roles/securitycenter.findingsViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "securitycenter.findings.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/securitycenter.adminEditor",
      "roles/securitycenter.adminViewer",
      "roles/securitycenter.findingsEditor",
      "roles/securitycenter.findingsViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "securitycenter.findings.listFindingPropertyNames",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/securitycenter.adminEditor",
      "roles/securitycenter.adminViewer",
      "roles/securitycenter.findingsEditor",
      "roles/securitycenter.findingsViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "securitycenter.findings.setState",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/securitycenter.adminEditor",
      "roles/securitycenter.findingsEditor",
      "roles/securitycenter.findingsStateSetter"
    ]
  },
  {
    "permission": "securitycenter.findings.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/securitycenter.adminEditor",
      "roles/securitycenter.findingsEditor"
    ]
  },
  {
    "permission": "securitycenter.findingsecuritymarks.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/securitycenter.adminEditor",
      "roles/securitycenter.findingSecurityMarksWriter"
    ]
  },
  {
    "permission": "securitycenter.organizationsettings.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "securitycenter.organizationsettings.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/securitycenter.admin"
    ]
  },
  {
    "permission": "securitycenter.sources.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/securitycenter.adminEditor",
      "roles/securitycenter.adminViewer",
      "roles/securitycenter.findingsEditor",
      "roles/securitycenter.findingsViewer",
      "roles/securitycenter.sourcesAdmin",
      "roles/securitycenter.sourcesEditor",
      "roles/securitycenter.sourcesViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "securitycenter.sources.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/securitycenter.sourcesAdmin",
      "roles/viewer"
    ]
  },
  {
    "permission": "securitycenter.sources.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/securitycenter.adminEditor",
      "roles/securitycenter.adminViewer",
      "roles/securitycenter.findingsEditor",
      "roles/securitycenter.findingsViewer",
      "roles/securitycenter.sourcesAdmin",
      "roles/securitycenter.sourcesEditor",
      "roles/securitycenter.sourcesViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "securitycenter.sources.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/securitycenter.adminEditor",
      "roles/securitycenter.sourcesAdmin",
      "roles/securitycenter.sourcesEditor"
    ]
  },
  {
    "permission": "servicebroker.bindingoperations.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicebroker.bindingoperations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicebroker.bindings.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator"
    ]
  },
  {
    "permission": "servicebroker.bindings.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator"
    ]
  },
  {
    "permission": "servicebroker.bindings.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicebroker.bindings.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicebroker.bindings.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicebroker.catalogs.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator"
    ]
  },
  {
    "permission": "servicebroker.catalogs.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator"
    ]
  },
  {
    "permission": "servicebroker.catalogs.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicebroker.catalogs.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicebroker.catalogs.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicebroker.instanceoperations.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicebroker.instanceoperations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicebroker.instances.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator"
    ]
  },
  {
    "permission": "servicebroker.instances.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator"
    ]
  },
  {
    "permission": "servicebroker.instances.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicebroker.instances.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicebroker.instances.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicebroker.instances.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicebroker.admin",
      "roles/servicebroker.operator"
    ]
  },
  {
    "permission": "serviceconsumermanagement.consumers.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicemanagement.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "serviceconsumermanagement.quota.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicemanagement.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "serviceconsumermanagement.quota.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicemanagement.admin"
    ]
  },
  {
    "permission": "serviceconsumermanagement.tenancyu.addResource",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/serviceconsumermanagement.tenancyUnitsAdmin",
      "roles/servicemanagement.admin"
    ]
  },
  {
    "permission": "serviceconsumermanagement.tenancyu.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/serviceconsumermanagement.tenancyUnitsAdmin",
      "roles/servicemanagement.admin"
    ]
  },
  {
    "permission": "serviceconsumermanagement.tenancyu.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/serviceconsumermanagement.tenancyUnitsAdmin",
      "roles/servicemanagement.admin"
    ]
  },
  {
    "permission": "serviceconsumermanagement.tenancyu.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/serviceconsumermanagement.tenancyUnitsAdmin",
      "roles/serviceconsumermanagement.tenancyUnitsViewer",
      "roles/servicemanagement.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "serviceconsumermanagement.tenancyu.removeResource",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/serviceconsumermanagement.tenancyUnitsAdmin",
      "roles/servicemanagement.admin"
    ]
  },
  {
    "permission": "servicemanagement.consumerSettings.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicemanagement.quotaAdmin",
      "roles/servicemanagement.quotaViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicemanagement.consumerSettings.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/servicemanagement.quotaAdmin",
      "roles/servicemanagement.quotaViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicemanagement.consumerSettings.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicemanagement.quotaAdmin"
    ]
  },
  {
    "permission": "servicemanagement.services.bind",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicemanagement.admin",
      "roles/servicemanagement.serviceConsumer"
    ]
  },
  {
    "permission": "servicemanagement.services.check",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicemanagement.admin",
      "roles/servicemanagement.serviceController"
    ]
  },
  {
    "permission": "servicemanagement.services.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicemanagement.admin"
    ]
  },
  {
    "permission": "servicemanagement.services.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicemanagement.admin"
    ]
  },
  {
    "permission": "servicemanagement.services.get",
    "roles": [
      "roles/editor",
      "roles/endpoints.portalAdmin",
      "roles/owner",
      "roles/servicemanagement.admin",
      "roles/servicemanagement.configEditor",
      "roles/servicemanagement.serviceController",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicemanagement.services.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/servicemanagement.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicemanagement.services.quota",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicemanagement.admin",
      "roles/servicemanagement.serviceController"
    ]
  },
  {
    "permission": "servicemanagement.services.report",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicemanagement.admin",
      "roles/servicemanagement.serviceController"
    ]
  },
  {
    "permission": "servicemanagement.services.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicemanagement.admin",
      "roles/servicemanagement.configEditor"
    ]
  },
  {
    "permission": "servicenetworking.operations.cancel",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicenetworking.networksAdmin"
    ]
  },
  {
    "permission": "servicenetworking.operations.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicenetworking.networksAdmin"
    ]
  },
  {
    "permission": "servicenetworking.operations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/servicenetworking.networksAdmin",
      "roles/viewer"
    ]
  },
  {
    "permission": "servicenetworking.services.addSubnetwork",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicenetworking.networksAdmin"
    ]
  },
  {
    "permission": "serviceusage.apiKeys.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/serviceusage.apiKeysAdmin"
    ]
  },
  {
    "permission": "serviceusage.apiKeys.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/serviceusage.apiKeysAdmin"
    ]
  },
  {
    "permission": "serviceusage.apiKeys.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/serviceusage.apiKeysAdmin",
      "roles/serviceusage.apiKeysViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "serviceusage.apiKeys.getProjectForKey",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/owner",
      "roles/serviceusage.apiKeysAdmin",
      "roles/serviceusage.apiKeysViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "serviceusage.apiKeys.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/serviceusage.apiKeysAdmin",
      "roles/serviceusage.apiKeysViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "serviceusage.apiKeys.regenerate",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/serviceusage.apiKeysAdmin"
    ]
  },
  {
    "permission": "serviceusage.apiKeys.revert",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/serviceusage.apiKeysAdmin"
    ]
  },
  {
    "permission": "serviceusage.apiKeys.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/serviceusage.apiKeysAdmin"
    ]
  },
  {
    "permission": "serviceusage.operations.cancel",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/serviceusage.serviceUsageAdmin"
    ]
  },
  {
    "permission": "serviceusage.operations.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/serviceusage.serviceUsageAdmin"
    ]
  },
  {
    "permission": "serviceusage.operations.get",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/owner",
      "roles/serviceusage.apiKeysAdmin",
      "roles/serviceusage.serviceUsageAdmin",
      "roles/serviceusage.serviceUsageConsumer",
      "roles/serviceusage.serviceUsageViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "serviceusage.operations.list",
    "roles": [
      "roles/editor",
      "roles/firebase.admin",
      "roles/firebase.developAdmin",
      "roles/firebase.developViewer",
      "roles/firebase.growthAdmin",
      "roles/firebase.growthViewer",
      "roles/firebase.qualityAdmin",
      "roles/firebase.qualityViewer",
      "roles/firebase.viewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/serviceusage.serviceUsageAdmin",
      "roles/serviceusage.serviceUsageConsumer",
      "roles/serviceusage.serviceUsageViewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "serviceusage.quotas.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/servicemanagement.quotaAdmin",
      "roles/serviceusage.serviceUsageAdmin"
    ]
  },
  {
    "permission": "source.repos.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/source.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "source.repos.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/source.admin",
      "roles/source.writer"
    ]
  },
  {
    "permission": "spanner.databases.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin"
    ]
  },
  {
    "permission": "spanner.databases.drop",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin"
    ]
  },
  {
    "permission": "spanner.databases.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.databases.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.databases.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin"
    ]
  },
  {
    "permission": "spanner.instanceOperations.cancel",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin"
    ]
  },
  {
    "permission": "spanner.instanceOperations.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin"
    ]
  },
  {
    "permission": "spanner.instanceOperations.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.instanceOperations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/spanner.admin",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.instances.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin"
    ]
  },
  {
    "permission": "spanner.instances.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin"
    ]
  },
  {
    "permission": "spanner.instances.getIamPolicy",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin",
      "roles/viewer"
    ]
  },
  {
    "permission": "spanner.instances.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/spanner.admin"
    ]
  },
  {
    "permission": "stackdriver.projects.get",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/monitoring.viewer",
      "roles/owner",
      "roles/stackdriver.accounts.editor",
      "roles/stackdriver.accounts.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "stackdriver.resourceMetadata.write",
    "roles": [
      "roles/editor",
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/owner",
      "roles/stackdriver.resourceMetadata.writer"
    ]
  },
  {
    "permission": "storage.hmacKeys.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/storage.hmacKeyAdmin"
    ]
  },
  {
    "permission": "storage.hmacKeys.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/storage.hmacKeyAdmin"
    ]
  },
  {
    "permission": "storage.hmacKeys.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/storage.hmacKeyAdmin",
      "roles/viewer"
    ]
  },
  {
    "permission": "storage.hmacKeys.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/storage.hmacKeyAdmin",
      "roles/viewer"
    ]
  },
  {
    "permission": "storage.hmacKeys.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/storage.hmacKeyAdmin"
    ]
  },
  {
    "permission": "storagetransfer.jobs.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/storagetransfer.admin",
      "roles/storagetransfer.user"
    ]
  },
  {
    "permission": "storagetransfer.jobs.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/storagetransfer.admin"
    ]
  },
  {
    "permission": "storagetransfer.jobs.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/storagetransfer.admin",
      "roles/storagetransfer.user",
      "roles/storagetransfer.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "storagetransfer.jobs.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/storagetransfer.admin",
      "roles/storagetransfer.user",
      "roles/storagetransfer.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "storagetransfer.jobs.update",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/storagetransfer.admin",
      "roles/storagetransfer.user"
    ]
  },
  {
    "permission": "storagetransfer.operations.cancel",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/storagetransfer.admin",
      "roles/storagetransfer.user"
    ]
  },
  {
    "permission": "storagetransfer.operations.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/storagetransfer.admin",
      "roles/storagetransfer.user",
      "roles/storagetransfer.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "storagetransfer.operations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/storagetransfer.admin",
      "roles/storagetransfer.user",
      "roles/storagetransfer.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "storagetransfer.operations.pause",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/storagetransfer.admin",
      "roles/storagetransfer.user"
    ]
  },
  {
    "permission": "storagetransfer.operations.resume",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/storagetransfer.admin",
      "roles/storagetransfer.user"
    ]
  },
  {
    "permission": "storagetransfer.projects.getServiceAccount",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/storagetransfer.admin",
      "roles/storagetransfer.user",
      "roles/storagetransfer.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "subscribewithgoogledeveloper.tools.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/subscribewithgoogledeveloper.developer",
      "roles/viewer"
    ]
  },
  {
    "permission": "tpu.acceleratortypes.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/tpu.admin",
      "roles/tpu.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "tpu.acceleratortypes.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/tpu.admin",
      "roles/tpu.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "tpu.locations.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/tpu.admin",
      "roles/tpu.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "tpu.locations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/tpu.admin",
      "roles/tpu.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "tpu.nodes.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/tpu.admin"
    ]
  },
  {
    "permission": "tpu.nodes.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/tpu.admin"
    ]
  },
  {
    "permission": "tpu.nodes.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/tpu.admin",
      "roles/tpu.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "tpu.nodes.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/tpu.admin",
      "roles/tpu.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "tpu.nodes.reimage",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/tpu.admin"
    ]
  },
  {
    "permission": "tpu.nodes.reset",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/tpu.admin"
    ]
  },
  {
    "permission": "tpu.nodes.start",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/tpu.admin"
    ]
  },
  {
    "permission": "tpu.nodes.stop",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/tpu.admin"
    ]
  },
  {
    "permission": "tpu.operations.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/tpu.admin",
      "roles/tpu.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "tpu.operations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/tpu.admin",
      "roles/tpu.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "tpu.tensorflowversions.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/tpu.admin",
      "roles/tpu.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "tpu.tensorflowversions.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/tpu.admin",
      "roles/tpu.viewer",
      "roles/viewer"
    ]
  },
  {
    "permission": "vmmigration.deployments.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/vmmigration.admin"
    ]
  },
  {
    "permission": "vmmigration.deployments.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/viewer",
      "roles/vmmigration.admin",
      "roles/vmmigration.viewer"
    ]
  },
  {
    "permission": "vmmigration.deployments.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer",
      "roles/vmmigration.admin",
      "roles/vmmigration.viewer"
    ]
  },
  {
    "permission": "vpcaccess.connectors.create",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/vpcaccess.admin"
    ]
  },
  {
    "permission": "vpcaccess.connectors.delete",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/vpcaccess.admin"
    ]
  },
  {
    "permission": "vpcaccess.connectors.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/viewer",
      "roles/vpaccess.user",
      "roles/vpaccess.viewer",
      "roles/vpcaccess.admin"
    ]
  },
  {
    "permission": "vpcaccess.connectors.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer",
      "roles/vpaccess.user",
      "roles/vpaccess.viewer",
      "roles/vpcaccess.admin"
    ]
  },
  {
    "permission": "vpcaccess.connectors.use",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/viewer",
      "roles/vpaccess.user",
      "roles/vpcaccess.admin"
    ]
  },
  {
    "permission": "vpcaccess.locations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer",
      "roles/vpaccess.user",
      "roles/vpaccess.viewer",
      "roles/vpcaccess.admin"
    ]
  },
  {
    "permission": "vpcaccess.operations.get",
    "roles": [
      "roles/editor",
      "roles/owner",
      "roles/viewer",
      "roles/vpaccess.user",
      "roles/vpaccess.viewer",
      "roles/vpcaccess.admin"
    ]
  },
  {
    "permission": "vpcaccess.operations.list",
    "roles": [
      "roles/editor",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/viewer",
      "roles/vpaccess.user",
      "roles/vpaccess.viewer",
      "roles/vpcaccess.admin"
    ]
  },
  {
    "permission": "firebase.billingPlans.update",
    "roles": [
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebase.links.create",
    "roles": [
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebase.links.delete",
    "roles": [
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebase.links.update",
    "roles": [
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebase.projects.delete",
    "roles": [
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasedynamiclinks.destinations.update",
    "roles": [
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebasedynamiclinks.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebasedynamiclinks.domains.delete",
    "roles": [
      "roles/firebase.admin",
      "roles/firebase.growthAdmin",
      "roles/firebasedynamiclinks.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseextensions.configs.create",
    "roles": [
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseextensions.configs.delete",
    "roles": [
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "firebaseextensions.configs.update",
    "roles": [
      "roles/firebase.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "genomics.datasets.getIamPolicy",
    "roles": [
      "roles/genomics.admin",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "genomics.datasets.setIamPolicy",
    "roles": [
      "roles/genomics.admin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "gkehub.memberships.setIamPolicy",
    "roles": [
      "roles/gkehub.admin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.datasets.setIamPolicy",
    "roles": [
      "roles/healthcare.datasetAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.dicomStores.setIamPolicy",
    "roles": [
      "roles/healthcare.dicomStoreAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.fhirStores.setIamPolicy",
    "roles": [
      "roles/healthcare.fhirStoreAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "healthcare.hl7V2Stores.setIamPolicy",
    "roles": [
      "roles/healthcare.hl7V2StoreAdmin",
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "iam.roles.create",
    "roles": [
      "roles/iam.organizationRoleAdmin",
      "roles/iam.roleAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "iam.roles.delete",
    "roles": [
      "roles/iam.organizationRoleAdmin",
      "roles/iam.roleAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "iam.roles.undelete",
    "roles": [
      "roles/iam.organizationRoleAdmin",
      "roles/iam.roleAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "iam.roles.update",
    "roles": [
      "roles/iam.organizationRoleAdmin",
      "roles/iam.roleAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "resourcemanager.organizations.getIamPolicy",
    "roles": [
      "roles/iam.organizationRoleAdmin",
      "roles/iam.organizationRoleViewer",
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/resourcemanager.organizationAdmin"
    ]
  },
  {
    "permission": "deploymentmanager.deployments.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "deploymentmanager.deployments.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "dns.policies.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "dns.policies.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "iam.serviceAccounts.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.serviceAccountAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.tunnel.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/iap.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.tunnel.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iap.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.tunnelInstances.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/iap.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.tunnelInstances.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iap.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.tunnelZones.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/iap.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.tunnelZones.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iap.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.web.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/iap.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.web.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iap.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.webServiceVersions.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/iap.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.webServiceVersions.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iap.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.webServices.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/iap.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.webServices.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iap.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.webTypes.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/iap.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "iap.webTypes.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iap.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "managedidentities.domains.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/managedidentities.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "ml.jobs.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/ml.admin",
      "roles/ml.jobOwner",
      "roles/owner"
    ]
  },
  {
    "permission": "ml.models.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/ml.admin",
      "roles/ml.modelOwner",
      "roles/owner"
    ]
  },
  {
    "permission": "notebooks.environments.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/notebooks.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "notebooks.instances.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/notebooks.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "proximitybeacon.beacons.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "proximitybeacon.beacons.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "proximitybeacon.namespaces.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner"
    ]
  },
  {
    "permission": "proximitybeacon.namespaces.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner"
    ]
  },
  {
    "permission": "pubsub.snapshots.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/pubsub.admin"
    ]
  },
  {
    "permission": "pubsub.snapshots.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/pubsub.admin"
    ]
  },
  {
    "permission": "pubsub.topics.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/pubsub.admin"
    ]
  },
  {
    "permission": "pubsub.topics.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/pubsub.admin"
    ]
  },
  {
    "permission": "resourcemanager.folders.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/resourcemanager.folderAdmin",
      "roles/resourcemanager.folderEditor",
      "roles/resourcemanager.folderIamAdmin",
      "roles/resourcemanager.organizationAdmin"
    ]
  },
  {
    "permission": "resourcemanager.folders.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/resourcemanager.folderAdmin",
      "roles/resourcemanager.folderIamAdmin",
      "roles/resourcemanager.organizationAdmin"
    ]
  },
  {
    "permission": "resourcemanager.organizations.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/resourcemanager.organizationAdmin"
    ]
  },
  {
    "permission": "resourcemanager.projects.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/resourcemanager.folderAdmin",
      "roles/resourcemanager.organizationAdmin",
      "roles/resourcemanager.projectIamAdmin"
    ]
  },
  {
    "permission": "run.services.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/run.admin"
    ]
  },
  {
    "permission": "runtimeconfig.configs.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/runtimeconfig.admin"
    ]
  },
  {
    "permission": "runtimeconfig.configs.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin"
    ]
  },
  {
    "permission": "runtimeconfig.variables.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/runtimeconfig.admin"
    ]
  },
  {
    "permission": "runtimeconfig.variables.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin"
    ]
  },
  {
    "permission": "runtimeconfig.waiters.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/runtimeconfig.admin"
    ]
  },
  {
    "permission": "runtimeconfig.waiters.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/runtimeconfig.admin"
    ]
  },
  {
    "permission": "secretmanager.secrets.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/secretmanager.admin"
    ]
  },
  {
    "permission": "securitycenter.sources.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/securitycenter.admin",
      "roles/securitycenter.sourcesAdmin"
    ]
  },
  {
    "permission": "servicebroker.bindings.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/servicebroker.admin"
    ]
  },
  {
    "permission": "servicebroker.catalogs.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/servicebroker.admin"
    ]
  },
  {
    "permission": "servicebroker.instances.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/servicebroker.admin"
    ]
  },
  {
    "permission": "servicemanagement.consumerSettings.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/servicemanagement.quotaAdmin",
      "roles/servicemanagement.quotaViewer"
    ]
  },
  {
    "permission": "servicemanagement.consumerSettings.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/servicemanagement.quotaAdmin"
    ]
  },
  {
    "permission": "servicemanagement.services.getIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/iam.securityReviewer",
      "roles/owner",
      "roles/servicemanagement.admin"
    ]
  },
  {
    "permission": "servicemanagement.services.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/servicemanagement.admin"
    ]
  },
  {
    "permission": "source.repos.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/source.admin"
    ]
  },
  {
    "permission": "spanner.databases.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/spanner.admin",
      "roles/spanner.databaseAdmin"
    ]
  },
  {
    "permission": "spanner.instances.setIamPolicy",
    "roles": [
      "roles/iam.securityAdmin",
      "roles/owner",
      "roles/spanner.admin"
    ]
  },
  {
    "permission": "iam.serviceAccounts.implicitDelegation",
    "roles": [
      "roles/iam.serviceAccountTokenCreator"
    ]
  },
  {
    "permission": "iam.serviceAccounts.signJwt",
    "roles": [
      "roles/iam.serviceAccountTokenCreator"
    ]
  },
  {
    "permission": "iap.webServiceVersions.accessViaIAP",
    "roles": [
      "roles/iap.httpsResourceAccessor"
    ]
  },
  {
    "permission": "iap.tunnelInstances.accessViaIAP",
    "roles": [
      "roles/iap.tunnelResourceAccessor",
      "roles/owner"
    ]
  },
  {
    "permission": "logging.exclusions.create",
    "roles": [
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/owner"
    ]
  },
  {
    "permission": "logging.exclusions.delete",
    "roles": [
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/owner"
    ]
  },
  {
    "permission": "logging.exclusions.update",
    "roles": [
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/owner"
    ]
  },
  {
    "permission": "logging.sinks.create",
    "roles": [
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/owner"
    ]
  },
  {
    "permission": "logging.sinks.delete",
    "roles": [
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/owner"
    ]
  },
  {
    "permission": "logging.sinks.update",
    "roles": [
      "roles/logging.admin",
      "roles/logging.configWriter",
      "roles/owner"
    ]
  },
  {
    "permission": "monitoring.notificationChannels.getVerificationCode",
    "roles": [
      "roles/monitoring.admin",
      "roles/owner"
    ]
  },
  {
    "permission": "stackdriver.projects.edit",
    "roles": [
      "roles/monitoring.admin",
      "roles/monitoring.editor",
      "roles/owner",
      "roles/stackdriver.accounts.editor"
    ]
  },
  {
    "permission": "orgpolicy.policy.set",
    "roles": [
      "roles/orgpolicy.policyAdmin"
    ]
  },
  {
    "permission": "appengine.applications.create",
    "roles": [
      "roles/owner"
    ]
  },
  {
    "permission": "remotebuildexecution.instances.delete",
    "roles": [
      "roles/owner",
      "roles/remotebuildexecution.configurationAdmin"
    ]
  },
  {
    "permission": "remotebuildexecution.workerpools.delete",
    "roles": [
      "roles/owner",
      "roles/remotebuildexecution.configurationAdmin"
    ]
  },
  {
    "permission": "resourcemanager.projects.delete",
    "roles": [
      "roles/owner",
      "roles/resourcemanager.projectDeleter"
    ]
  },
  {
    "permission": "resourcemanager.projects.undelete",
    "roles": [
      "roles/owner"
    ]
  },
  {
    "permission": "resourcemanager.projects.updateLiens",
    "roles": [
      "roles/owner",
      "roles/resourcemanager.lienModifier"
    ]
  },
  {
    "permission": "secretmanager.versions.access",
    "roles": [
      "roles/owner",
      "roles/secretmanager.admin",
      "roles/secretmanager.secretAccessor"
    ]
  },
  {
    "permission": "servicebroker.catalogs.validate",
    "roles": [
      "roles/owner",
      "roles/servicebroker.admin"
    ]
  },
  {
    "permission": "source.repos.create",
    "roles": [
      "roles/owner",
      "roles/source.admin"
    ]
  },
  {
    "permission": "source.repos.delete",
    "roles": [
      "roles/owner",
      "roles/source.admin"
    ]
  },
  {
    "permission": "source.repos.getProjectConfig",
    "roles": [
      "roles/owner",
      "roles/source.admin"
    ]
  },
  {
    "permission": "source.repos.updateProjectConfig",
    "roles": [
      "roles/owner",
      "roles/source.admin"
    ]
  },
  {
    "permission": "source.repos.updateRepoConfig",
    "roles": [
      "roles/owner",
      "roles/source.admin"
    ]
  },
  {
    "permission": "threatdetection.detectorSettings.clear",
    "roles": [
      "roles/owner",
      "roles/threatdetection.editor"
    ]
  },
  {
    "permission": "threatdetection.detectorSettings.get",
    "roles": [
      "roles/owner",
      "roles/threatdetection.editor",
      "roles/threatdetection.viewer"
    ]
  },
  {
    "permission": "threatdetection.detectorSettings.update",
    "roles": [
      "roles/owner",
      "roles/threatdetection.editor"
    ]
  },
  {
    "permission": "threatdetection.sinkSettings.get",
    "roles": [
      "roles/owner",
      "roles/threatdetection.editor",
      "roles/threatdetection.viewer"
    ]
  },
  {
    "permission": "threatdetection.sinkSettings.update",
    "roles": [
      "roles/owner",
      "roles/threatdetection.editor"
    ]
  },
  {
    "permission": "threatdetection.sourceSettings.get",
    "roles": [
      "roles/owner",
      "roles/threatdetection.editor",
      "roles/threatdetection.viewer"
    ]
  },
  {
    "permission": "threatdetection.sourceSettings.update",
    "roles": [
      "roles/owner",
      "roles/threatdetection.editor"
    ]
  },
  {
    "permission": "remotebuildexecution.actions.set",
    "roles": [
      "roles/remotebuildexecution.actionCacheWriter"
    ]
  },
  {
    "permission": "resourcemanager.folders.create",
    "roles": [
      "roles/resourcemanager.folderAdmin",
      "roles/resourcemanager.folderCreator"
    ]
  },
  {
    "permission": "resourcemanager.folders.delete",
    "roles": [
      "roles/resourcemanager.folderAdmin",
      "roles/resourcemanager.folderEditor"
    ]
  },
  {
    "permission": "resourcemanager.folders.move",
    "roles": [
      "roles/resourcemanager.folderAdmin",
      "roles/resourcemanager.folderMover"
    ]
  },
  {
    "permission": "resourcemanager.folders.undelete",
    "roles": [
      "roles/resourcemanager.folderAdmin",
      "roles/resourcemanager.folderEditor"
    ]
  },
  {
    "permission": "resourcemanager.folders.update",
    "roles": [
      "roles/resourcemanager.folderAdmin",
      "roles/resourcemanager.folderEditor"
    ]
  },
  {
    "permission": "resourcemanager.projects.create",
    "roles": [
      "roles/resourcemanager.projectCreator"
    ]
  }
]
